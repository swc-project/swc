{
    "name": "swc-dev",
    "displayName": "swc developement",
    "description": "",
    "version": "0.0.3",
    "preview": true,
    "publisher": "swc",
    "engines": {
        "vscode": "^1.19.0"
    },
    "categories": [
        "Debuggers",
        "Other"
    ],
    "activationEvents": [
        "onCommand:workbench.action.tasks.runTask",
        "onCommand:swc.dev.uiTest.update",
        "onLanguage:rust-ui-test-output",
        "onLanguage:rust",
        "onDebug",
        "workspaceContains:**/Cargo.toml"
    ],
    "main": "./out/extension",
    "extensionDependencies": [
        "ms-vscode.cpptools",
        "rust-lang.rust"
    ],
    "contributes": {
        "breakpoints": [
            {
                "language": "rust"
            }
        ],
        "views": {
            "explorer": [
                {
                    "id": "cratesExplorer",
                    "name": "Crates",
                    "when": "isCargoProject"
                }
            ]
        },
        "commands": [
            {
                "command": "swc.dev.uiTest.update",
                "title": "Update reference",
                "category": "Swc"
            },
            {
                "command": "rust.cratesExplorer.run",
                "title": "Run",
                "icon": {
                    "light": "resources/media/light/run.svg",
                    "dark": "resources/media/dark/run.svg"
                },
                "category": "Rust"
            },
            {
                "command": "rust.cratesExplorer.debug",
                "title": "Debug",
                "icon": {
                    "light": "resources/media/light/debug.svg",
                    "dark": "resources/media/dark/debug.svg"
                },
                "category": "Rust"
            }
        ],
        "debuggers": [
            {
                "type": "rust",
                "label": "rust: Launch (GDB / LLDB / VSDebug)",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "crate"
                        ],
                        "properties": {
                            "crate": {
                                "type": "string",
                                "decsription": "Crate name.",
                                "default": ""
                            },
                            "targets": {
                                "type": "string",
                                "decsription": "e.g. ",
                                "default": ""
                            },
                            "cwd": {
                                "type": "string",
                                "description": "The working directory of the target",
                                "default": "."
                            },
                            "args": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "JSON array of command line arguments to pass to the program when it is launched. Example [\"arg1\", \"arg2\"].",
                                "default": []
                            },
                            "env": {
                                "type": "object",
                                "description": "Environment variables to add to the environment for the program. Example: { \"RUST_LOG\": \"debug\" }.",
                                "properties": {
                                    "name": "string",
                                    "value": "string"
                                },
                                "default": {}
                            },
                            "pretty": {
                                "type": "boolean",
                                "description": "Enable pretty priting. Enabled by default.",
                                "default": true
                            },
                            "setupCommands": {
                                "type": "array",
                                "description": "One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].\n\nNote that recommended way to enable pretty printing is specifying \"pretty: true,\" instead of using this",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "text": {
                                            "type": "string",
                                            "description": "The debugger command to execute.",
                                            "default": ""
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Optional description for the command.",
                                            "default": ""
                                        },
                                        "ignoreFailures": {
                                            "type": "boolean",
                                            "description": "If true, failures from the command should be ignored. Default value is false.",
                                            "default": "false"
                                        }
                                    }
                                },
                                "default": []
                            },
                            "launchCompleteCommand": {
                                "enum": [
                                    "exec-run",
                                    "exec-continue",
                                    "None"
                                ],
                                "description": "The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".",
                                "default": "exec-run"
                            },
                            "visualizerFile": {
                                "type": "string",
                                "description": ".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.",
                                "default": ""
                            },
                            "showDisplayString": {
                                "type": "boolean",
                                "description": "When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.",
                                "default": "true"
                            },
                            "MIMode": {
                                "type": "string",
                                "description": "Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".\n\n This is ignored if configured rustup toolchain is msvc.",
                                "default": ""
                            },
                            "miDebuggerPath": {
                                "type": "string",
                                "description": "The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.",
                                "default": ""
                            },
                            "miDebuggerServerAddress": {
                                "type": "string",
                                "description": "Network address of the MI Debugger Server to connect to (example: localhost:1234).",
                                "default": "serveraddress:port"
                            },
                            "stopOnEntry": {
                                "type": "boolean",
                                "description": "Automatically stop after launch.",
                                "default": true
                            },
                            "debugServerPath": {
                                "type": "string",
                                "description": "Optional full path to debug server to launch. Defaults to null.",
                                "default": ""
                            },
                            "debugServerArgs": {
                                "type": "string",
                                "description": "Optional debug server args. Defaults to null.",
                                "default": ""
                            },
                            "serverStarted": {
                                "type": "string",
                                "description": "Optional server-started pattern to look for in the debug server output. Defaults to null.",
                                "default": ""
                            },
                            "filterStdout": {
                                "type": "boolean",
                                "description": "Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.",
                                "default": "true"
                            },
                            "filterStderr": {
                                "type": "boolean",
                                "description": "Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.",
                                "default": "false"
                            },
                            "serverLaunchTimeout": {
                                "type": "integer",
                                "description": "Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.",
                                "default": "10000"
                            },
                            "coreDumpPath": {
                                "type": "string",
                                "description": "Optional full path to a core dump file for the specified program. Defaults to null.",
                                "default": ""
                            },
                            "externalConsole": {
                                "type": "boolean",
                                "description": "If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.",
                                "default": "false"
                            },
                            "sourceFileMap": {
                                "type": "object",
                                "description": "Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'",
                                "default": {
                                    "<source-path>": "<target-path>"
                                }
                            },
                            "logging": {
                                "type": "object",
                                "description": "Optional flags to determine what types of messages should be logged to the Debug Console.",
                                "default": {},
                                "properties": {
                                    "exceptions": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.",
                                        "default": true
                                    },
                                    "moduleLoad": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.",
                                        "default": true
                                    },
                                    "programOutput": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.",
                                        "default": true
                                    },
                                    "engineLogging": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.",
                                        "default": false
                                    },
                                    "trace": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.",
                                        "default": false
                                    },
                                    "traceResponse": {
                                        "type": "boolean",
                                        "description": "Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.",
                                        "default": false
                                    }
                                }
                            },
                            "pipeTransport": {
                                "description": "When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).",
                                "type": "object",
                                "default": {
                                    "pipeCwd": "${workspaceRoot}",
                                    "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                                    "pipeArgs": [],
                                    "debuggerPath": "enter the path for the debugger on the target machine, for example /usr/bin/gdb"
                                },
                                "properties": {
                                    "pipeCwd": {
                                        "type": "string",
                                        "description": "The fully qualified path to the working directory for the pipe program.",
                                        "default": "/usr/bin"
                                    },
                                    "pipeProgram": {
                                        "type": "string",
                                        "description": "The fully qualified pipe command to execute.",
                                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                                    },
                                    "pipeArgs": {
                                        "type": "array",
                                        "description": "Command line arguments passed to the pipe program to configure the connection.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": []
                                    },
                                    "debuggerPath": {
                                        "type": "string",
                                        "description": "The full path to the debugger on the target machine, for example /usr/bin/gdb.",
                                        "default": "The full path to the debugger on the target machine, for example /usr/bin/gdb."
                                    },
                                    "pipeEnv": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "Environment variables passed to the pipe program.",
                                        "default": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "configurationSnippets": [
                    {
                        "label": "rust: Launch (GDB / LLDB / VSDebug)",
                        "description": "A new configuration for launching a mock debug program",
                        "body": {
                            "type": "rust",
                            "request": "launch",
                            "name": "${2:Launch Program}",
                            "program": "^\"\\${workspaceFolder}/${1:Program}\""
                        }
                    }
                ]
            }
        ],
        "taskDefinitions": [
            {
                "type": "cargo",
                "required": [
                    "task"
                ],
                "properties": {
                    "task": {
                        "type": "string",
                        "description": "The cargo task to customize"
                    },
                    "crate": {
                        "type": "string",
                        "description": "Name of the crate"
                    }
                }
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "command": "swc.dev.uiTest.update",
                    "group": "navigation",
                    "when": "resourceLangId == rust-ui-test-output"
                }
            ],
            "commandPalette": [
                {
                    "command": "swc.dev.uiTest.update",
                    "when": "resourceLangId == rust-ui-test-output"
                }
            ],
            "view/title": [
                {
                    "command": "rust.cratesExplorer.run",
                    "when": "view == cratesExplorer && viewItem != crate && viewItem != lib && viewItem != deps && viewItem != examples",
                    "group": "navigation@0"
                },
                {
                    "command": "rust.cratesExplorer.debug",
                    "when": "view == cratesExplorer && viewItem != crate && viewItem != lib && viewItem != deps && viewItem != examples && viewItem != testFiles && viewItem != benchFiles",
                    "group": "navigation@1"
                }
            ],
            "view/item/context": [
                {
                    "command": "rust.cratesExplorer.run",
                    "when": "view == cratesExplorer && viewItem != crate && viewItem != lib && viewItem != deps && viewItem != examples",
                    "group": "testExplorer@0"
                },
                {
                    "command": "rust.cratesExplorer.debug",
                    "when": "view == cratesExplorer && viewItem != crate && viewItem != lib && viewItem != deps && viewItem != examples && viewItem != testFiles && viewItem != benchFiles",
                    "group": "testExplorer@1"
                }
            ]
        },
        "languages": [
            {
                "id": "rust-ui-test-output",
                "aliases": [
                    "Rust ui test"
                ],
                "extensions": [
                    ".stdout",
                    ".stderr"
                ]
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "dependencies": {
        "JSONStream": "^1.3.2",
        "which": "^1.3.0"
    },
    "devDependencies": {
        "typescript": "^2.6.1",
        "vscode": "^1.1.10",
        "@types/node": "^7.0.43",
        "@types/mocha": "^2.2.42"
    }
}