name: Cargo

on: [push, pull_request]

env:
  RUST_MIN_STACK: 16777216
  CARGO_INCREMENTAL: 0
  PATH: "$PATH:$HOME/npm/bin"

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  test-debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install node dependencies
        run: |
          npm config set prefix ~/npm
          npm i browserslist
          npm i -g jest

      # Ensure that all components all compilable.
      - name: Run cargo check for all targets
        run: cargo check --all --all-targets

      - name: Run cargo test
        run: cargo test --all

  test-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Install node dependencies
        run: |
          npm config set prefix ~/npm
          npm i browserslist
          npm i -g jest

      - name: Run cargo test
        run: cargo test -p swc_ecma_parser --release

  #
  deploy-docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - test-debug
      - test-release
    steps:
      - uses: actions/checkout@v2
      - name: Create rustdoc
        run: cargo doc
