language: shell
sudo: false
osx_image: xcode11.3
services:
  - docker

branches:
  except:
    - master

install:
  # Install lastest nvm
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then curl -o /tmp/nvm.zip -L https://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-noinstall.zip ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cp ./scripts/ci/settings.txt C:\\ ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then mkdir C:\\nvm-root ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then unzip /tmp/nvm.zip -d C:\\nvm-root ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cp ./scripts/ci/settings.txt C:\\nvm-root\\ ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH="/c/nvm-root:/c/nodejs:$PATH" ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export NVM_SYMLINK='C:\\nodejs' ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then nvm root C:\\nvm-root ; fi

  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then rm -rf ~/.nvm ; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then git clone https://github.com/creationix/nvm.git ~/.nvm ; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then source ~/.nvm/nvm.sh ; fi
  - nvm version
  - nvm install 12.11.0
  - nvm install 11.6.0
  - nvm install 10.15.0
  - nvm install 8.15.0
  # - nvm install 6.16.0
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then nvm on ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ls -al '/c/nodejs' ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ls -alL '/c/nodejs' ; fi
  - which node
  - node --version
  - which npm
  # - npm --version

  # Install nightly rust
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then (curl https://sh.rustup.rs -sSf > /tmp/rustup.sh); fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then sh /tmp/rustup.sh --default-toolchain none -y; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then export PATH="$HOME/.cargo/bin:$PATH"; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then rustup toolchain install nightly; fi

  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then curl -sSf -o rustup-init.exe https://win.rustup.rs; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then rustup-init.exe -y --default-toolchain nightly-x86_64-pc-windows-msvc; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then set PATH=%PATH%;C:\Users\appveyor\.cargo\bin;C:\\nvm-root;C:\nodejs; fi

  - ls -al ~/.rustup/toolchains

# Need to cache the whole `.cargo` directory to keep .crates.toml for
# cargo-update to work
cache:
  npm: true
  directories:
    - /home/travis/.cargo
# But don't cache the cargo registry
# before_cache:
#   - rm -rf /home/travis/.cargo/registry

script:
  - travis_wait 30 bash ./scripts/ci/build.sh 14.2.0 83
  - travis_wait 30 bash ./scripts/ci/build.sh 13.3.0 79
  - travis_wait 30 bash ./scripts/ci/build.sh 12.11.0 72
  - travis_wait 30 bash ./scripts/ci/build.sh 11.6.0 67
  - travis_wait 30 bash ./scripts/ci/build.sh 10.15.0 64
  - travis_wait 30 bash ./scripts/ci/build.sh 8.15.0 57

deploy:
  provider: releases
  api_key: $GH_TOKEN
  file:
    # - $SWC_NAME-48.node
    - $SWC_NAME-57.node
    - $SWC_NAME-64.node
    - $SWC_NAME-67.node
    - $SWC_NAME-72.node
    - $SWC_NAME-79.node
    - $SWC_NAME-83.node
  skip_cleanup: true
  on:
    tags: true

matrix:
  include:
    # - os: osx
    #   osx_image: xcode11.3
    #   env: SWC_NAME=darwin-x64

    # - os: windows
    #   env: SWC_NAME=win32-x64

    - os: linux
      env:
        - SWC_NAME=linux-x64
        - NODE_ABI=83
      install:
        - ./scripts/ci/linux/start-docker.sh 14.2.0 83 14.x
      script:
        - travis_wait 30 docker exec target-83 sh ./scripts/ci/linux/build.sh 83

    - os: linux
      env:
        - SWC_NAME=linux-x64
        - NODE_ABI=79
      install:
        - ./scripts/ci/linux/start-docker.sh 13.3.0 79 13.x
      script:
        - travis_wait 30 docker exec target-79 sh ./scripts/ci/linux/build.sh 79

    - os: linux
      env:
        - SWC_NAME=linux-x64
        - NODE_ABI=72
      install:
        - ./scripts/ci/linux/start-docker.sh 12.12 72 12.x
      script:
        - travis_wait 30 docker exec target-72 sh ./scripts/ci/linux/build.sh 72

    # - os: linux
    #   env:
    #     - SWC_NAME=linux-x64
    #     - NODE_ABI=67
    #   install:
    #     - ./scripts/ci/linux/start-docker.sh 11.12 67 11.x
    #   script:
    #     - travis_wait 30 docker exec target-67 sh ./scripts/ci/linux/build.sh 67

    - os: linux
      env:
        - SWC_NAME=linux-x64
        - NODE_ABI=64
      install:
        - ./scripts/ci/linux/start-docker.sh 10 64 10.x
      script:
        - travis_wait 30 docker exec target-64 sh ./scripts/ci/linux/build.sh 64

    - os: linux
      env:
        - SWC_NAME=linux-x64
        - NODE_ABI=57
      install:
        - ./scripts/ci/linux/start-docker.sh 8 57 8.x
      script:
        - travis_wait 30 docker exec target-57 sh ./scripts/ci/linux/build.sh 57

env:
  - CARGO_INCREMENTAL=0

notifications:
  slack:
    secure: Zof7PCQoe1TiksHUAU3hg3vwFBpxCvtJoGl0OlERHaKMtcMGF0SpcrYOtYHfjXXJx8RPW8nh/4A9sMp/ljoKP9K17IycwAoeGCqoE8fbqXtTf6IgIK+oKmMbFGLRcZLM0AtHv9xVP80WInNwQx+Si9TuuBL/yqBoOLYEc9o9I0euC7GM5DLD8/FXZeR28M+AraBCdFDUpTmEibWIc90pCHWPM7jWFVbCHrO/UqlwbficoNNRJiXYtVPw0dLGHI5feDP7lZMXRDggfwXaKa3IYPn0aEIrm8cM4RPd8LabuUmplZPu/+bBZnYAkB+JGPpC999eSnDTkI8GxPSJVVG3D5sbDGNB3XK/KKWT/Tn1GdJp0TJunYG5VGY7FiXs31J1xLqxVaBWEiEusC/TjUF2mK2oWSo9m5XVNGzN4XiMMzug5fmS0gbV283qnYY0nH5lDxeoBixeSqBkKPpMz4wbdV7kXkaTM5kPLQUw61+jw6AeKDDb6KcMt4xe4+/xwJg+Gbiey1ZcCwltcE79vqkoxwClJFvXA45UD96iylWiYx1pGQgBNs68v5mQgWF7M+M3UkeMHXsyJ+zKn6yxchumyvaQ9euW0AhY/GRkPZblfm6Lznk6qK2V/lOR6wsO5T+4TpIDAsIYgK+fFJioNbWujueXCfNvbVr2FntcwOH5Zmk=
