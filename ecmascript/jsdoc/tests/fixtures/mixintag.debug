[
    JsDoc {
        span: Span {
            lo: BytePos(
                0,
            ),
            hi: BytePos(
                0,
            ),
            ctxt: #0,
        },
        description: Str {
            span: Span {
                lo: BytePos(
                    0,
                ),
                hi: BytePos(
                    137,
                ),
                ctxt: #0,
            },
            value: Atom('*
             * This provides methods used for event handling. It's not meant to
             * be used directly, except as a provider of related methods.
             *
             *' type=dynamic),
            has_escape: false,
        },
        tags: [
            TagItem {
                span: Span {
                    lo: BytePos(
                        0,
                    ),
                    hi: BytePos(
                        5,
                    ),
                    ctxt: #0,
                },
                tag_name: Str {
                    span: Span {
                        lo: BytePos(
                            0,
                        ),
                        hi: BytePos(
                            5,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('mixin' type=inline),
                    has_escape: false,
                },
                tag: Mixin(
                    MixinTag {
                        span: Span {
                            lo: BytePos(
                                0,
                            ),
                            hi: BytePos(
                                5,
                            ),
                            ctxt: #0,
                        },
                        name: Str {
                            span: Span {
                                lo: BytePos(
                                    0,
                                ),
                                hi: BytePos(
                                    0,
                                ),
                                ctxt: #0,
                            },
                            value: Atom('' type=static),
                            has_escape: false,
                        },
                    },
                ),
            },
        ],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                172,
            ),
            hi: BytePos(
                172,
            ),
            ctxt: #0,
        },
        description: Str {
            span: Span {
                lo: BytePos(
                    172,
                ),
                hi: BytePos(
                    190,
                ),
                ctxt: #0,
            },
            value: Atom('* fires something.' type=dynamic),
            has_escape: false,
        },
        tags: [],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                227,
            ),
            hi: BytePos(
                227,
            ),
            ctxt: #0,
        },
        description: Str {
            span: Span {
                lo: BytePos(
                    227,
                ),
                hi: BytePos(
                    246,
                ),
                ctxt: #0,
            },
            value: Atom('* handles a signal.' type=dynamic),
            has_escape: false,
        },
        tags: [],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                279,
            ),
            hi: BytePos(
                279,
            ),
            ctxt: #0,
        },
        description: Str {
            span: Span {
                lo: BytePos(
                    279,
                ),
                hi: BytePos(
                    283,
                ),
                ctxt: #0,
            },
            value: Atom('*
             *' type=inline),
            has_escape: false,
        },
        tags: [
            TagItem {
                span: Span {
                    lo: BytePos(
                        279,
                    ),
                    hi: BytePos(
                        290,
                    ),
                    ctxt: #0,
                },
                tag_name: Str {
                    span: Span {
                        lo: BytePos(
                            279,
                        ),
                        hi: BytePos(
                            290,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('constructor' type=static),
                    has_escape: false,
                },
                tag: Class(
                    ClassTag {
                        span: Span {
                            lo: BytePos(
                                279,
                            ),
                            hi: BytePos(
                                290,
                            ),
                            ctxt: #0,
                        },
                        ty: Some(
                            Str {
                                span: Span {
                                    lo: BytePos(
                                        279,
                                    ),
                                    hi: BytePos(
                                        296,
                                    ),
                                    ctxt: #0,
                                },
                                value: Atom('* @mixes Eventful' type=dynamic),
                                has_escape: false,
                            },
                        ),
                        name: None,
                    },
                ),
            },
        ],
    },
]
