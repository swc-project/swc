Warning, the following targets are using a decimal version:

  electron: 0.36

We recommend using a string for minor/patch versions to avoid numbers like 6.10
getting parsed as 6.1, which can lead to unexpected behavior.

@babel/preset-env: `DEBUG` option

Using targets:
{
  "electron": "0.36"
}

Using modules transform: auto

Using plugins:
  transform-function-name { "electron":"0.36" }
  transform-for-of { "electron":"0.36" }
  transform-sticky-regex { "electron":"0.36" }
  transform-dotall-regex { "electron":"0.36" }
  transform-unicode-regex { "electron":"0.36" }
  transform-parameters { "electron":"0.36" }
  transform-destructuring { "electron":"0.36" }
  transform-block-scoping { "electron":"0.36" }
  transform-regenerator { "electron":"0.36" }
  transform-exponentiation-operator { "electron":"0.36" }
  proposal-async-generator-functions { "electron":"0.36" }
  proposal-object-rest-spread { "electron":"0.36" }
  proposal-unicode-property-regex { "electron":"0.36" }
  proposal-json-strings { "electron":"0.36" }
  proposal-optional-catch-binding { "electron":"0.36" }
  transform-named-capturing-groups-regex { "electron":"0.36" }
  transform-member-expression-literals { "electron":"0.36" }
  transform-property-literals { "electron":"0.36" }
  transform-modules-commonjs { "electron":"0.36" }
  proposal-dynamic-import { "electron":"0.36" }

Using polyfills with `entry` option:

[<CWD>/packages/babel-preset-env/test/fixtures/debug/entry-corejs3-electron/input.mjs] Replaced core-js entries with the following polyfills:
  es.symbol { "electron":"0.36" }
  es.symbol.description { "electron":"0.36" }
  es.symbol.async-iterator { "electron":"0.36" }
  es.symbol.has-instance { "electron":"0.36" }
  es.symbol.is-concat-spreadable { "electron":"0.36" }
  es.symbol.match { "electron":"0.36" }
  es.symbol.replace { "electron":"0.36" }
  es.symbol.search { "electron":"0.36" }
  es.symbol.species { "electron":"0.36" }
  es.symbol.split { "electron":"0.36" }
  es.symbol.to-string-tag { "electron":"0.36" }
  es.array.concat { "electron":"0.36" }
  es.array.filter { "electron":"0.36" }
  es.array.flat { "electron":"0.36" }
  es.array.flat-map { "electron":"0.36" }
  es.array.from { "electron":"0.36" }
  es.array.includes { "electron":"0.36" }
  es.array.index-of { "electron":"0.36" }
  es.array.iterator { "electron":"0.36" }
  es.array.last-index-of { "electron":"0.36" }
  es.array.map { "electron":"0.36" }
  es.array.slice { "electron":"0.36" }
  es.array.sort { "electron":"0.36" }
  es.array.species { "electron":"0.36" }
  es.array.splice { "electron":"0.36" }
  es.array.unscopables.flat { "electron":"0.36" }
  es.array.unscopables.flat-map { "electron":"0.36" }
  es.function.has-instance { "electron":"0.36" }
  es.json.to-string-tag { "electron":"0.36" }
  es.map { "electron":"0.36" }
  es.math.acosh { "electron":"0.36" }
  es.math.hypot { "electron":"0.36" }
  es.math.to-string-tag { "electron":"0.36" }
  es.object.assign { "electron":"0.36" }
  es.object.define-getter { "electron":"0.36" }
  es.object.define-setter { "electron":"0.36" }
  es.object.entries { "electron":"0.36" }
  es.object.from-entries { "electron":"0.36" }
  es.object.get-own-property-descriptors { "electron":"0.36" }
  es.object.lookup-getter { "electron":"0.36" }
  es.object.lookup-setter { "electron":"0.36" }
  es.object.to-string { "electron":"0.36" }
  es.object.values { "electron":"0.36" }
  es.promise { "electron":"0.36" }
  es.promise.finally { "electron":"0.36" }
  es.reflect.apply { "electron":"0.36" }
  es.reflect.construct { "electron":"0.36" }
  es.reflect.define-property { "electron":"0.36" }
  es.reflect.delete-property { "electron":"0.36" }
  es.reflect.get { "electron":"0.36" }
  es.reflect.get-own-property-descriptor { "electron":"0.36" }
  es.reflect.get-prototype-of { "electron":"0.36" }
  es.reflect.has { "electron":"0.36" }
  es.reflect.is-extensible { "electron":"0.36" }
  es.reflect.own-keys { "electron":"0.36" }
  es.reflect.prevent-extensions { "electron":"0.36" }
  es.reflect.set { "electron":"0.36" }
  es.reflect.set-prototype-of { "electron":"0.36" }
  es.regexp.constructor { "electron":"0.36" }
  es.regexp.flags { "electron":"0.36" }
  es.regexp.to-string { "electron":"0.36" }
  es.set { "electron":"0.36" }
  es.string.ends-with { "electron":"0.36" }
  es.string.includes { "electron":"0.36" }
  es.string.match { "electron":"0.36" }
  es.string.pad-end { "electron":"0.36" }
  es.string.pad-start { "electron":"0.36" }
  es.string.replace { "electron":"0.36" }
  es.string.search { "electron":"0.36" }
  es.string.split { "electron":"0.36" }
  es.string.starts-with { "electron":"0.36" }
  es.string.trim { "electron":"0.36" }
  es.string.trim-end { "electron":"0.36" }
  es.string.trim-start { "electron":"0.36" }
  es.typed-array.float32-array { "electron":"0.36" }
  es.typed-array.float64-array { "electron":"0.36" }
  es.typed-array.int8-array { "electron":"0.36" }
  es.typed-array.int16-array { "electron":"0.36" }
  es.typed-array.int32-array { "electron":"0.36" }
  es.typed-array.uint8-array { "electron":"0.36" }
  es.typed-array.uint8-clamped-array { "electron":"0.36" }
  es.typed-array.uint16-array { "electron":"0.36" }
  es.typed-array.uint32-array { "electron":"0.36" }
  es.typed-array.from { "electron":"0.36" }
  es.typed-array.includes { "electron":"0.36" }
  es.typed-array.of { "electron":"0.36" }
  es.typed-array.to-string { "electron":"0.36" }
  es.weak-map { "electron":"0.36" }
  es.weak-set { "electron":"0.36" }
  web.dom-collections.for-each { "electron":"0.36" }
  web.dom-collections.iterator { "electron":"0.36" }
  web.immediate { "electron":"0.36" }
  web.queue-microtask { "electron":"0.36" }
  web.url { "electron":"0.36" }
  web.url.to-json { "electron":"0.36" }
  web.url-search-params { "electron":"0.36" }
