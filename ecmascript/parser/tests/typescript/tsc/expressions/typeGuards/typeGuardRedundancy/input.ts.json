{
  "type": "Script",
  "span": {
    "start": 0,
    "end": 351,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 0,
        "end": 21,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 4,
            "end": 20,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 4,
              "end": 5,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 5,
                "end": 20,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 7,
                  "end": 20,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 7,
                      "end": 13,
                      "ctxt": 0
                    },
                    "kind": "string"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 14,
                      "end": 20,
                      "ctxt": 0
                    },
                    "kind": "number"
                  }
                ]
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 23,
        "end": 102,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 27,
            "end": 101,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 27,
              "end": 29,
              "ctxt": 0
            },
            "value": "r1",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 32,
              "end": 101,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 32,
                "end": 78,
                "ctxt": 0
              },
              "operator": "&&",
              "left": {
                "type": "BinaryExpression",
                "span": {
                  "start": 32,
                  "end": 53,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 32,
                    "end": 40,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 39,
                      "end": 40,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 45,
                    "end": 53,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "span": {
                  "start": 57,
                  "end": 78,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 57,
                    "end": 65,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 64,
                      "end": 65,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 70,
                    "end": 78,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 81,
                "end": 89,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 81,
                  "end": 82,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 83,
                  "end": 89,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 92,
                "end": 101,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 92,
                  "end": 93,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 94,
                  "end": 101,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 104,
        "end": 186,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 108,
            "end": 185,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 108,
              "end": 110,
              "ctxt": 0
            },
            "value": "r2",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 113,
              "end": 185,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 113,
                "end": 162,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 114,
                  "end": 162,
                  "ctxt": 0
                },
                "expression": {
                  "type": "BinaryExpression",
                  "span": {
                    "start": 115,
                    "end": 161,
                    "ctxt": 0
                  },
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 115,
                      "end": 136,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 115,
                        "end": 123,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 122,
                          "end": 123,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 128,
                        "end": 136,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 140,
                      "end": 161,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 140,
                        "end": 148,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 147,
                          "end": 148,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 153,
                        "end": 161,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 165,
                "end": 174,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 165,
                  "end": 166,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 167,
                  "end": 174,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 177,
                "end": 185,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 177,
                  "end": 178,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 179,
                  "end": 185,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 188,
        "end": 267,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 192,
            "end": 266,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 192,
              "end": 194,
              "ctxt": 0
            },
            "value": "r3",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 197,
              "end": 266,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 197,
                "end": 243,
                "ctxt": 0
              },
              "operator": "||",
              "left": {
                "type": "BinaryExpression",
                "span": {
                  "start": 197,
                  "end": 218,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 197,
                    "end": 205,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 204,
                      "end": 205,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 210,
                    "end": 218,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "span": {
                  "start": 222,
                  "end": 243,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 222,
                    "end": 230,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 229,
                      "end": 230,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 235,
                    "end": 243,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 246,
                "end": 254,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 246,
                  "end": 247,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 248,
                  "end": 254,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 257,
                "end": 266,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 257,
                  "end": 258,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 259,
                  "end": 266,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 269,
        "end": 351,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 273,
            "end": 350,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 273,
              "end": 275,
              "ctxt": 0
            },
            "value": "r4",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 278,
              "end": 350,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 278,
                "end": 327,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 279,
                  "end": 327,
                  "ctxt": 0
                },
                "expression": {
                  "type": "BinaryExpression",
                  "span": {
                    "start": 280,
                    "end": 326,
                    "ctxt": 0
                  },
                  "operator": "||",
                  "left": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 280,
                      "end": 301,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 280,
                        "end": 288,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 287,
                          "end": 288,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 293,
                        "end": 301,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 305,
                      "end": 326,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 305,
                        "end": 313,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 312,
                          "end": 313,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 318,
                        "end": 326,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 330,
                "end": 339,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 330,
                  "end": 331,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 332,
                  "end": 339,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 342,
                "end": 350,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 342,
                  "end": 343,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 344,
                  "end": 350,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
