{
  "type": "Script",
  "span": {
    "start": 0,
    "end": 359,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 0,
        "end": 21,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 4,
            "end": 20,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 4,
              "end": 5,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 5,
                "end": 20,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 7,
                  "end": 20,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 7,
                      "end": 13,
                      "ctxt": 0
                    },
                    "kind": "string"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 14,
                      "end": 20,
                      "ctxt": 0
                    },
                    "kind": "number"
                  }
                ]
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 25,
        "end": 104,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 29,
            "end": 103,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 29,
              "end": 31,
              "ctxt": 0
            },
            "value": "r1",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 34,
              "end": 103,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 34,
                "end": 80,
                "ctxt": 0
              },
              "operator": "&&",
              "left": {
                "type": "BinaryExpression",
                "span": {
                  "start": 34,
                  "end": 55,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 34,
                    "end": 42,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 41,
                      "end": 42,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 47,
                    "end": 55,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "span": {
                  "start": 59,
                  "end": 80,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 59,
                    "end": 67,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 66,
                      "end": 67,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 72,
                    "end": 80,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 83,
                "end": 91,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 83,
                  "end": 84,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 85,
                  "end": 91,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 94,
                "end": 103,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 94,
                  "end": 95,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 96,
                  "end": 103,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 108,
        "end": 190,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 112,
            "end": 189,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 112,
              "end": 114,
              "ctxt": 0
            },
            "value": "r2",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 117,
              "end": 189,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 117,
                "end": 166,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 118,
                  "end": 166,
                  "ctxt": 0
                },
                "expression": {
                  "type": "BinaryExpression",
                  "span": {
                    "start": 119,
                    "end": 165,
                    "ctxt": 0
                  },
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 119,
                      "end": 140,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 119,
                        "end": 127,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 126,
                          "end": 127,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 132,
                        "end": 140,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 144,
                      "end": 165,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 144,
                        "end": 152,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 151,
                          "end": 152,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 157,
                        "end": 165,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 169,
                "end": 178,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 169,
                  "end": 170,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 171,
                  "end": 178,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 181,
                "end": 189,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 181,
                  "end": 182,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 183,
                  "end": 189,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 194,
        "end": 273,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 198,
            "end": 272,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 198,
              "end": 200,
              "ctxt": 0
            },
            "value": "r3",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 203,
              "end": 272,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 203,
                "end": 249,
                "ctxt": 0
              },
              "operator": "||",
              "left": {
                "type": "BinaryExpression",
                "span": {
                  "start": 203,
                  "end": 224,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 203,
                    "end": 211,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 210,
                      "end": 211,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 216,
                    "end": 224,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "span": {
                  "start": 228,
                  "end": 249,
                  "ctxt": 0
                },
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "span": {
                    "start": 228,
                    "end": 236,
                    "ctxt": 0
                  },
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "span": {
                      "start": 235,
                      "end": 236,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 241,
                    "end": 249,
                    "ctxt": 0
                  },
                  "value": "string",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 252,
                "end": 260,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 252,
                  "end": 253,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 254,
                  "end": 260,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 263,
                "end": 272,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 263,
                  "end": 264,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 265,
                  "end": 272,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 277,
        "end": 359,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 281,
            "end": 358,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 281,
              "end": 283,
              "ctxt": 0
            },
            "value": "r4",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 286,
              "end": 358,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 286,
                "end": 335,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 287,
                  "end": 335,
                  "ctxt": 0
                },
                "expression": {
                  "type": "BinaryExpression",
                  "span": {
                    "start": 288,
                    "end": 334,
                    "ctxt": 0
                  },
                  "operator": "||",
                  "left": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 288,
                      "end": 309,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 288,
                        "end": 296,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 295,
                          "end": 296,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 301,
                        "end": 309,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 313,
                      "end": 334,
                      "ctxt": 0
                    },
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "span": {
                        "start": 313,
                        "end": 321,
                        "ctxt": 0
                      },
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "span": {
                          "start": 320,
                          "end": 321,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    },
                    "right": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 326,
                        "end": 334,
                        "ctxt": 0
                      },
                      "value": "string",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                }
              }
            },
            "consequent": {
              "type": "MemberExpression",
              "span": {
                "start": 338,
                "end": 347,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 338,
                  "end": 339,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 340,
                  "end": 347,
                  "ctxt": 0
                },
                "value": "toFixed",
                "optional": false
              },
              "computed": false
            },
            "alternate": {
              "type": "MemberExpression",
              "span": {
                "start": 350,
                "end": 358,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 350,
                  "end": 351,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 352,
                  "end": 358,
                  "ctxt": 0
                },
                "value": "substr",
                "optional": false
              },
              "computed": false
            }
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
