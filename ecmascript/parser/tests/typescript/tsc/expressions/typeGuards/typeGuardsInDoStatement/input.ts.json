{
  "type": "Script",
  "span": {
    "start": 0,
    "end": 603,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 0,
        "end": 18,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 4,
            "end": 17,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 4,
              "end": 8,
              "ctxt": 0
            },
            "value": "cond",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 8,
                "end": 17,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsKeywordType",
                "span": {
                  "start": 10,
                  "end": 17,
                  "ctxt": 0
                },
                "kind": "boolean"
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 28,
          "end": 29,
          "ctxt": 0
        },
        "value": "a",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 30,
            "end": 58,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 30,
              "end": 58,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 31,
                "end": 58,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 33,
                  "end": 58,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 33,
                      "end": 39,
                      "ctxt": 0
                    },
                    "kind": "string"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 42,
                      "end": 48,
                      "ctxt": 0
                    },
                    "kind": "number"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 51,
                      "end": 58,
                      "ctxt": 0
                    },
                    "kind": "boolean"
                  }
                ]
              }
            }
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 19,
        "end": 203,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 60,
          "end": 203,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 66,
              "end": 75,
              "ctxt": 0
            },
            "expression": {
              "type": "AssignmentExpression",
              "span": {
                "start": 66,
                "end": 74,
                "ctxt": 0
              },
              "operator": "=",
              "left": {
                "type": "Identifier",
                "span": {
                  "start": 66,
                  "end": 67,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false,
                "typeAnnotation": null
              },
              "right": {
                "type": "BooleanLiteral",
                "span": {
                  "start": 70,
                  "end": 74,
                  "ctxt": 0
                },
                "value": true
              }
            }
          },
          {
            "type": "DoWhileStatement",
            "span": {
              "start": 80,
              "end": 174,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 152,
                "end": 173,
                "ctxt": 0
              },
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "span": {
                  "start": 152,
                  "end": 160,
                  "ctxt": 0
                },
                "operator": "typeof",
                "argument": {
                  "type": "Identifier",
                  "span": {
                    "start": 159,
                    "end": 160,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                }
              },
              "right": {
                "type": "StringLiteral",
                "span": {
                  "start": 165,
                  "end": 173,
                  "ctxt": 0
                },
                "value": "string",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            },
            "body": {
              "type": "BlockStatement",
              "span": {
                "start": 83,
                "end": 144,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 93,
                    "end": 95,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "Identifier",
                    "span": {
                      "start": 93,
                      "end": 94,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 124,
                    "end": 138,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "AssignmentExpression",
                    "span": {
                      "start": 124,
                      "end": 137,
                      "ctxt": 0
                    },
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "span": {
                        "start": 124,
                        "end": 125,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false,
                      "typeAnnotation": null
                    },
                    "right": {
                      "type": "Identifier",
                      "span": {
                        "start": 128,
                        "end": 137,
                        "ctxt": 0
                      },
                      "value": "undefined",
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 179,
              "end": 181,
              "ctxt": 0
            },
            "expression": {
              "type": "Identifier",
              "span": {
                "start": 179,
                "end": 180,
                "ctxt": 0
              },
              "value": "x",
              "optional": false
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 213,
          "end": 214,
          "ctxt": 0
        },
        "value": "b",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 215,
            "end": 243,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 215,
              "end": 243,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 216,
                "end": 243,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 218,
                  "end": 243,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 218,
                      "end": 224,
                      "ctxt": 0
                    },
                    "kind": "string"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 227,
                      "end": 233,
                      "ctxt": 0
                    },
                    "kind": "number"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 236,
                      "end": 243,
                      "ctxt": 0
                    },
                    "kind": "boolean"
                  }
                ]
              }
            }
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 204,
        "end": 416,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 245,
          "end": 416,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 251,
              "end": 260,
              "ctxt": 0
            },
            "expression": {
              "type": "AssignmentExpression",
              "span": {
                "start": 251,
                "end": 259,
                "ctxt": 0
              },
              "operator": "=",
              "left": {
                "type": "Identifier",
                "span": {
                  "start": 251,
                  "end": 252,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false,
                "typeAnnotation": null
              },
              "right": {
                "type": "BooleanLiteral",
                "span": {
                  "start": 255,
                  "end": 259,
                  "ctxt": 0
                },
                "value": true
              }
            }
          },
          {
            "type": "DoWhileStatement",
            "span": {
              "start": 265,
              "end": 387,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 365,
                "end": 386,
                "ctxt": 0
              },
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "span": {
                  "start": 365,
                  "end": 373,
                  "ctxt": 0
                },
                "operator": "typeof",
                "argument": {
                  "type": "Identifier",
                  "span": {
                    "start": 372,
                    "end": 373,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                }
              },
              "right": {
                "type": "StringLiteral",
                "span": {
                  "start": 378,
                  "end": 386,
                  "ctxt": 0
                },
                "value": "string",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            },
            "body": {
              "type": "BlockStatement",
              "span": {
                "start": 268,
                "end": 357,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 278,
                    "end": 280,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "Identifier",
                    "span": {
                      "start": 278,
                      "end": 279,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                {
                  "type": "IfStatement",
                  "span": {
                    "start": 309,
                    "end": 328,
                    "ctxt": 0
                  },
                  "test": {
                    "type": "Identifier",
                    "span": {
                      "start": 313,
                      "end": 317,
                      "ctxt": 0
                    },
                    "value": "cond",
                    "optional": false
                  },
                  "consequent": {
                    "type": "ContinueStatement",
                    "span": {
                      "start": 319,
                      "end": 328,
                      "ctxt": 0
                    },
                    "label": null
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 337,
                    "end": 351,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "AssignmentExpression",
                    "span": {
                      "start": 337,
                      "end": 350,
                      "ctxt": 0
                    },
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "span": {
                        "start": 337,
                        "end": 338,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false,
                      "typeAnnotation": null
                    },
                    "right": {
                      "type": "Identifier",
                      "span": {
                        "start": 341,
                        "end": 350,
                        "ctxt": 0
                      },
                      "value": "undefined",
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 392,
              "end": 394,
              "ctxt": 0
            },
            "expression": {
              "type": "Identifier",
              "span": {
                "start": 392,
                "end": 393,
                "ctxt": 0
              },
              "value": "x",
              "optional": false
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 426,
          "end": 427,
          "ctxt": 0
        },
        "value": "c",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 428,
            "end": 446,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 428,
              "end": 446,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 429,
                "end": 446,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 431,
                  "end": 446,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 431,
                      "end": 437,
                      "ctxt": 0
                    },
                    "kind": "string"
                  },
                  {
                    "type": "TsKeywordType",
                    "span": {
                      "start": 440,
                      "end": 446,
                      "ctxt": 0
                    },
                    "kind": "number"
                  }
                ]
              }
            }
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 417,
        "end": 603,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 448,
          "end": 603,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 454,
              "end": 461,
              "ctxt": 0
            },
            "expression": {
              "type": "AssignmentExpression",
              "span": {
                "start": 454,
                "end": 460,
                "ctxt": 0
              },
              "operator": "=",
              "left": {
                "type": "Identifier",
                "span": {
                  "start": 454,
                  "end": 455,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false,
                "typeAnnotation": null
              },
              "right": {
                "type": "StringLiteral",
                "span": {
                  "start": 458,
                  "end": 460,
                  "ctxt": 0
                },
                "value": "",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            }
          },
          {
            "type": "DoWhileStatement",
            "span": {
              "start": 466,
              "end": 575,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 553,
                "end": 574,
                "ctxt": 0
              },
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "span": {
                  "start": 553,
                  "end": 561,
                  "ctxt": 0
                },
                "operator": "typeof",
                "argument": {
                  "type": "Identifier",
                  "span": {
                    "start": 560,
                    "end": 561,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                }
              },
              "right": {
                "type": "StringLiteral",
                "span": {
                  "start": 566,
                  "end": 574,
                  "ctxt": 0
                },
                "value": "string",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            },
            "body": {
              "type": "BlockStatement",
              "span": {
                "start": 469,
                "end": 545,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 479,
                    "end": 481,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "Identifier",
                    "span": {
                      "start": 479,
                      "end": 480,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                },
                {
                  "type": "IfStatement",
                  "span": {
                    "start": 500,
                    "end": 516,
                    "ctxt": 0
                  },
                  "test": {
                    "type": "Identifier",
                    "span": {
                      "start": 504,
                      "end": 508,
                      "ctxt": 0
                    },
                    "value": "cond",
                    "optional": false
                  },
                  "consequent": {
                    "type": "BreakStatement",
                    "span": {
                      "start": 510,
                      "end": 516,
                      "ctxt": 0
                    },
                    "label": null
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 525,
                    "end": 539,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "AssignmentExpression",
                    "span": {
                      "start": 525,
                      "end": 538,
                      "ctxt": 0
                    },
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "span": {
                        "start": 525,
                        "end": 526,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false,
                      "typeAnnotation": null
                    },
                    "right": {
                      "type": "Identifier",
                      "span": {
                        "start": 529,
                        "end": 538,
                        "ctxt": 0
                      },
                      "value": "undefined",
                      "optional": false
                    }
                  }
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 580,
              "end": 582,
              "ctxt": 0
            },
            "expression": {
              "type": "Identifier",
              "span": {
                "start": 580,
                "end": 581,
                "ctxt": 0
              },
              "value": "x",
              "optional": false
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    }
  ],
  "interpreter": null
}
