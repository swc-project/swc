{
  "type": "Module",
  "span": {
    "start": 88,
    "end": 497,
    "ctxt": 0
  },
  "body": [
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 88,
        "end": 139,
        "ctxt": 0
      },
      "declaration": {
        "type": "ClassDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 101,
            "end": 102,
            "ctxt": 0
          },
          "value": "B",
          "optional": false
        },
        "declare": false,
        "span": {
          "start": 95,
          "end": 139,
          "ctxt": 0
        },
        "decorators": [],
        "body": [
          {
            "type": "ClassMethod",
            "span": {
              "start": 110,
              "end": 136,
              "ctxt": 0
            },
            "key": {
              "type": "Identifier",
              "span": {
                "start": 110,
                "end": 115,
                "ctxt": 0
              },
              "value": "print",
              "optional": false
            },
            "function": {
              "params": [],
              "decorators": [],
              "span": {
                "start": 110,
                "end": 136,
                "ctxt": 0
              },
              "body": {
                "type": "BlockStatement",
                "span": {
                  "start": 118,
                  "end": 136,
                  "ctxt": 0
                },
                "stmts": [
                  {
                    "type": "ReturnStatement",
                    "span": {
                      "start": 120,
                      "end": 135,
                      "ctxt": 0
                    },
                    "argument": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 127,
                        "end": 135,
                        "ctxt": 0
                      },
                      "value": "I am B",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                ]
              },
              "generator": false,
              "async": false,
              "typeParameters": null,
              "returnType": null
            },
            "kind": "method",
            "isStatic": false,
            "accessibility": null,
            "isAbstract": false,
            "isOptional": false,
            "isOverride": false
          }
        ],
        "superClass": null,
        "isAbstract": false,
        "typeParams": null,
        "superTypeParams": null,
        "implements": []
      }
    },
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 143,
        "end": 181,
        "ctxt": 0
      },
      "declaration": {
        "type": "FunctionDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 159,
            "end": 162,
            "ctxt": 0
          },
          "value": "foo",
          "optional": false
        },
        "declare": false,
        "params": [],
        "decorators": [],
        "span": {
          "start": 150,
          "end": 181,
          "ctxt": 0
        },
        "body": {
          "type": "BlockStatement",
          "span": {
            "start": 165,
            "end": 181,
            "ctxt": 0
          },
          "stmts": [
            {
              "type": "ReturnStatement",
              "span": {
                "start": 167,
                "end": 179,
                "ctxt": 0
              },
              "argument": {
                "type": "StringLiteral",
                "span": {
                  "start": 174,
                  "end": 179,
                  "ctxt": 0
                },
                "value": "foo",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            }
          ]
        },
        "generator": false,
        "async": false,
        "typeParameters": null,
        "returnType": null
      }
    },
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 205,
        "end": 250,
        "ctxt": 0
      },
      "declaration": {
        "type": "FunctionDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 221,
            "end": 227,
            "ctxt": 0
          },
          "value": "backup",
          "optional": false
        },
        "declare": false,
        "params": [],
        "decorators": [],
        "span": {
          "start": 212,
          "end": 250,
          "ctxt": 0
        },
        "body": {
          "type": "BlockStatement",
          "span": {
            "start": 230,
            "end": 250,
            "ctxt": 0
          },
          "stmts": [
            {
              "type": "ReturnStatement",
              "span": {
                "start": 232,
                "end": 248,
                "ctxt": 0
              },
              "argument": {
                "type": "StringLiteral",
                "span": {
                  "start": 239,
                  "end": 247,
                  "ctxt": 0
                },
                "value": "backup",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            }
          ]
        },
        "generator": false,
        "async": false,
        "typeParameters": null,
        "returnType": null
      }
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 291,
          "end": 294,
          "ctxt": 0
        },
        "value": "bar",
        "optional": false
      },
      "declare": true,
      "params": [],
      "decorators": [],
      "span": {
        "start": 274,
        "end": 306,
        "ctxt": 0
      },
      "body": null,
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": {
        "type": "TsTypeAnnotation",
        "span": {
          "start": 296,
          "end": 305,
          "ctxt": 0
        },
        "typeAnnotation": {
          "type": "TsKeywordType",
          "span": {
            "start": 298,
            "end": 305,
            "ctxt": 0
          },
          "kind": "boolean"
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 308,
        "end": 350,
        "ctxt": 0
      },
      "kind": "const",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 314,
            "end": 349,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 314,
              "end": 321,
              "ctxt": 0
            },
            "value": "specify",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 324,
              "end": 349,
              "ctxt": 0
            },
            "test": {
              "type": "CallExpression",
              "span": {
                "start": 324,
                "end": 329,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 324,
                  "end": 327,
                  "ctxt": 0
                },
                "value": "bar",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            },
            "consequent": {
              "type": "StringLiteral",
              "span": {
                "start": 332,
                "end": 337,
                "ctxt": 0
              },
              "value": "./0",
              "hasEscape": false,
              "kind": {
                "type": "normal",
                "containsQuote": true
              }
            },
            "alternate": {
              "type": "Identifier",
              "span": {
                "start": 340,
                "end": 349,
                "ctxt": 0
              },
              "value": "undefined",
              "optional": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 352,
        "end": 383,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 356,
            "end": 382,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 356,
              "end": 364,
              "ctxt": 0
            },
            "value": "myModule",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 367,
              "end": 382,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 367,
                "end": 373,
                "ctxt": 0
              },
              "value": "import",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "Identifier",
                  "span": {
                    "start": 374,
                    "end": 381,
                    "ctxt": 0
                  },
                  "value": "specify",
                  "optional": false
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 385,
        "end": 419,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 389,
            "end": 418,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 389,
              "end": 398,
              "ctxt": 0
            },
            "value": "myModule1",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 401,
              "end": 418,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 401,
                "end": 407,
                "ctxt": 0
              },
              "value": "import",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "Identifier",
                  "span": {
                    "start": 408,
                    "end": 417,
                    "ctxt": 0
                  },
                  "value": "undefined",
                  "optional": false
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 421,
        "end": 466,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 425,
            "end": 465,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 425,
              "end": 434,
              "ctxt": 0
            },
            "value": "myModule2",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 437,
              "end": 465,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 437,
                "end": 443,
                "ctxt": 0
              },
              "value": "import",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "ConditionalExpression",
                  "span": {
                    "start": 444,
                    "end": 464,
                    "ctxt": 0
                  },
                  "test": {
                    "type": "CallExpression",
                    "span": {
                      "start": 444,
                      "end": 449,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 444,
                        "end": 447,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "optional": false
                    },
                    "arguments": [],
                    "typeArguments": null
                  },
                  "consequent": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 452,
                      "end": 457,
                      "ctxt": 0
                    },
                    "value": "./1",
                    "hasEscape": false,
                    "kind": {
                      "type": "normal",
                      "containsQuote": true
                    }
                  },
                  "alternate": {
                    "type": "NullLiteral",
                    "span": {
                      "start": 460,
                      "end": 464,
                      "ctxt": 0
                    }
                  }
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 468,
        "end": 497,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 472,
            "end": 496,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 472,
              "end": 481,
              "ctxt": 0
            },
            "value": "myModule3",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 484,
              "end": 496,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 484,
                "end": 490,
                "ctxt": 0
              },
              "value": "import",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "NullLiteral",
                  "span": {
                    "start": 491,
                    "end": 495,
                    "ctxt": 0
                  }
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
