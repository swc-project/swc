
  x Document
     ,-[$DIR/tests/fixture/html-entity/input.html:1:1]
   1 | ,-> <!DOCTYPE html>
   2 | |   <html>
   3 | |   <body>
   4 | |   
   5 | |   <h1>HTML Entity Example</h1>
   6 | |   
   7 | |   <div>A space character: &AMP;</div>
   8 | |   <div>A space character: &amp;</div>
   9 | |   <div>A space character: &amp;;</div>
  10 | |   
  11 | |   <div>A space character: &nbsp;</div>
  12 | |   <div>The less-than sign: &lt;</div>
  13 | |   <div>The greater-than sign: &gt;</div>
  14 | |   <div>The double quote sign: &quot;</div>
  15 | |   <div>The single quote sign: &apos;</div>
  16 | |   <div>The cent sign: &cent;</div>
  17 | |   <div>The pound sign: &pound;</div>
  18 | |   <div>The yen sign: &yen;</div>
  19 | |   <div>The euro sign: &euro;</div>
  20 | |   <div>The copyright sign: &copy;</div>
  21 | |   <div>The registered trade mark sign: &reg;</div>
  22 | |   
  23 | |   <div>&reg;</div>
  24 | |   <div>&REG;</div>
  25 | |   <div>&reg;;</div>
  26 | |   <div>&reg</div>
  27 | |   <div>reg</div>
  28 | |   
  29 | |   <div>&CounterClockwiseContourIntegral;</div>
  30 | |   <div>&&reg;</div>
  31 | |   
  32 | |   <div>An a with a grave accent: a&#768;</div>
  33 | |   <div>An a with an acute accent: a&#769;</div>
  34 | |   <div>An a with a circumflex accent: a&#770;</div>
  35 | |   <div>An a with a tilde: a&#771;</div>
  36 | |   <div>An o with a grave accent: o&#768;</div>
  37 | |   <div>An o with an acute accent: o&#769;</div>
  38 | |   <div>An o with a circumflex accent: o&#770;</div>
  39 | |   <div>An o with a tilde: o&#771;</div>
  40 | |   
  41 | |   <div>A space character: &&</div>
  42 | |   <div>I'm &notin; I tell you</div>
  43 | |   <div>I'm &not; I tell you</div>
  44 | |   
  45 | |   <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
  46 | |   <a href="#" onclick="window.location='?l=1&amp;q=rick+roll';return false">
  47 | |       kablammo!
  48 | |   </a>
  49 | |   
  50 | |   <div>&#x2715;</div>
  51 | |   <div>&#10005;</div>
  52 | |   <div>✕</div>
  53 | |   
  54 | |   <div>&#x24;</div>
  55 | |   <div>&#36;</div>
  56 | |   <div>&dollar;</div>
  57 | |   
  58 | |   <div>&#q;</div>
  59 | |   <div>&#qq;</div>
  60 | |   <div>&#qqq;</div>
  61 | |   
  62 | |   <div>&#x24;</div>
  63 | |   <div>&#X24;</div>
  64 | |   
  65 | |   <div>&#xq;</div>
  66 | |   <div>&#xqq;</div>
  67 | |   <div>&#xqqq;</div>
  68 | |   
  69 | |   
  70 | |   <div>
  71 | |   &#x80	0x20AC	EURO SIGN (€)
  72 | |   &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
  73 | |   &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
  74 | |   &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
  75 | |   &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
  76 | |   &#x86	0x2020	DAGGER (†)
  77 | |   &#x87	0x2021	DOUBLE DAGGER (‡)
  78 | |   &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
  79 | |   &#x89	0x2030	PER MILLE SIGN (‰)
  80 | |   &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
  81 | |   &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
  82 | |   &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
  83 | |   &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
  84 | |   &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
  85 | |   &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
  86 | |   &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
  87 | |   &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
  88 | |   &#x95	0x2022	BULLET (•)
  89 | |   &#x96	0x2013	EN DASH (–)
  90 | |   &#x97	0x2014	EM DASH (—)
  91 | |   &#x98	0x02DC	SMALL TILDE (˜)
  92 | |   &#x99	0x2122	TRADE MARK SIGN (™)
  93 | |   &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
  94 | |   &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
  95 | |   &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
  96 | |   &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
  97 | |   &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
  98 | |   </div>
  99 | |   
 100 | |   <div>I'm &notin; I tell you</div>
 101 | |   <div>I'm &notit; I tell you</div>
 102 | |   
 103 | |   </body>
 104 | |   </html>
 105 | `-> 
     `----

  x Doctype { raw_keyword: Some(Atom('DOCTYPE' type=inline)), name: Some(Atom('html' type=inline)), raw_name: Some(Atom('html' type=inline)), force_quirks: false, raw_public_keyword: None,
  | public_quote: None, public_id: None, raw_system_keyword: None, system_quote: None, system_id: None }
   ,-[$DIR/tests/fixture/html-entity/input.html:1:1]
 1 | <!DOCTYPE html>
   : ^^^^^^^^^^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:1:1]
 1 | <!DOCTYPE html>
   :                ^
 2 | <html>
   `----

  x StartTag { tag_name: Atom('html' type=inline), raw_tag_name: Some(Atom('html' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:2:1]
 2 | <html>
   : ^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:2:1]
 2 | <html>
   :       ^
 3 | <body>
   `----

  x StartTag { tag_name: Atom('body' type=inline), raw_tag_name: Some(Atom('body' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:3:1]
 3 | <body>
   : ^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:3:1]
 3 | <body>
   :       ^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:4:1]
 4 | 
   : ^
 5 | <h1>HTML Entity Example</h1>
   `----

  x StartTag { tag_name: Atom('h1' type=inline), raw_tag_name: Some(Atom('h1' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   : ^^^^
   `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :     ^
   `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :      ^
   `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :       ^
   `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :        ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :         ^
   `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :          ^
   `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :           ^
   `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :            ^
   `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :             ^
   `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :              ^
   `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :               ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                ^
   `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                 ^
   `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                  ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                   ^
   `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                    ^
   `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                     ^
   `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                      ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                       ^
   `----

  x EndTag { tag_name: Atom('h1' type=inline), raw_tag_name: Some(Atom('h1' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                        ^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:5:1]
 5 | <h1>HTML Entity Example</h1>
   :                             ^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:6:1]
 6 | 
   : ^
 7 | <div>A space character: &AMP;</div>
   `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   : ^^^^^
   `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :      ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :       ^
   `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :        ^
   `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :         ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :          ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :           ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :            ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :             ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :              ^
   `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :               ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                 ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                  ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                   ^
   `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                    ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                     ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                      ^
   `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                       ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                        ^
   `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                         ^^^^^
   `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                              ^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:7:1]
 7 | <div>A space character: &AMP;</div>
   :                                    ^
 8 | <div>A space character: &amp;</div>
   `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   : ^^^^^
   `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :      ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :       ^
   `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :        ^
   `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :         ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :          ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :           ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :            ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :             ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :              ^
   `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :               ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                 ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                  ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                   ^
   `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                    ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                     ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                      ^
   `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                       ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                        ^
   `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                         ^^^^^
   `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                              ^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:8:1]
 8 | <div>A space character: &amp;</div>
   :                                    ^
 9 | <div>A space character: &amp;;</div>
   `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   : ^^^^^
   `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :      ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :       ^
   `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :        ^
   `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :         ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :          ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :           ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :            ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :             ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :              ^
   `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :               ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                 ^
   `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                  ^
   `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                   ^
   `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                    ^
   `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                     ^
   `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                      ^
   `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                       ^
   `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                        ^
   `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                         ^^^^^
   `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                              ^
   `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                               ^^^^^^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
   ,-[$DIR/tests/fixture/html-entity/input.html:9:1]
 9 | <div>A space character: &amp;;</div>
   :                                     ^
   `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:10:1]
 10 | 
    : ^
 11 | <div>A space character: &nbsp;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :       ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :        ^
    `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :         ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :          ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :           ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :             ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :              ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                 ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                  ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                   ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                     ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                      ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                        ^
    `----

  x Character { value: '\u{a0}', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                         ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                               ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:11:1]
 11 | <div>A space character: &nbsp;</div>
    :                                     ^
 12 | <div>The less-than sign: &lt;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :         ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :           ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :            ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :             ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :              ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :               ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                 ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                   ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                    ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                     ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                       ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                         ^
    `----

  x Character { value: '<', raw: Some(Atom('<' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                          ^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                              ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:12:1]
 12 | <div>The less-than sign: &lt;</div>
    :                                    ^
 13 | <div>The greater-than sign: &gt;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :         ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :          ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :           ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :            ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :             ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :              ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :               ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                  ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                   ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                    ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                     ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                      ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                       ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                        ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                         ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                          ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                            ^
    `----

  x Character { value: '>', raw: Some(Atom('>' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                             ^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                                 ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:13:1]
 13 | <div>The greater-than sign: &gt;</div>
    :                                       ^
 14 | <div>The double quote sign: &quot;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :         ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :          ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :           ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :            ^
    `----

  x Character { value: 'b', raw: Some(Atom('b' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :             ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :              ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                 ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                  ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                   ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                     ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                      ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                       ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                        ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                         ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                          ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                            ^
    `----

  x Character { value: '"', raw: Some(Atom('"' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                             ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                                   ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:14:1]
 14 | <div>The double quote sign: &quot;</div>
    :                                         ^
 15 | <div>The single quote sign: &apos;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :         ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :          ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :           ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :            ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :             ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :              ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                 ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                  ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                   ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                     ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                      ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                       ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                        ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                         ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                          ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                            ^
    `----

  x Character { value: '\'', raw: Some(Atom(''' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                             ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                                   ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:15:1]
 15 | <div>The single quote sign: &apos;</div>
    :                                         ^
 16 | <div>The cent sign: &cent;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :           ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :             ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :              ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :               ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                 ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                  ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                    ^
    `----

  x Character { value: '¢', raw: Some(Atom('¢' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                     ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:16:1]
 16 | <div>The cent sign: &cent;</div>
    :                                 ^
 17 | <div>The pound sign: &pound;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :         ^
    `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :          ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :           ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :            ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :             ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :               ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                 ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                  ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                   ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                    ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                     ^
    `----

  x Character { value: '£', raw: Some(Atom('£' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                      ^^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                             ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:17:1]
 17 | <div>The pound sign: &pound;</div>
    :                                   ^
 18 | <div>The yen sign: &yen;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :         ^
    `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :           ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :             ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :              ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :               ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                 ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                   ^
    `----

  x Character { value: '¥', raw: Some(Atom('¥' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                    ^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                         ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:18:1]
 18 | <div>The yen sign: &yen;</div>
    :                               ^
 19 | <div>The euro sign: &euro;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :         ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :          ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :           ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :            ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :             ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :              ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :               ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                 ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                  ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                    ^
    `----

  x Character { value: '€', raw: Some(Atom('€' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                     ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:19:1]
 19 | <div>The euro sign: &euro;</div>
    :                                 ^
 20 | <div>The copyright sign: &copy;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :          ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :           ^
    `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :            ^
    `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :             ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :              ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :               ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                   ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                    ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                     ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                       ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                         ^
    `----

  x Character { value: '©', raw: Some(Atom('©' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                          ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                                ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:20:1]
 20 | <div>The copyright sign: &copy;</div>
    :                                      ^
 21 | <div>The registered trade mark sign: &reg;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    : ^^^^^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :      ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :       ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :         ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :           ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :            ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :             ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :              ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :               ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                 ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                  ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                    ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                     ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                      ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                       ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                        ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                          ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                           ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                            ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                             ^
    `----

  x Character { value: 'k', raw: Some(Atom('k' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                               ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                 ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                  ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                   ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                    ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                     ^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                      ^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:21:1]
 21 | <div>The registered trade mark sign: &reg;</div>
    :                                                 ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:22:1]
 22 | 
    : ^
 23 | <div>&reg;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:23:1]
 23 | <div>&reg;</div>
    : ^^^^^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:23:1]
 23 | <div>&reg;</div>
    :      ^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:23:1]
 23 | <div>&reg;</div>
    :           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:23:1]
 23 | <div>&reg;</div>
    :                 ^
 24 | <div>&REG;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:24:1]
 24 | <div>&REG;</div>
    : ^^^^^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:24:1]
 24 | <div>&REG;</div>
    :      ^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:24:1]
 24 | <div>&REG;</div>
    :           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:24:1]
 24 | <div>&REG;</div>
    :                 ^
 25 | <div>&reg;;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:25:1]
 25 | <div>&reg;;</div>
    : ^^^^^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:25:1]
 25 | <div>&reg;;</div>
    :      ^^^^^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:25:1]
 25 | <div>&reg;;</div>
    :           ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:25:1]
 25 | <div>&reg;;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:25:1]
 25 | <div>&reg;;</div>
    :                  ^
 26 | <div>&reg</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:26:1]
 26 | <div>&reg</div>
    : ^^^^^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:26:1]
 26 | <div>&reg</div>
    :      ^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:26:1]
 26 | <div>&reg</div>
    :          ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:26:1]
 26 | <div>&reg</div>
    :                ^
 27 | <div>reg</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    : ^^^^^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    :      ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    :       ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    :        ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    :         ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:27:1]
 27 | <div>reg</div>
    :               ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:28:1]
 28 | 
    : ^
 29 | <div>&CounterClockwiseContourIntegral;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:29:1]
 29 | <div>&CounterClockwiseContourIntegral;</div>
    : ^^^^^
    `----

  x Character { value: '∳', raw: Some(Atom('∳' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:29:1]
 29 | <div>&CounterClockwiseContourIntegral;</div>
    :      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:29:1]
 29 | <div>&CounterClockwiseContourIntegral;</div>
    :                                       ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:29:1]
 29 | <div>&CounterClockwiseContourIntegral;</div>
    :                                             ^
 30 | <div>&&reg;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:30:1]
 30 | <div>&&reg;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:30:1]
 30 | <div>&&reg;</div>
    :      ^^
    `----

  x Character { value: '®', raw: Some(Atom('®' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:30:1]
 30 | <div>&&reg;</div>
    :        ^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:30:1]
 30 | <div>&&reg;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:30:1]
 30 | <div>&&reg;</div>
    :                  ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:31:1]
 31 | 
    : ^
 32 | <div>An a with a grave accent: a&#768;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                 ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                  ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                   ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                    ^
    `----

  x Character { value: 'v', raw: Some(Atom('v' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                     ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                       ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                        ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                           ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                             ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                                ^
    `----

  x Character { value: '\u{300}', raw: Some(Atom('̀' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                                 ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                                       ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:32:1]
 32 | <div>An a with a grave accent: a&#768;</div>
    :                                             ^
 33 | <div>An a with an acute accent: a&#769;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                  ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                   ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                    ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                     ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                      ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                          ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                           ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                            ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                             ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                              ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                                ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                                 ^
    `----

  x Character { value: '\u{301}', raw: Some(Atom('́' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                                  ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                                        ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:33:1]
 33 | <div>An a with an acute accent: a&#769;</div>
    :                                              ^
 34 | <div>An a with a circumflex accent: a&#770;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                 ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                  ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                   ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                    ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                     ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                      ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                       ^
    `----

  x Character { value: 'f', raw: Some(Atom('f' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                        ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                         ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                          ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                            ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                             ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                              ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                               ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                  ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                    ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                     ^
    `----

  x Character { value: '\u{302}', raw: Some(Atom('̂' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                      ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:34:1]
 34 | <div>An a with a circumflex accent: a&#770;</div>
    :                                                  ^
 35 | <div>An a with a tilde: a&#771;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                  ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                   ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                    ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                     ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                      ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                         ^
    `----

  x Character { value: '\u{303}', raw: Some(Atom('̃' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                          ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                                ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:35:1]
 35 | <div>An a with a tilde: a&#771;</div>
    :                                      ^
 36 | <div>An o with a grave accent: o&#768;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :        ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                 ^
    `----

  x Character { value: 'g', raw: Some(Atom('g' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                  ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                   ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                    ^
    `----

  x Character { value: 'v', raw: Some(Atom('v' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                     ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                       ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                        ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                           ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                             ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                               ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                                ^
    `----

  x Character { value: '\u{300}', raw: Some(Atom('̀' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                                 ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                                       ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:36:1]
 36 | <div>An o with a grave accent: o&#768;</div>
    :                                             ^
 37 | <div>An o with an acute accent: o&#769;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :        ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                  ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                   ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                    ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                     ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                      ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                        ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                         ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                          ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                           ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                            ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                             ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                              ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                                ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                                 ^
    `----

  x Character { value: '\u{301}', raw: Some(Atom('́' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                                  ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                                        ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:37:1]
 37 | <div>An o with an acute accent: o&#769;</div>
    :                                              ^
 38 | <div>An o with a circumflex accent: o&#770;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :        ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                 ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                  ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                   ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                    ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                     ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                      ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                       ^
    `----

  x Character { value: 'f', raw: Some(Atom('f' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                        ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                         ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                          ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                            ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                             ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                              ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                               ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                  ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                    ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                     ^
    `----

  x Character { value: '\u{302}', raw: Some(Atom('̂' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                      ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:38:1]
 38 | <div>An o with a circumflex accent: o&#770;</div>
    :                                                  ^
 39 | <div>An o with a tilde: o&#771;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :      ^
    `----

  x Character { value: 'n', raw: Some(Atom('n' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :        ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :          ^
    `----

  x Character { value: 'w', raw: Some(Atom('w' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :           ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :            ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :             ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                  ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                   ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                    ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                     ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                      ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                        ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                         ^
    `----

  x Character { value: '\u{303}', raw: Some(Atom('̃' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                          ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                                ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:39:1]
 39 | <div>An o with a tilde: o&#771;</div>
    :                                      ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:40:1]
 40 | 
    : ^
 41 | <div>A space character: &&</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    : ^^^^^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :       ^
    `----

  x Character { value: 's', raw: Some(Atom('s' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :        ^
    `----

  x Character { value: 'p', raw: Some(Atom('p' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :         ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :          ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :           ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :             ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :              ^
    `----

  x Character { value: 'h', raw: Some(Atom('h' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :               ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                 ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                  ^
    `----

  x Character { value: 'c', raw: Some(Atom('c' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                   ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                     ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                      ^
    `----

  x Character { value: ':', raw: Some(Atom(':' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                        ^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                         ^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                           ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                            ^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:41:1]
 41 | <div>A space character: &&</div>
    :                                 ^
 42 | <div>I'm &notin; I tell you</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    : ^^^^^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :      ^
    `----

  x Character { value: '\'', raw: Some(Atom(''' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :       ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :         ^
    `----

  x Character { value: '∉', raw: Some(Atom('∉' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :          ^^^^^^^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                 ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                   ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                     ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                      ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                        ^
    `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                         ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                          ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                           ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:42:1]
 42 | <div>I'm &notin; I tell you</div>
    :                                  ^
 43 | <div>I'm &not; I tell you</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    : ^^^^^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :      ^
    `----

  x Character { value: '\'', raw: Some(Atom(''' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :       ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :         ^
    `----

  x Character { value: '¬', raw: Some(Atom('¬' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :          ^^^^^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :               ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                 ^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                  ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                   ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                    ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                     ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                      ^
    `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                       ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                        ^
    `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                         ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                          ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:43:1]
 43 | <div>I'm &not; I tell you</div>
    :                                ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:44:1]
 44 | 
    : ^
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    `----

  x StartTag { tag_name: Atom('a' type=inline), raw_tag_name: Some(Atom('a' type=inline)), self_closing: false, attributes: [Attribute { name: Atom('href' type=inline), raw_name: Some(Atom('href'
  | type=inline)), value: Some(Atom('http://lmgtfy.com/?l=1&q=rick+roll' type=dynamic)), raw_value: Some(Atom('"http://lmgtfy.com/?l=1&q=rick+roll"' type=dynamic)) }] }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                  ^
    `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                   ^
    `----

  x Character { value: 'r', raw: Some(Atom('r' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                    ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                     ^
    `----

  x Character { value: 'd', raw: Some(Atom('d' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                       ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                        ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                         ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                          ^
    `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                           ^
    `----

  x EndTag { tag_name: Atom('a' type=inline), raw_tag_name: Some(Atom('a' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                            ^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:45:1]
 45 | <a href="http://lmgtfy.com/?l=1&amp;q=rick+roll">tired meme</a>
    :                                                                ^
 46 | <a href="#" onclick="window.location='?l=1&amp;q=rick+roll';return false">
    `----

  x StartTag { tag_name: Atom('a' type=inline), raw_tag_name: Some(Atom('a' type=inline)), self_closing: false, attributes: [Attribute { name: Atom('href' type=inline), raw_name: Some(Atom('href'
  | type=inline)), value: Some(Atom('#' type=inline)), raw_value: Some(Atom('"#"' type=inline)) }, Attribute { name: Atom('onclick' type=inline), raw_name: Some(Atom('onclick' type=inline)), value:
  | Some(Atom('window.location='?l=1&q=rick+roll';return false' type=dynamic)), raw_value: Some(Atom('"window.location='?l=1&q=rick+roll';return false"' type=dynamic)) }] }
    ,-[$DIR/tests/fixture/html-entity/input.html:46:1]
 46 | <a href="#" onclick="window.location='?l=1&amp;q=rick+roll';return false">
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:46:1]
 46 | <a href="#" onclick="window.location='?l=1&amp;q=rick+roll';return false">
    :                                                                           ^
 47 |     kablammo!
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:1]
 47 |     kablammo!
    : ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:2]
 47 |    kablammo!
    : ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:3]
 47 |   kablammo!
    : ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:4]
 47 |  kablammo!
    : ^
    `----

  x Character { value: 'k', raw: Some(Atom('k' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    : ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :  ^
    `----

  x Character { value: 'b', raw: Some(Atom('b' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :   ^
    `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :    ^
    `----

  x Character { value: 'a', raw: Some(Atom('a' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :     ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :      ^
    `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :       ^
    `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :        ^
    `----

  x Character { value: '!', raw: Some(Atom('!' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :         ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:47:5]
 47 | kablammo!
    :          ^
 48 | </a>
    `----

  x EndTag { tag_name: Atom('a' type=inline), raw_tag_name: Some(Atom('a' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:48:1]
 48 | </a>
    : ^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:48:1]
 48 | </a>
    :     ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:49:1]
 49 | 
    : ^
 50 | <div>&#x2715;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:50:1]
 50 | <div>&#x2715;</div>
    : ^^^^^
    `----

  x Character { value: '✕', raw: Some(Atom('✕' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:50:1]
 50 | <div>&#x2715;</div>
    :      ^^^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:50:1]
 50 | <div>&#x2715;</div>
    :              ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:50:1]
 50 | <div>&#x2715;</div>
    :                    ^
 51 | <div>&#10005;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:51:1]
 51 | <div>&#10005;</div>
    : ^^^^^
    `----

  x Character { value: '✕', raw: Some(Atom('✕' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:51:1]
 51 | <div>&#10005;</div>
    :      ^^^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:51:1]
 51 | <div>&#10005;</div>
    :              ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:51:1]
 51 | <div>&#10005;</div>
    :                    ^
 52 | <div>✕</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:52:1]
 52 | <div>✕</div>
    : ^^^^^
    `----

  x Character { value: '✕', raw: Some(Atom('✕' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:52:1]
 52 | <div>✕</div>
    :      ^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:52:1]
 52 | <div>✕</div>
    :         ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:52:1]
 52 | <div>✕</div>
    :               ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:53:1]
 53 | 
    : ^
 54 | <div>&#x24;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:54:1]
 54 | <div>&#x24;</div>
    : ^^^^^
    `----

  x Character { value: '$', raw: Some(Atom('$' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:54:1]
 54 | <div>&#x24;</div>
    :      ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:54:1]
 54 | <div>&#x24;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:54:1]
 54 | <div>&#x24;</div>
    :                  ^
 55 | <div>&#36;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:55:1]
 55 | <div>&#36;</div>
    : ^^^^^
    `----

  x Character { value: '$', raw: Some(Atom('$' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:55:1]
 55 | <div>&#36;</div>
    :      ^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:55:1]
 55 | <div>&#36;</div>
    :           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:55:1]
 55 | <div>&#36;</div>
    :                 ^
 56 | <div>&dollar;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:56:1]
 56 | <div>&dollar;</div>
    : ^^^^^
    `----

  x Character { value: '$', raw: Some(Atom('$' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:56:1]
 56 | <div>&dollar;</div>
    :      ^^^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:56:1]
 56 | <div>&dollar;</div>
    :              ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:56:1]
 56 | <div>&dollar;</div>
    :                    ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:57:1]
 57 | 
    : ^
 58 | <div>&#q;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :      ^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :         ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :         ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :          ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:58:1]
 58 | <div>&#q;</div>
    :                ^
 59 | <div>&#qq;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :      ^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :         ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :          ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:59:1]
 59 | <div>&#qq;</div>
    :                 ^
 60 | <div>&#qqq;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :      ^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :         ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :          ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :           ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:60:1]
 60 | <div>&#qqq;</div>
    :                  ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:61:1]
 61 | 
    : ^
 62 | <div>&#x24;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:62:1]
 62 | <div>&#x24;</div>
    : ^^^^^
    `----

  x Character { value: '$', raw: Some(Atom('$' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:62:1]
 62 | <div>&#x24;</div>
    :      ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:62:1]
 62 | <div>&#x24;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:62:1]
 62 | <div>&#x24;</div>
    :                  ^
 63 | <div>&#X24;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:63:1]
 63 | <div>&#X24;</div>
    : ^^^^^
    `----

  x Character { value: '$', raw: Some(Atom('$' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:63:1]
 63 | <div>&#X24;</div>
    :      ^^^^^^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:63:1]
 63 | <div>&#X24;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:63:1]
 63 | <div>&#X24;</div>
    :                  ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:64:1]
 64 | 
    : ^
 65 | <div>&#xq;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :      ^^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :          ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :          ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :          ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :           ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:65:1]
 65 | <div>&#xq;</div>
    :                 ^
 66 | <div>&#xqq;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :      ^^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :          ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :          ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :           ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :            ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:66:1]
 66 | <div>&#xqq;</div>
    :                  ^
 67 | <div>&#xqqq;</div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    : ^^^^^
    `----

  x Character { value: '&', raw: Some(Atom('&' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :      ^^^^
    `----

  x Character { value: '#', raw: Some(Atom('#' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :          ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :          ^
    `----

  x Character { value: 'q', raw: Some(Atom('q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :           ^
    `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :            ^
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :             ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:67:1]
 67 | <div>&#xqqq;</div>
    :                   ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:68:1]
 68 | 
    : ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:69:1]
 69 | 
    : ^
 70 | <div>
    `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:70:1]
 70 | <div>
    : ^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:70:1]
 70 | <div>
    :      ^
 71 | &#x80	0x20AC	EURO SIGN (€)
    `----

  x Character { value: '€', raw: Some(Atom('€' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :          ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :           ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :              ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :               ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                  ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                   ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                    ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                     ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                       ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                        ^
    `----

  x Character { value: '€', raw: Some(Atom('€' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                         ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                            ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:71:1]
 71 | &#x80	0x20AC	EURO SIGN (€)
    :                             ^
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    `----

  x Character { value: '‚', raw: Some(Atom('‚' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :           ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :             ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :               ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                    ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                     ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                      ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                       ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                        ^
    `----

  x Character { value: '9', raw: Some(Atom('9' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                          ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                           ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                 ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                  ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                      ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                       ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                         ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                          ^
    `----

  x Character { value: '‚', raw: Some(Atom('‚' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                           ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                              ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:72:1]
 72 | &#x82	0x201A	SINGLE LOW-9 QUOTATION MARK (‚)
    :                                               ^
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    `----

  x Character { value: 'ƒ', raw: Some(Atom('ƒ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :          ^
    `----

  x Character { value: '9', raw: Some(Atom('9' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :           ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                   ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                          ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                           ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                              ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                  ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                   ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                    ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                     ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                       ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                        ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                         ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                          ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                            ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                             ^
    `----

  x Character { value: 'ƒ', raw: Some(Atom('ƒ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                              ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                                ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:73:1]
 73 | &#x83	0x0192	LATIN SMALL LETTER F WITH HOOK (ƒ)
    :                                                 ^
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    `----

  x Character { value: '„', raw: Some(Atom('„' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :           ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :             ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :              ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :               ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                ^
    `----

  x Character { value: 'B', raw: Some(Atom('B' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                    ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                     ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                      ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                       ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                        ^
    `----

  x Character { value: '9', raw: Some(Atom('9' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                          ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                           ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                 ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                  ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                      ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                       ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                         ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                          ^
    `----

  x Character { value: '„', raw: Some(Atom('„' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                           ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                              ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:74:1]
 74 | &#x84	0x201E	DOUBLE LOW-9 QUOTATION MARK („)
    :                                               ^
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    `----

  x Character { value: '…', raw: Some(Atom('…' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :          ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :           ^
    `----

  x Character { value: '6', raw: Some(Atom('6' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :             ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :              ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :               ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                 ^
    `----

  x Character { value: 'Z', raw: Some(Atom('Z' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                  ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                   ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                    ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                        ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                          ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                           ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                            ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                             ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                               ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                 ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                  ^
    `----

  x Character { value: '…', raw: Some(Atom('…' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                   ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                      ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:75:1]
 75 | &#x85	0x2026	HORIZONTAL ELLIPSIS (…)
    :                                       ^
 76 | &#x86	0x2020	DAGGER (†)
    `----

  x Character { value: '†', raw: Some(Atom('†' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :          ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :           ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :             ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :               ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                 ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                  ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                    ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                     ^
    `----

  x Character { value: '†', raw: Some(Atom('†' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                      ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                         ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:76:1]
 76 | &#x86	0x2020	DAGGER (†)
    :                          ^
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    `----

  x Character { value: '‡', raw: Some(Atom('‡' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :          ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :           ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :             ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :              ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :               ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                ^
    `----

  x Character { value: 'B', raw: Some(Atom('B' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                    ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                      ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                       ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                        ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                         ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                          ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                           ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                            ^
    `----

  x Character { value: '‡', raw: Some(Atom('‡' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                             ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                                ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:77:1]
 77 | &#x87	0x2021	DOUBLE DAGGER (‡)
    :                                 ^
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    `----

  x Character { value: 'ˆ', raw: Some(Atom('ˆ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :         ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :          ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :           ^
    `----

  x Character { value: '6', raw: Some(Atom('6' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :             ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :              ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :               ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                 ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                  ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                   ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                    ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                     ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                       ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                        ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                         ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                          ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                           ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                             ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                               ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                 ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                  ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                   ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                    ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                     ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                      ^
    `----

  x Character { value: 'X', raw: Some(Atom('X' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                         ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                          ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                           ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                            ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                               ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                                ^
    `----

  x Character { value: 'ˆ', raw: Some(Atom('ˆ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                                 ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                                   ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:78:1]
 78 | &#x88	0x02C6	MODIFIER LETTER CIRCUMFLEX ACCENT (ˆ)
    :                                                    ^
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    `----

  x Character { value: '‰', raw: Some(Atom('‰' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :          ^
    `----

  x Character { value: '3', raw: Some(Atom('3' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :           ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :             ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :              ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :               ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                 ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                  ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                   ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                    ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                     ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                       ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                        ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                         ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                          ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                           ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                            ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                             ^
    `----

  x Character { value: '‰', raw: Some(Atom('‰' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                              ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                                 ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:79:1]
 79 | &#x89	0x2030	PER MILLE SIGN (‰)
    :                                  ^
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    `----

  x Character { value: 'Š', raw: Some(Atom('Š' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :          ^
    `----

  x Character { value: '6', raw: Some(Atom('6' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :           ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                   ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                     ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                      ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                       ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                          ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                           ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                            ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                               ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                  ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                    ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                     ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                      ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                       ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                         ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                          ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                           ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                             ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                               ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                                ^
    `----

  x Character { value: 'Š', raw: Some(Atom('Š' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                                 ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                                   ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:80:1]
 80 | &#x8A	0x0160	LATIN CAPITAL LETTER S WITH CARON (Š)
    :                                                    ^
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    `----

  x Character { value: '‹', raw: Some(Atom('‹' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :          ^
    `----

  x Character { value: '3', raw: Some(Atom('3' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :           ^
    `----

  x Character { value: '9', raw: Some(Atom('9' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :             ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :               ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                    ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                     ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                      ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                       ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                        ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                         ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                          ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                           ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                            ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                               ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                  ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                   ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                    ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                     ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                      ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                        ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                         ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                          ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                           ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                            ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                               ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                  ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                   ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                    ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                     ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                       ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                        ^
    `----

  x Character { value: '‹', raw: Some(Atom('‹' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                         ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                            ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:81:1]
 81 | &#x8B	0x2039	SINGLE LEFT-POINTING ANGLE QUOTATION MARK (‹)
    :                                                             ^
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    `----

  x Character { value: 'Œ', raw: Some(Atom('Œ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :          ^
    `----

  x Character { value: '5', raw: Some(Atom('5' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :           ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                   ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                     ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                      ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                       ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                          ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                           ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                            ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                             ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                 ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                    ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                     ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                       ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                        ^
    `----

  x Character { value: 'Œ', raw: Some(Atom('Œ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                         ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                           ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:82:1]
 82 | &#x8C	0x0152	LATIN CAPITAL LIGATURE OE (Œ)
    :                                            ^
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    `----

  x Character { value: 'Ž', raw: Some(Atom('Ž' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :          ^
    `----

  x Character { value: '7', raw: Some(Atom('7' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :           ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                   ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                     ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                      ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                       ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                          ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                           ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                            ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                               ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                  ^
    `----

  x Character { value: 'Z', raw: Some(Atom('Z' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                    ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                     ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                      ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                       ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                         ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                          ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                           ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                             ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                              ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                               ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                                ^
    `----

  x Character { value: 'Ž', raw: Some(Atom('Ž' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                                 ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                                   ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:83:1]
 83 | &#x8E	0x017D	LATIN CAPITAL LETTER Z WITH CARON (Ž)
    :                                                    ^
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    `----

  x Character { value: '‘', raw: Some(Atom('‘' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :           ^
    `----

  x Character { value: '8', raw: Some(Atom('8' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :              ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :               ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                  ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                   ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                    ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                     ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                       ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                         ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                          ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                           ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                             ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                               ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                   ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                     ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                      ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                        ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                         ^
    `----

  x Character { value: '‘', raw: Some(Atom('‘' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                          ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                             ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:84:1]
 84 | &#x91	0x2018	LEFT SINGLE QUOTATION MARK (‘)
    :                                              ^
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    `----

  x Character { value: '’', raw: Some(Atom('’' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :           ^
    `----

  x Character { value: '9', raw: Some(Atom('9' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :             ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :               ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                 ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                   ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                    ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                     ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                      ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                        ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                          ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                           ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                 ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                  ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                      ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                       ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                         ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                          ^
    `----

  x Character { value: '’', raw: Some(Atom('’' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                           ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                              ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:85:1]
 85 | &#x92	0x2019	RIGHT SINGLE QUOTATION MARK (’)
    :                                               ^
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    `----

  x Character { value: '“', raw: Some(Atom('“' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :           ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :              ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :               ^
    `----

  x Character { value: 'F', raw: Some(Atom('F' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                  ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                   ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                    ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                     ^
    `----

  x Character { value: 'B', raw: Some(Atom('B' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                       ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                         ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                          ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                           ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                             ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                               ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                   ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                     ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                      ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                        ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                         ^
    `----

  x Character { value: '“', raw: Some(Atom('“' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                          ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                             ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:86:1]
 86 | &#x93	0x201C	LEFT DOUBLE QUOTATION MARK (“)
    :                                              ^
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    `----

  x Character { value: '”', raw: Some(Atom('”' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :           ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :             ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :               ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                 ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                   ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                    ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                     ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                      ^
    `----

  x Character { value: 'B', raw: Some(Atom('B' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                        ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                         ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                          ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                           ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                            ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                 ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                  ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                      ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                       ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                         ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                          ^
    `----

  x Character { value: '”', raw: Some(Atom('”' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                           ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                              ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:87:1]
 87 | &#x94	0x201D	RIGHT DOUBLE QUOTATION MARK (”)
    :                                               ^
 88 | &#x95	0x2022	BULLET (•)
    `----

  x Character { value: '•', raw: Some(Atom('•' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :          ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :           ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :             ^
    `----

  x Character { value: 'B', raw: Some(Atom('B' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :              ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :               ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                 ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                  ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                    ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                     ^
    `----

  x Character { value: '•', raw: Some(Atom('•' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                      ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                         ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:88:1]
 88 | &#x95	0x2022	BULLET (•)
    :                          ^
 89 | &#x96	0x2013	EN DASH (–)
    `----

  x Character { value: '–', raw: Some(Atom('–' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :           ^
    `----

  x Character { value: '3', raw: Some(Atom('3' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :              ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                 ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                  ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                   ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                    ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                     ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                      ^
    `----

  x Character { value: '–', raw: Some(Atom('–' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                       ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                          ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:89:1]
 89 | &#x96	0x2013	EN DASH (–)
    :                           ^
 90 | &#x97	0x2014	EM DASH (—)
    `----

  x Character { value: '—', raw: Some(Atom('—' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :          ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :           ^
    `----

  x Character { value: '4', raw: Some(Atom('4' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :              ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                 ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                  ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                   ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                    ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                     ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                      ^
    `----

  x Character { value: '—', raw: Some(Atom('—' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                       ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                          ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:90:1]
 90 | &#x97	0x2014	EM DASH (—)
    :                           ^
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    `----

  x Character { value: '˜', raw: Some(Atom('˜' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :         ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :          ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :           ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :             ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :              ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :               ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                   ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                    ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                     ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                      ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                       ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                         ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                          ^
    `----

  x Character { value: '˜', raw: Some(Atom('˜' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                           ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                             ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:91:1]
 91 | &#x98	0x02DC	SMALL TILDE (˜)
    :                              ^
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    `----

  x Character { value: '™', raw: Some(Atom('™' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :          ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :           ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :              ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :               ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                 ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                   ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                     ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                      ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                        ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                         ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                          ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                           ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                             ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                              ^
    `----

  x Character { value: '™', raw: Some(Atom('™' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                               ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                                  ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:92:1]
 92 | &#x99	0x2122	TRADE MARK SIGN (™)
    :                                   ^
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    `----

  x Character { value: 'š', raw: Some(Atom('š' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :          ^
    `----

  x Character { value: '6', raw: Some(Atom('6' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :           ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                   ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                          ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                           ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                              ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                  ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                   ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                    ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                     ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                       ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                         ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                          ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                           ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                             ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                              ^
    `----

  x Character { value: 'š', raw: Some(Atom('š' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                               ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                                 ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:93:1]
 93 | &#x9A	0x0161	LATIN SMALL LETTER S WITH CARON (š)
    :                                                  ^
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    `----

  x Character { value: '›', raw: Some(Atom('›' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :        ^
    `----

  x Character { value: '2', raw: Some(Atom('2' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :         ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :          ^
    `----

  x Character { value: '3', raw: Some(Atom('3' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :           ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :             ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :              ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :               ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                 ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                  ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                    ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                     ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                      ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                       ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                        ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                         ^
    `----

  x Character { value: '-', raw: Some(Atom('-' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                          ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                           ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                            ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                             ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                               ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                 ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                   ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                    ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                     ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                       ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                         ^
    `----

  x Character { value: 'Q', raw: Some(Atom('Q' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                          ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                           ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                             ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                               ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                   ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                     ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                      ^
    `----

  x Character { value: 'K', raw: Some(Atom('K' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                       ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                        ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                         ^
    `----

  x Character { value: '›', raw: Some(Atom('›' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                          ^^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                             ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:94:1]
 94 | &#x9B	0x203A	SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (›)
    :                                                              ^
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    `----

  x Character { value: 'œ', raw: Some(Atom('œ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :          ^
    `----

  x Character { value: '5', raw: Some(Atom('5' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :           ^
    `----

  x Character { value: '3', raw: Some(Atom('3' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                   ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                          ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                           ^
    `----

  x Character { value: 'G', raw: Some(Atom('G' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                            ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                              ^
    `----

  x Character { value: 'U', raw: Some(Atom('U' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                               ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                  ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                   ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                    ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                     ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                      ^
    `----

  x Character { value: 'œ', raw: Some(Atom('œ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                       ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                         ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:95:1]
 95 | &#x9C	0x0153	LATIN SMALL LIGATURE OE (œ)
    :                                          ^
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    `----

  x Character { value: 'ž', raw: Some(Atom('ž' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :          ^
    `----

  x Character { value: '7', raw: Some(Atom('7' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :           ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                   ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                    ^
    `----

  x Character { value: 'M', raw: Some(Atom('M' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                     ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                      ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                       ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                          ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                           ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                            ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                             ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                              ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                               ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                ^
    `----

  x Character { value: 'Z', raw: Some(Atom('Z' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                  ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                   ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                    ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                     ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                      ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                       ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                         ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                          ^
    `----

  x Character { value: 'O', raw: Some(Atom('O' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                           ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                            ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                             ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                              ^
    `----

  x Character { value: 'ž', raw: Some(Atom('ž' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                               ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                                 ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:96:1]
 96 | &#x9E	0x017E	LATIN SMALL LETTER Z WITH CARON (ž)
    :                                                  ^
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    `----

  x Character { value: 'Ÿ', raw: Some(Atom('Ÿ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    : ^^^^^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :      ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :       ^
    `----

  x Character { value: 'x', raw: Some(Atom('x' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :        ^
    `----

  x Character { value: '0', raw: Some(Atom('0' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :         ^
    `----

  x Character { value: '1', raw: Some(Atom('1' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :          ^
    `----

  x Character { value: '7', raw: Some(Atom('7' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :           ^
    `----

  x Character { value: '8', raw: Some(Atom('8' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :            ^
    `----

  x Character { value: '\t', raw: Some(Atom('	' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :             ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :              ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :               ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                 ^
    `----

  x Character { value: 'N', raw: Some(Atom('N' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                   ^
    `----

  x Character { value: 'C', raw: Some(Atom('C' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                    ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                     ^
    `----

  x Character { value: 'P', raw: Some(Atom('P' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                      ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                       ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                        ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                         ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                          ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                           ^
    `----

  x Character { value: 'L', raw: Some(Atom('L' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                            ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                             ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                              ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                               ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                 ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                  ^
    `----

  x Character { value: 'Y', raw: Some(Atom('Y' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                   ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                    ^
    `----

  x Character { value: 'W', raw: Some(Atom('W' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                     ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                      ^
    `----

  x Character { value: 'T', raw: Some(Atom('T' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                       ^
    `----

  x Character { value: 'H', raw: Some(Atom('H' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                        ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                         ^
    `----

  x Character { value: 'D', raw: Some(Atom('D' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                          ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                           ^
    `----

  x Character { value: 'A', raw: Some(Atom('A' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                            ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                             ^
    `----

  x Character { value: 'R', raw: Some(Atom('R' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                              ^
    `----

  x Character { value: 'E', raw: Some(Atom('E' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                               ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                ^
    `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                 ^
    `----

  x Character { value: 'S', raw: Some(Atom('S' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                  ^
    `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                   ^
    `----

  x Character { value: '(', raw: Some(Atom('(' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                    ^
    `----

  x Character { value: 'Ÿ', raw: Some(Atom('Ÿ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                     ^^
    `----

  x Character { value: ')', raw: Some(Atom(')' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                       ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:97:1]
 97 | &#x9F	0x0178	LATIN CAPITAL LETTER Y WITH DIAERESIS (Ÿ)
    :                                                        ^
 98 | </div>
    `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
    ,-[$DIR/tests/fixture/html-entity/input.html:98:1]
 98 | </div>
    : ^^^^^^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
    ,-[$DIR/tests/fixture/html-entity/input.html:98:1]
 98 | </div>
    :       ^
    `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:99:1]
  99 | 
     : ^
 100 | <div>I'm &notin; I tell you</div>
     `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     : ^^^^^
     `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :      ^
     `----

  x Character { value: '\'', raw: Some(Atom(''' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :       ^
     `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :        ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :         ^
     `----

  x Character { value: '∉', raw: Some(Atom('∉' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :          ^^^^^^^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                 ^
     `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                  ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                   ^
     `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                    ^
     `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                     ^
     `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                      ^
     `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                       ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                        ^
     `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                         ^
     `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                          ^
     `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                           ^
     `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                            ^^^^^^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:100:1]
 100 | <div>I'm &notin; I tell you</div>
     :                                  ^
 101 | <div>I'm &notit; I tell you</div>
     `----

  x StartTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     : ^^^^^
     `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :      ^
     `----

  x Character { value: '\'', raw: Some(Atom(''' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :       ^
     `----

  x Character { value: 'm', raw: Some(Atom('m' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :        ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :         ^
     `----

  x Character { value: '¬', raw: Some(Atom('¬' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :          ^^^^
     `----

  x Character { value: 'i', raw: Some(Atom('i' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :              ^
     `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :               ^
     `----

  x Character { value: ';', raw: Some(Atom(';' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                 ^
     `----

  x Character { value: 'I', raw: Some(Atom('I' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                  ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                   ^
     `----

  x Character { value: 't', raw: Some(Atom('t' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                    ^
     `----

  x Character { value: 'e', raw: Some(Atom('e' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                     ^
     `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                      ^
     `----

  x Character { value: 'l', raw: Some(Atom('l' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                       ^
     `----

  x Character { value: ' ', raw: Some(Atom(' ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                        ^
     `----

  x Character { value: 'y', raw: Some(Atom('y' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                         ^
     `----

  x Character { value: 'o', raw: Some(Atom('o' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                          ^
     `----

  x Character { value: 'u', raw: Some(Atom('u' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                           ^
     `----

  x EndTag { tag_name: Atom('div' type=inline), raw_tag_name: Some(Atom('div' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                            ^^^^^^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:101:1]
 101 | <div>I'm &notit; I tell you</div>
     :                                  ^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:102:1]
 102 | 
     : ^
 103 | </body>
     `----

  x EndTag { tag_name: Atom('body' type=inline), raw_tag_name: Some(Atom('body' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:103:1]
 103 | </body>
     : ^^^^^^^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:103:1]
 103 | </body>
     :        ^
 104 | </html>
     `----

  x EndTag { tag_name: Atom('html' type=inline), raw_tag_name: Some(Atom('html' type=inline)), self_closing: false, attributes: [] }
     ,-[$DIR/tests/fixture/html-entity/input.html:104:1]
 104 | </html>
     : ^^^^^^^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:104:1]
 104 | </html>
     :        ^
     `----

  x Character { value: '\n', raw: Some(Atom('
  | ' type=inline)) }
     ,-[$DIR/tests/fixture/html-entity/input.html:105:1]
 105 | 
     : ^
     `----
