{
  "type": "Script",
  "span": {
    "start": 1,
    "end": 71,
    "ctxt": 0
  },
  "body": [
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 10,
          "end": 11,
          "ctxt": 0
        },
        "value": "f",
        "optional": false
      },
      "declare": false,
      "params": [],
      "decorators": [],
      "span": {
        "start": 1,
        "end": 71,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 14,
          "end": 71,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "VariableDeclaration",
            "span": {
              "start": 21,
              "end": 33,
              "ctxt": 0
            },
            "kind": "var",
            "declare": false,
            "declarations": [
              {
                "type": "VariableDeclarator",
                "span": {
                  "start": 25,
                  "end": 26,
                  "ctxt": 0
                },
                "id": {
                  "type": "Identifier",
                  "span": {
                    "start": 25,
                    "end": 26,
                    "ctxt": 0
                  },
                  "value": "a",
                  "optional": false,
                  "typeAnnotation": null
                },
                "init": null,
                "definite": false
              },
              {
                "type": "VariableDeclarator",
                "span": {
                  "start": 28,
                  "end": 29,
                  "ctxt": 0
                },
                "id": {
                  "type": "Identifier",
                  "span": {
                    "start": 28,
                    "end": 29,
                    "ctxt": 0
                  },
                  "value": "b",
                  "optional": false,
                  "typeAnnotation": null
                },
                "init": null,
                "definite": false
              },
              {
                "type": "VariableDeclarator",
                "span": {
                  "start": 31,
                  "end": 32,
                  "ctxt": 0
                },
                "id": {
                  "type": "Identifier",
                  "span": {
                    "start": 31,
                    "end": 32,
                    "ctxt": 0
                  },
                  "value": "c",
                  "optional": false,
                  "typeAnnotation": null
                },
                "init": null,
                "definite": false
              }
            ]
          },
          {
            "type": "IfStatement",
            "span": {
              "start": 39,
              "end": 68,
              "ctxt": 0
            },
            "test": {
              "type": "BinaryExpression",
              "span": {
                "start": 43,
                "end": 63,
                "ctxt": 0
              },
              "operator": "&&",
              "left": {
                "type": "BinaryExpression",
                "span": {
                  "start": 43,
                  "end": 48,
                  "ctxt": 0
                },
                "operator": "<",
                "left": {
                  "type": "Identifier",
                  "span": {
                    "start": 43,
                    "end": 44,
                    "ctxt": 0
                  },
                  "value": "a",
                  "optional": false
                },
                "right": {
                  "type": "Identifier",
                  "span": {
                    "start": 47,
                    "end": 48,
                    "ctxt": 0
                  },
                  "value": "b",
                  "optional": false
                }
              },
              "right": {
                "type": "BinaryExpression",
                "span": {
                  "start": 52,
                  "end": 63,
                  "ctxt": 0
                },
                "operator": ">",
                "left": {
                  "type": "Identifier",
                  "span": {
                    "start": 52,
                    "end": 53,
                    "ctxt": 0
                  },
                  "value": "b",
                  "optional": false
                },
                "right": {
                  "type": "ParenthesisExpression",
                  "span": {
                    "start": 56,
                    "end": 63,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 57,
                      "end": 62,
                      "ctxt": 0
                    },
                    "operator": "+",
                    "left": {
                      "type": "Identifier",
                      "span": {
                        "start": 57,
                        "end": 58,
                        "ctxt": 0
                      },
                      "value": "c",
                      "optional": false
                    },
                    "right": {
                      "type": "NumericLiteral",
                      "span": {
                        "start": 61,
                        "end": 62,
                        "ctxt": 0
                      },
                      "value": 1.0,
                      "raw": "1"
                    }
                  }
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "span": {
                "start": 65,
                "end": 68,
                "ctxt": 0
              },
              "stmts": []
            },
            "alternate": null
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    }
  ],
  "interpreter": null
}
