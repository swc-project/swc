{
  "type": "Script",
  "span": {
    "start": 89,
    "end": 186
  },
  "body": [
    {
      "type": "ForOfStatement",
      "span": {
        "start": 89,
        "end": 137
      },
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "span": {
          "start": 94,
          "end": 113
        },
        "ctxt": 0,
        "kind": "let",
        "declare": false,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "span": {
              "start": 98,
              "end": 113
            },
            "id": {
              "type": "ArrayPattern",
              "span": {
                "start": 98,
                "end": 113
              },
              "elements": [
                {
                  "type": "AssignmentPattern",
                  "span": {
                    "start": 99,
                    "end": 112
                  },
                  "left": {
                    "type": "Identifier",
                    "span": {
                      "start": 99,
                      "end": 100
                    },
                    "ctxt": 0,
                    "value": "x",
                    "optional": false,
                    "typeAnnotation": null
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 103,
                      "end": 112
                    },
                    "operator": "in",
                    "left": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 103,
                        "end": 106
                      },
                      "value": "a",
                      "raw": "'a'"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "span": {
                        "start": 110,
                        "end": 112
                      },
                      "properties": []
                    }
                  }
                }
              ],
              "optional": false,
              "typeAnnotation": null
            },
            "init": null,
            "definite": false
          }
        ]
      },
      "right": {
        "type": "ArrayExpression",
        "span": {
          "start": 117,
          "end": 121
        },
        "elements": [
          {
            "spread": null,
            "expression": {
              "type": "ArrayExpression",
              "span": {
                "start": 118,
                "end": 120
              },
              "elements": []
            }
          }
        ]
      },
      "body": {
        "type": "ExpressionStatement",
        "span": {
          "start": 123,
          "end": 137
        },
        "expression": {
          "type": "CallExpression",
          "span": {
            "start": 123,
            "end": 137
          },
          "ctxt": 0,
          "callee": {
            "type": "MemberExpression",
            "span": {
              "start": 123,
              "end": 134
            },
            "object": {
              "type": "Identifier",
              "span": {
                "start": 123,
                "end": 130
              },
              "ctxt": 0,
              "value": "console",
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "span": {
                "start": 131,
                "end": 134
              },
              "value": "log"
            }
          },
          "arguments": [
            {
              "spread": null,
              "expression": {
                "type": "Identifier",
                "span": {
                  "start": 135,
                  "end": 136
                },
                "ctxt": 0,
                "value": "x",
                "optional": false
              }
            }
          ],
          "typeArguments": null
        }
      }
    },
    {
      "type": "ForOfStatement",
      "span": {
        "start": 138,
        "end": 186
      },
      "await": false,
      "left": {
        "type": "VariableDeclaration",
        "span": {
          "start": 143,
          "end": 162
        },
        "ctxt": 0,
        "kind": "let",
        "declare": false,
        "declarations": [
          {
            "type": "VariableDeclarator",
            "span": {
              "start": 147,
              "end": 162
            },
            "id": {
              "type": "ObjectPattern",
              "span": {
                "start": 147,
                "end": 162
              },
              "properties": [
                {
                  "type": "AssignmentPatternProperty",
                  "span": {
                    "start": 148,
                    "end": 161
                  },
                  "key": {
                    "type": "Identifier",
                    "span": {
                      "start": 148,
                      "end": 149
                    },
                    "ctxt": 0,
                    "value": "x",
                    "optional": false,
                    "typeAnnotation": null
                  },
                  "value": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 152,
                      "end": 161
                    },
                    "operator": "in",
                    "left": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 152,
                        "end": 155
                      },
                      "value": "a",
                      "raw": "'a'"
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "span": {
                        "start": 159,
                        "end": 161
                      },
                      "properties": []
                    }
                  }
                }
              ],
              "optional": false,
              "typeAnnotation": null
            },
            "init": null,
            "definite": false
          }
        ]
      },
      "right": {
        "type": "ArrayExpression",
        "span": {
          "start": 166,
          "end": 170
        },
        "elements": [
          {
            "spread": null,
            "expression": {
              "type": "ObjectExpression",
              "span": {
                "start": 167,
                "end": 169
              },
              "properties": []
            }
          }
        ]
      },
      "body": {
        "type": "ExpressionStatement",
        "span": {
          "start": 172,
          "end": 186
        },
        "expression": {
          "type": "CallExpression",
          "span": {
            "start": 172,
            "end": 186
          },
          "ctxt": 0,
          "callee": {
            "type": "MemberExpression",
            "span": {
              "start": 172,
              "end": 183
            },
            "object": {
              "type": "Identifier",
              "span": {
                "start": 172,
                "end": 179
              },
              "ctxt": 0,
              "value": "console",
              "optional": false
            },
            "property": {
              "type": "Identifier",
              "span": {
                "start": 180,
                "end": 183
              },
              "value": "log"
            }
          },
          "arguments": [
            {
              "spread": null,
              "expression": {
                "type": "Identifier",
                "span": {
                  "start": 184,
                  "end": 185
                },
                "ctxt": 0,
                "value": "x",
                "optional": false
              }
            }
          ],
          "typeArguments": null
        }
      }
    }
  ],
  "interpreter": null
}
