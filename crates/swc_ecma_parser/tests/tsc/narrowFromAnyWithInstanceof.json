{
  "type": "Script",
  "span": {
    "start": 1,
    "end": 475,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 1,
        "end": 20,
        "ctxt": 0
      },
      "kind": "var",
      "declare": true,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 13,
            "end": 19,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 13,
              "end": 14,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 14,
                "end": 19,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsKeywordType",
                "span": {
                  "start": 16,
                  "end": 19,
                  "ctxt": 0
                },
                "kind": "any"
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 24,
        "end": 169,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 28,
          "end": 49,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 28,
            "end": 29,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 41,
            "end": 49,
            "ctxt": 0
          },
          "value": "Function",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 51,
          "end": 169,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 114,
              "end": 118,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 114,
                "end": 117,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 114,
                  "end": 115,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 124,
              "end": 135,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 124,
                "end": 134,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 124,
                  "end": 125,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 126,
                      "end": 127,
                      "ctxt": 0
                    },
                    "value": 1.0,
                    "raw": "1"
                  }
                },
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 129,
                      "end": 130,
                      "ctxt": 0
                    },
                    "value": 2.0,
                    "raw": "2"
                  }
                },
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 132,
                      "end": 133,
                      "ctxt": 0
                    },
                    "value": 3.0,
                    "raw": "3"
                  }
                }
              ],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 141,
              "end": 153,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 141,
                "end": 152,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 141,
                  "end": 142,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [
                {
                  "spread": null,
                  "expression": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 143,
                      "end": 151,
                      "ctxt": 0
                    },
                    "value": "hello!",
                    "raw": "\"hello!\""
                  }
                }
              ],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 159,
              "end": 166,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 159,
                "end": 165,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 159,
                  "end": 160,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 161,
                  "end": 165,
                  "ctxt": 0
                },
                "value": "prop",
                "optional": false
              }
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 173,
        "end": 283,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 177,
          "end": 196,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 177,
            "end": 178,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 190,
            "end": 196,
            "ctxt": 0
          },
          "value": "Object",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 198,
          "end": 283,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 259,
              "end": 270,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 259,
                "end": 269,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 259,
                  "end": 267,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 259,
                    "end": 260,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 261,
                    "end": 267,
                    "ctxt": 0
                  },
                  "value": "method",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 276,
              "end": 280,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 276,
                "end": 279,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 276,
                  "end": 277,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 287,
        "end": 407,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 291,
          "end": 309,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 291,
            "end": 292,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 304,
            "end": 309,
            "ctxt": 0
          },
          "value": "Error",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 311,
          "end": 407,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 379,
              "end": 389,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 379,
                "end": 388,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 379,
                  "end": 380,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 381,
                  "end": 388,
                  "ctxt": 0
                },
                "value": "message",
                "optional": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 395,
              "end": 404,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 395,
                "end": 403,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 395,
                  "end": 396,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 397,
                  "end": 403,
                  "ctxt": 0
                },
                "value": "mesage",
                "optional": false
              }
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 411,
        "end": 475,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 415,
          "end": 432,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 415,
            "end": 416,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 428,
            "end": 432,
            "ctxt": 0
          },
          "value": "Date",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 434,
          "end": 475,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 441,
              "end": 453,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 441,
                "end": 452,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 441,
                  "end": 450,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 441,
                    "end": 442,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 443,
                    "end": 450,
                    "ctxt": 0
                  },
                  "value": "getDate",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 459,
              "end": 472,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 459,
                "end": 471,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 459,
                  "end": 469,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 459,
                    "end": 460,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 461,
                    "end": 469,
                    "ctxt": 0
                  },
                  "value": "getHuors",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "interpreter": null
}
