{
  "type": "Script",
  "span": {
    "start": 0,
    "end": 474,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 0,
        "end": 19,
        "ctxt": 0
      },
      "kind": "var",
      "declare": true,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 12,
            "end": 18,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 12,
              "end": 13,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 13,
                "end": 18,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsKeywordType",
                "span": {
                  "start": 15,
                  "end": 18,
                  "ctxt": 0
                },
                "kind": "any"
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 23,
        "end": 168,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 27,
          "end": 48,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 27,
            "end": 28,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 40,
            "end": 48,
            "ctxt": 0
          },
          "value": "Function",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 50,
          "end": 168,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 113,
              "end": 117,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 113,
                "end": 116,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 113,
                  "end": 114,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 123,
              "end": 134,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 123,
                "end": 133,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 123,
                  "end": 124,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 125,
                      "end": 126,
                      "ctxt": 0
                    },
                    "value": 1.0
                  }
                },
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 128,
                      "end": 129,
                      "ctxt": 0
                    },
                    "value": 2.0
                  }
                },
                {
                  "spread": null,
                  "expression": {
                    "type": "NumericLiteral",
                    "span": {
                      "start": 131,
                      "end": 132,
                      "ctxt": 0
                    },
                    "value": 3.0
                  }
                }
              ],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 140,
              "end": 152,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 140,
                "end": 151,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 140,
                  "end": 141,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [
                {
                  "spread": null,
                  "expression": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 142,
                      "end": 150,
                      "ctxt": 0
                    },
                    "value": "hello!",
                    "hasEscape": false,
                    "kind": {
                      "type": "normal",
                      "containsQuote": true
                    }
                  }
                }
              ],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 158,
              "end": 165,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 158,
                "end": 164,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 158,
                  "end": 159,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 160,
                  "end": 164,
                  "ctxt": 0
                },
                "value": "prop",
                "optional": false
              }
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 172,
        "end": 282,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 176,
          "end": 195,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 176,
            "end": 177,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 189,
            "end": 195,
            "ctxt": 0
          },
          "value": "Object",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 197,
          "end": 282,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 258,
              "end": 269,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 258,
                "end": 268,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 258,
                  "end": 266,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 258,
                    "end": 259,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 260,
                    "end": 266,
                    "ctxt": 0
                  },
                  "value": "method",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 275,
              "end": 279,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 275,
                "end": 278,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 275,
                  "end": 276,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 286,
        "end": 406,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 290,
          "end": 308,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 290,
            "end": 291,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 303,
            "end": 308,
            "ctxt": 0
          },
          "value": "Error",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 310,
          "end": 406,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 378,
              "end": 388,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 378,
                "end": 387,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 378,
                  "end": 379,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 380,
                  "end": 387,
                  "ctxt": 0
                },
                "value": "message",
                "optional": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 394,
              "end": 403,
              "ctxt": 0
            },
            "expression": {
              "type": "MemberExpression",
              "span": {
                "start": 394,
                "end": 402,
                "ctxt": 0
              },
              "object": {
                "type": "Identifier",
                "span": {
                  "start": 394,
                  "end": 395,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              "property": {
                "type": "Identifier",
                "span": {
                  "start": 396,
                  "end": 402,
                  "ctxt": 0
                },
                "value": "mesage",
                "optional": false
              }
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 410,
        "end": 474,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 414,
          "end": 431,
          "ctxt": 0
        },
        "operator": "instanceof",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 414,
            "end": 415,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "Identifier",
          "span": {
            "start": 427,
            "end": 431,
            "ctxt": 0
          },
          "value": "Date",
          "optional": false
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 433,
          "end": 474,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 440,
              "end": 452,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 440,
                "end": 451,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 440,
                  "end": 449,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 440,
                    "end": 441,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 442,
                    "end": 449,
                    "ctxt": 0
                  },
                  "value": "getDate",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 458,
              "end": 471,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 458,
                "end": 470,
                "ctxt": 0
              },
              "callee": {
                "type": "MemberExpression",
                "span": {
                  "start": 458,
                  "end": 468,
                  "ctxt": 0
                },
                "object": {
                  "type": "Identifier",
                  "span": {
                    "start": 458,
                    "end": 459,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                "property": {
                  "type": "Identifier",
                  "span": {
                    "start": 460,
                    "end": 468,
                    "ctxt": 0
                  },
                  "value": "getHuors",
                  "optional": false
                }
              },
              "arguments": [],
              "typeArguments": null
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "interpreter": null
}
