{
  "type": "Script",
  "span": {
    "start": 0,
    "end": 389,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 0,
        "end": 13,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 4,
            "end": 12,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 4,
              "end": 5,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 5,
                "end": 12,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsLiteralType",
                "span": {
                  "start": 7,
                  "end": 12,
                  "ctxt": 0
                },
                "literal": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 7,
                    "end": 12,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 15,
        "end": 36,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 19,
            "end": 35,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 19,
              "end": 20,
              "ctxt": 0
            },
            "value": "y",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 20,
                "end": 35,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 22,
                  "end": 35,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 22,
                      "end": 27,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 22,
                        "end": 27,
                        "ctxt": 0
                      },
                      "value": "foo",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  },
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 30,
                      "end": 35,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 30,
                        "end": 35,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "hasEscape": false,
                      "kind": {
                        "type": "normal",
                        "containsQuote": true
                      }
                    }
                  }
                ]
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 58,
          "end": 66,
          "ctxt": 0
        },
        "value": "randBool",
        "optional": false
      },
      "declare": true,
      "params": [],
      "decorators": [],
      "span": {
        "start": 41,
        "end": 78,
        "ctxt": 0
      },
      "body": null,
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": {
        "type": "TsTypeAnnotation",
        "span": {
          "start": 68,
          "end": 77,
          "ctxt": 0
        },
        "typeAnnotation": {
          "type": "TsKeywordType",
          "span": {
            "start": 70,
            "end": 77,
            "ctxt": 0
          },
          "kind": "boolean"
        }
      }
    },
    {
      "type": "SwitchStatement",
      "span": {
        "start": 82,
        "end": 389,
        "ctxt": 0
      },
      "discriminant": {
        "type": "Identifier",
        "span": {
          "start": 90,
          "end": 91,
          "ctxt": 0
        },
        "value": "y",
        "optional": false
      },
      "cases": [
        {
          "type": "SwitchCase",
          "span": {
            "start": 100,
            "end": 130,
            "ctxt": 0
          },
          "test": {
            "type": "SequenceExpression",
            "span": {
              "start": 105,
              "end": 113,
              "ctxt": 0
            },
            "expressions": [
              {
                "type": "StringLiteral",
                "span": {
                  "start": 105,
                  "end": 110,
                  "ctxt": 0
                },
                "value": "foo",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              },
              {
                "type": "Identifier",
                "span": {
                  "start": 112,
                  "end": 113,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              }
            ]
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 124,
                "end": 130,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 136,
            "end": 166,
            "ctxt": 0
          },
          "test": {
            "type": "SequenceExpression",
            "span": {
              "start": 141,
              "end": 149,
              "ctxt": 0
            },
            "expressions": [
              {
                "type": "Identifier",
                "span": {
                  "start": 141,
                  "end": 142,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              {
                "type": "StringLiteral",
                "span": {
                  "start": 144,
                  "end": 149,
                  "ctxt": 0
                },
                "value": "foo",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            ]
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 160,
                "end": 166,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 172,
            "end": 202,
            "ctxt": 0
          },
          "test": {
            "type": "SequenceExpression",
            "span": {
              "start": 177,
              "end": 185,
              "ctxt": 0
            },
            "expressions": [
              {
                "type": "Identifier",
                "span": {
                  "start": 177,
                  "end": 178,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              },
              {
                "type": "StringLiteral",
                "span": {
                  "start": 180,
                  "end": 185,
                  "ctxt": 0
                },
                "value": "baz",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              }
            ]
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 196,
                "end": 202,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 208,
            "end": 238,
            "ctxt": 0
          },
          "test": {
            "type": "SequenceExpression",
            "span": {
              "start": 213,
              "end": 221,
              "ctxt": 0
            },
            "expressions": [
              {
                "type": "StringLiteral",
                "span": {
                  "start": 213,
                  "end": 218,
                  "ctxt": 0
                },
                "value": "baz",
                "hasEscape": false,
                "kind": {
                  "type": "normal",
                  "containsQuote": true
                }
              },
              {
                "type": "Identifier",
                "span": {
                  "start": 220,
                  "end": 221,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              }
            ]
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 232,
                "end": 238,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 244,
            "end": 280,
            "ctxt": 0
          },
          "test": {
            "type": "BinaryExpression",
            "span": {
              "start": 249,
              "end": 263,
              "ctxt": 0
            },
            "operator": "&&",
            "left": {
              "type": "StringLiteral",
              "span": {
                "start": 249,
                "end": 254,
                "ctxt": 0
              },
              "value": "baz",
              "hasEscape": false,
              "kind": {
                "type": "normal",
                "containsQuote": true
              }
            },
            "right": {
              "type": "StringLiteral",
              "span": {
                "start": 258,
                "end": 263,
                "ctxt": 0
              },
              "value": "bar",
              "hasEscape": false,
              "kind": {
                "type": "normal",
                "containsQuote": true
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 274,
                "end": 280,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 286,
            "end": 333,
            "ctxt": 0
          },
          "test": {
            "type": "BinaryExpression",
            "span": {
              "start": 291,
              "end": 316,
              "ctxt": 0
            },
            "operator": "&&",
            "left": {
              "type": "StringLiteral",
              "span": {
                "start": 291,
                "end": 296,
                "ctxt": 0
              },
              "value": "baz",
              "hasEscape": false,
              "kind": {
                "type": "normal",
                "containsQuote": true
              }
            },
            "right": {
              "type": "ParenthesisExpression",
              "span": {
                "start": 300,
                "end": 316,
                "ctxt": 0
              },
              "expression": {
                "type": "BinaryExpression",
                "span": {
                  "start": 301,
                  "end": 315,
                  "ctxt": 0
                },
                "operator": "||",
                "left": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 301,
                    "end": 306,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 310,
                    "end": 315,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 327,
                "end": 333,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 339,
            "end": 386,
            "ctxt": 0
          },
          "test": {
            "type": "BinaryExpression",
            "span": {
              "start": 344,
              "end": 369,
              "ctxt": 0
            },
            "operator": "&&",
            "left": {
              "type": "StringLiteral",
              "span": {
                "start": 344,
                "end": 349,
                "ctxt": 0
              },
              "value": "bar",
              "hasEscape": false,
              "kind": {
                "type": "normal",
                "containsQuote": true
              }
            },
            "right": {
              "type": "ParenthesisExpression",
              "span": {
                "start": 353,
                "end": 369,
                "ctxt": 0
              },
              "expression": {
                "type": "BinaryExpression",
                "span": {
                  "start": 354,
                  "end": 368,
                  "ctxt": 0
                },
                "operator": "||",
                "left": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 354,
                    "end": 359,
                    "ctxt": 0
                  },
                  "value": "baz",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                },
                "right": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 363,
                    "end": 368,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "hasEscape": false,
                  "kind": {
                    "type": "normal",
                    "containsQuote": true
                  }
                }
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 380,
                "end": 386,
                "ctxt": 0
              },
              "label": null
            }
          ]
        }
      ]
    }
  ],
  "interpreter": null
}
