{
  "type": "Script",
  "span": {
    "start": 1,
    "end": 513,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 1,
        "end": 14,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 5,
            "end": 13,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 5,
              "end": 6,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 6,
                "end": 13,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsLiteralType",
                "span": {
                  "start": 8,
                  "end": 13,
                  "ctxt": 0
                },
                "literal": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 8,
                    "end": 13,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                }
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 16,
        "end": 37,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 20,
            "end": 36,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 20,
              "end": 21,
              "ctxt": 0
            },
            "value": "y",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 21,
                "end": 36,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 23,
                  "end": 36,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 23,
                      "end": 28,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 23,
                        "end": 28,
                        "ctxt": 0
                      },
                      "value": "foo",
                      "raw": "\"foo\""
                    }
                  },
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 31,
                      "end": 36,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 31,
                        "end": 36,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "raw": "\"bar\""
                    }
                  }
                ]
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 40,
        "end": 53,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 44,
            "end": 52,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 44,
              "end": 45,
              "ctxt": 0
            },
            "value": "z",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 45,
                "end": 52,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsLiteralType",
                "span": {
                  "start": 47,
                  "end": 52,
                  "ctxt": 0
                },
                "literal": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 47,
                    "end": 52,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "raw": "\"bar\""
                }
              }
            }
          },
          "init": null,
          "definite": false
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 74,
          "end": 82,
          "ctxt": 0
        },
        "value": "randBool",
        "optional": false
      },
      "declare": true,
      "params": [],
      "decorators": [],
      "span": {
        "start": 57,
        "end": 94,
        "ctxt": 0
      },
      "body": null,
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": {
        "type": "TsTypeAnnotation",
        "span": {
          "start": 84,
          "end": 93,
          "ctxt": 0
        },
        "typeAnnotation": {
          "type": "TsKeywordType",
          "span": {
            "start": 86,
            "end": 93,
            "ctxt": 0
          },
          "kind": "boolean"
        }
      }
    },
    {
      "type": "SwitchStatement",
      "span": {
        "start": 98,
        "end": 513,
        "ctxt": 0
      },
      "discriminant": {
        "type": "Identifier",
        "span": {
          "start": 106,
          "end": 107,
          "ctxt": 0
        },
        "value": "x",
        "optional": false
      },
      "cases": [
        {
          "type": "SwitchCase",
          "span": {
            "start": 116,
            "end": 164,
            "ctxt": 0
          },
          "test": {
            "type": "ConditionalExpression",
            "span": {
              "start": 121,
              "end": 147,
              "ctxt": 0
            },
            "test": {
              "type": "CallExpression",
              "span": {
                "start": 121,
                "end": 131,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 121,
                  "end": 129,
                  "ctxt": 0
                },
                "value": "randBool",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            },
            "consequent": {
              "type": "StringLiteral",
              "span": {
                "start": 134,
                "end": 139,
                "ctxt": 0
              },
              "value": "foo",
              "raw": "\"foo\""
            },
            "alternate": {
              "type": "StringLiteral",
              "span": {
                "start": 142,
                "end": 147,
                "ctxt": 0
              },
              "value": "baz",
              "raw": "\"baz\""
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 158,
                "end": 164,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 170,
            "end": 238,
            "ctxt": 0
          },
          "test": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 175,
              "end": 221,
              "ctxt": 0
            },
            "expression": {
              "type": "ConditionalExpression",
              "span": {
                "start": 176,
                "end": 220,
                "ctxt": 0
              },
              "test": {
                "type": "CallExpression",
                "span": {
                  "start": 176,
                  "end": 186,
                  "ctxt": 0
                },
                "callee": {
                  "type": "Identifier",
                  "span": {
                    "start": 176,
                    "end": 184,
                    "ctxt": 0
                  },
                  "value": "randBool",
                  "optional": false
                },
                "arguments": [],
                "typeArguments": null
              },
              "consequent": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 189,
                  "end": 196,
                  "ctxt": 0
                },
                "expression": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 190,
                    "end": 195,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "raw": "\"bar\""
                }
              },
              "alternate": {
                "type": "ConditionalExpression",
                "span": {
                  "start": 199,
                  "end": 220,
                  "ctxt": 0
                },
                "test": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 199,
                    "end": 204,
                    "ctxt": 0
                  },
                  "value": "baz",
                  "raw": "\"baz\""
                },
                "consequent": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 207,
                    "end": 212,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "raw": "\"bar\""
                },
                "alternate": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 215,
                    "end": 220,
                    "ctxt": 0
                  },
                  "value": "baz",
                  "raw": "\"baz\""
                }
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 232,
                "end": 238,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 244,
            "end": 275,
            "ctxt": 0
          },
          "test": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 249,
              "end": 258,
              "ctxt": 0
            },
            "expression": {
              "type": "ParenthesisExpression",
              "span": {
                "start": 250,
                "end": 257,
                "ctxt": 0
              },
              "expression": {
                "type": "StringLiteral",
                "span": {
                  "start": 251,
                  "end": 256,
                  "ctxt": 0
                },
                "value": "bar",
                "raw": "\"bar\""
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 269,
                "end": 275,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 281,
            "end": 342,
            "ctxt": 0
          },
          "test": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 286,
              "end": 301,
              "ctxt": 0
            },
            "expression": {
              "type": "SequenceExpression",
              "span": {
                "start": 287,
                "end": 300,
                "ctxt": 0
              },
              "expressions": [
                {
                  "type": "Identifier",
                  "span": {
                    "start": 287,
                    "end": 288,
                    "ctxt": 0
                  },
                  "value": "x",
                  "optional": false
                },
                {
                  "type": "Identifier",
                  "span": {
                    "start": 290,
                    "end": 291,
                    "ctxt": 0
                  },
                  "value": "y",
                  "optional": false
                },
                {
                  "type": "ParenthesisExpression",
                  "span": {
                    "start": 293,
                    "end": 300,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 294,
                      "end": 299,
                      "ctxt": 0
                    },
                    "value": "baz",
                    "raw": "\"baz\""
                  }
                }
              ]
            }
          },
          "consequent": [
            {
              "type": "ExpressionStatement",
              "span": {
                "start": 312,
                "end": 314,
                "ctxt": 0
              },
              "expression": {
                "type": "Identifier",
                "span": {
                  "start": 312,
                  "end": 313,
                  "ctxt": 0
                },
                "value": "x",
                "optional": false
              }
            },
            {
              "type": "ExpressionStatement",
              "span": {
                "start": 324,
                "end": 326,
                "ctxt": 0
              },
              "expression": {
                "type": "Identifier",
                "span": {
                  "start": 324,
                  "end": 325,
                  "ctxt": 0
                },
                "value": "y",
                "optional": false
              }
            },
            {
              "type": "BreakStatement",
              "span": {
                "start": 336,
                "end": 342,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 348,
            "end": 390,
            "ctxt": 0
          },
          "test": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 353,
              "end": 373,
              "ctxt": 0
            },
            "expression": {
              "type": "ParenthesisExpression",
              "span": {
                "start": 354,
                "end": 372,
                "ctxt": 0
              },
              "expression": {
                "type": "BinaryExpression",
                "span": {
                  "start": 355,
                  "end": 371,
                  "ctxt": 0
                },
                "operator": "||",
                "left": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 355,
                    "end": 360,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                },
                "right": {
                  "type": "ParenthesisExpression",
                  "span": {
                    "start": 364,
                    "end": 371,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 365,
                      "end": 370,
                      "ctxt": 0
                    },
                    "value": "bar",
                    "raw": "\"bar\""
                  }
                }
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 384,
                "end": 390,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 396,
            "end": 438,
            "ctxt": 0
          },
          "test": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 401,
              "end": 421,
              "ctxt": 0
            },
            "expression": {
              "type": "ParenthesisExpression",
              "span": {
                "start": 402,
                "end": 420,
                "ctxt": 0
              },
              "expression": {
                "type": "BinaryExpression",
                "span": {
                  "start": 403,
                  "end": 419,
                  "ctxt": 0
                },
                "operator": "||",
                "left": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 403,
                    "end": 408,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "raw": "\"bar\""
                },
                "right": {
                  "type": "ParenthesisExpression",
                  "span": {
                    "start": 412,
                    "end": 419,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 413,
                      "end": 418,
                      "ctxt": 0
                    },
                    "value": "baz",
                    "raw": "\"baz\""
                  }
                }
              }
            }
          },
          "consequent": [
            {
              "type": "BreakStatement",
              "span": {
                "start": 432,
                "end": 438,
                "ctxt": 0
              },
              "label": null
            }
          ]
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 444,
            "end": 460,
            "ctxt": 0
          },
          "test": {
            "type": "BinaryExpression",
            "span": {
              "start": 449,
              "end": 459,
              "ctxt": 0
            },
            "operator": "||",
            "left": {
              "type": "Identifier",
              "span": {
                "start": 449,
                "end": 450,
                "ctxt": 0
              },
              "value": "z",
              "optional": false
            },
            "right": {
              "type": "StringLiteral",
              "span": {
                "start": 454,
                "end": 459,
                "ctxt": 0
              },
              "value": "baz",
              "raw": "\"baz\""
            }
          },
          "consequent": []
        },
        {
          "type": "SwitchCase",
          "span": {
            "start": 466,
            "end": 510,
            "ctxt": 0
          },
          "test": {
            "type": "BinaryExpression",
            "span": {
              "start": 471,
              "end": 481,
              "ctxt": 0
            },
            "operator": "||",
            "left": {
              "type": "StringLiteral",
              "span": {
                "start": 471,
                "end": 476,
                "ctxt": 0
              },
              "value": "baz",
              "raw": "\"baz\""
            },
            "right": {
              "type": "Identifier",
              "span": {
                "start": 480,
                "end": 481,
                "ctxt": 0
              },
              "value": "z",
              "optional": false
            }
          },
          "consequent": [
            {
              "type": "ExpressionStatement",
              "span": {
                "start": 492,
                "end": 494,
                "ctxt": 0
              },
              "expression": {
                "type": "Identifier",
                "span": {
                  "start": 492,
                  "end": 493,
                  "ctxt": 0
                },
                "value": "z",
                "optional": false
              }
            },
            {
              "type": "BreakStatement",
              "span": {
                "start": 504,
                "end": 510,
                "ctxt": 0
              },
              "label": null
            }
          ]
        }
      ]
    }
  ],
  "interpreter": null
}
