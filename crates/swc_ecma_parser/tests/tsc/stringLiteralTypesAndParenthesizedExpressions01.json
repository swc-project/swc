{
  "type": "Script",
  "span": {
    "start": 26,
    "end": 229,
    "ctxt": 0
  },
  "body": [
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 43,
          "end": 53,
          "ctxt": 0
        },
        "value": "myRandBool",
        "optional": false
      },
      "declare": true,
      "params": [],
      "decorators": [],
      "span": {
        "start": 26,
        "end": 65,
        "ctxt": 0
      },
      "body": null,
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": {
        "type": "TsTypeAnnotation",
        "span": {
          "start": 55,
          "end": 64,
          "ctxt": 0
        },
        "typeAnnotation": {
          "type": "TsKeywordType",
          "span": {
            "start": 57,
            "end": 64,
            "ctxt": 0
          },
          "kind": "boolean"
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 69,
        "end": 92,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 73,
            "end": 91,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 73,
              "end": 74,
              "ctxt": 0
            },
            "value": "a",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 74,
                "end": 81,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsLiteralType",
                "span": {
                  "start": 76,
                  "end": 81,
                  "ctxt": 0
                },
                "literal": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 76,
                    "end": 81,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                }
              }
            }
          },
          "init": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 84,
              "end": 91,
              "ctxt": 0
            },
            "expression": {
              "type": "StringLiteral",
              "span": {
                "start": 85,
                "end": 90,
                "ctxt": 0
              },
              "value": "foo",
              "raw": "\"foo\""
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 94,
        "end": 125,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 98,
            "end": 124,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 98,
              "end": 99,
              "ctxt": 0
            },
            "value": "b",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 99,
                "end": 114,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 101,
                  "end": 114,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 101,
                      "end": 106,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 101,
                        "end": 106,
                        "ctxt": 0
                      },
                      "value": "foo",
                      "raw": "\"foo\""
                    }
                  },
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 109,
                      "end": 114,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 109,
                        "end": 114,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "raw": "\"bar\""
                    }
                  }
                ]
              }
            }
          },
          "init": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 117,
              "end": 124,
              "ctxt": 0
            },
            "expression": {
              "type": "StringLiteral",
              "span": {
                "start": 118,
                "end": 123,
                "ctxt": 0
              },
              "value": "foo",
              "raw": "\"foo\""
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 127,
        "end": 173,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 131,
            "end": 172,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 131,
              "end": 132,
              "ctxt": 0
            },
            "value": "c",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 132,
                "end": 139,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsLiteralType",
                "span": {
                  "start": 134,
                  "end": 139,
                  "ctxt": 0
                },
                "literal": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 134,
                    "end": 139,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                }
              }
            }
          },
          "init": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 142,
              "end": 172,
              "ctxt": 0
            },
            "expression": {
              "type": "ConditionalExpression",
              "span": {
                "start": 143,
                "end": 171,
                "ctxt": 0
              },
              "test": {
                "type": "Identifier",
                "span": {
                  "start": 143,
                  "end": 153,
                  "ctxt": 0
                },
                "value": "myRandBool",
                "optional": false
              },
              "consequent": {
                "type": "StringLiteral",
                "span": {
                  "start": 156,
                  "end": 161,
                  "ctxt": 0
                },
                "value": "foo",
                "raw": "\"foo\""
              },
              "alternate": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 164,
                  "end": 171,
                  "ctxt": 0
                },
                "expression": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 165,
                    "end": 170,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                }
              }
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 175,
        "end": 229,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 179,
            "end": 228,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 179,
              "end": 180,
              "ctxt": 0
            },
            "value": "d",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 180,
                "end": 195,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsUnionType",
                "span": {
                  "start": 182,
                  "end": 195,
                  "ctxt": 0
                },
                "types": [
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 182,
                      "end": 187,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 182,
                        "end": 187,
                        "ctxt": 0
                      },
                      "value": "foo",
                      "raw": "\"foo\""
                    }
                  },
                  {
                    "type": "TsLiteralType",
                    "span": {
                      "start": 190,
                      "end": 195,
                      "ctxt": 0
                    },
                    "literal": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 190,
                        "end": 195,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "raw": "\"bar\""
                    }
                  }
                ]
              }
            }
          },
          "init": {
            "type": "ParenthesisExpression",
            "span": {
              "start": 198,
              "end": 228,
              "ctxt": 0
            },
            "expression": {
              "type": "ConditionalExpression",
              "span": {
                "start": 199,
                "end": 227,
                "ctxt": 0
              },
              "test": {
                "type": "Identifier",
                "span": {
                  "start": 199,
                  "end": 209,
                  "ctxt": 0
                },
                "value": "myRandBool",
                "optional": false
              },
              "consequent": {
                "type": "StringLiteral",
                "span": {
                  "start": 212,
                  "end": 217,
                  "ctxt": 0
                },
                "value": "foo",
                "raw": "\"foo\""
              },
              "alternate": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 220,
                  "end": 227,
                  "ctxt": 0
                },
                "expression": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 221,
                    "end": 226,
                    "ctxt": 0
                  },
                  "value": "bar",
                  "raw": "\"bar\""
                }
              }
            }
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
