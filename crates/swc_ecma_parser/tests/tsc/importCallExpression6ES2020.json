{
  "type": "Module",
  "span": {
    "start": 58,
    "end": 452,
    "ctxt": 0
  },
  "body": [
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 58,
        "end": 107,
        "ctxt": 0
      },
      "declaration": {
        "type": "ClassDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 71,
            "end": 72,
            "ctxt": 0
          },
          "value": "B",
          "optional": false
        },
        "declare": false,
        "span": {
          "start": 65,
          "end": 107,
          "ctxt": 0
        },
        "decorators": [],
        "body": [
          {
            "type": "ClassMethod",
            "span": {
              "start": 79,
              "end": 105,
              "ctxt": 0
            },
            "key": {
              "type": "Identifier",
              "span": {
                "start": 79,
                "end": 84,
                "ctxt": 0
              },
              "value": "print",
              "optional": false
            },
            "function": {
              "params": [],
              "decorators": [],
              "span": {
                "start": 79,
                "end": 105,
                "ctxt": 0
              },
              "body": {
                "type": "BlockStatement",
                "span": {
                  "start": 87,
                  "end": 105,
                  "ctxt": 0
                },
                "stmts": [
                  {
                    "type": "ReturnStatement",
                    "span": {
                      "start": 89,
                      "end": 104,
                      "ctxt": 0
                    },
                    "argument": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 96,
                        "end": 104,
                        "ctxt": 0
                      },
                      "value": "I am B",
                      "raw": "\"I am B\""
                    }
                  }
                ]
              },
              "generator": false,
              "async": false,
              "typeParameters": null,
              "returnType": null
            },
            "kind": "method",
            "isStatic": false,
            "accessibility": null,
            "isAbstract": false,
            "isOptional": false,
            "isOverride": false
          }
        ],
        "superClass": null,
        "isAbstract": false,
        "typeParams": null,
        "superTypeParams": null,
        "implements": []
      }
    },
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 109,
        "end": 147,
        "ctxt": 0
      },
      "declaration": {
        "type": "FunctionDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 125,
            "end": 128,
            "ctxt": 0
          },
          "value": "foo",
          "optional": false
        },
        "declare": false,
        "params": [],
        "decorators": [],
        "span": {
          "start": 116,
          "end": 147,
          "ctxt": 0
        },
        "body": {
          "type": "BlockStatement",
          "span": {
            "start": 131,
            "end": 147,
            "ctxt": 0
          },
          "stmts": [
            {
              "type": "ReturnStatement",
              "span": {
                "start": 133,
                "end": 145,
                "ctxt": 0
              },
              "argument": {
                "type": "StringLiteral",
                "span": {
                  "start": 140,
                  "end": 145,
                  "ctxt": 0
                },
                "value": "foo",
                "raw": "\"foo\""
              }
            }
          ]
        },
        "generator": false,
        "async": false,
        "typeParameters": null,
        "returnType": null
      }
    },
    {
      "type": "ExportDeclaration",
      "span": {
        "start": 168,
        "end": 213,
        "ctxt": 0
      },
      "declaration": {
        "type": "FunctionDeclaration",
        "identifier": {
          "type": "Identifier",
          "span": {
            "start": 184,
            "end": 190,
            "ctxt": 0
          },
          "value": "backup",
          "optional": false
        },
        "declare": false,
        "params": [],
        "decorators": [],
        "span": {
          "start": 175,
          "end": 213,
          "ctxt": 0
        },
        "body": {
          "type": "BlockStatement",
          "span": {
            "start": 193,
            "end": 213,
            "ctxt": 0
          },
          "stmts": [
            {
              "type": "ReturnStatement",
              "span": {
                "start": 195,
                "end": 211,
                "ctxt": 0
              },
              "argument": {
                "type": "StringLiteral",
                "span": {
                  "start": 202,
                  "end": 210,
                  "ctxt": 0
                },
                "value": "backup",
                "raw": "\"backup\""
              }
            }
          ]
        },
        "generator": false,
        "async": false,
        "typeParameters": null,
        "returnType": null
      }
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 251,
          "end": 254,
          "ctxt": 0
        },
        "value": "bar",
        "optional": false
      },
      "declare": true,
      "params": [],
      "decorators": [],
      "span": {
        "start": 234,
        "end": 266,
        "ctxt": 0
      },
      "body": null,
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": {
        "type": "TsTypeAnnotation",
        "span": {
          "start": 256,
          "end": 265,
          "ctxt": 0
        },
        "typeAnnotation": {
          "type": "TsKeywordType",
          "span": {
            "start": 258,
            "end": 265,
            "ctxt": 0
          },
          "kind": "boolean"
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 267,
        "end": 309,
        "ctxt": 0
      },
      "kind": "const",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 273,
            "end": 308,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 273,
              "end": 280,
              "ctxt": 0
            },
            "value": "specify",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ConditionalExpression",
            "span": {
              "start": 283,
              "end": 308,
              "ctxt": 0
            },
            "test": {
              "type": "CallExpression",
              "span": {
                "start": 283,
                "end": 288,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 283,
                  "end": 286,
                  "ctxt": 0
                },
                "value": "bar",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            },
            "consequent": {
              "type": "StringLiteral",
              "span": {
                "start": 291,
                "end": 296,
                "ctxt": 0
              },
              "value": "./0",
              "raw": "\"./0\""
            },
            "alternate": {
              "type": "Identifier",
              "span": {
                "start": 299,
                "end": 308,
                "ctxt": 0
              },
              "value": "undefined",
              "optional": false
            }
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 310,
        "end": 341,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 314,
            "end": 340,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 314,
              "end": 322,
              "ctxt": 0
            },
            "value": "myModule",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 325,
              "end": 340,
              "ctxt": 0
            },
            "callee": {
              "type": "Import",
              "span": {
                "start": 325,
                "end": 331,
                "ctxt": 0
              }
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "Identifier",
                  "span": {
                    "start": 332,
                    "end": 339,
                    "ctxt": 0
                  },
                  "value": "specify",
                  "optional": false
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 342,
        "end": 376,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 346,
            "end": 375,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 346,
              "end": 355,
              "ctxt": 0
            },
            "value": "myModule1",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 358,
              "end": 375,
              "ctxt": 0
            },
            "callee": {
              "type": "Import",
              "span": {
                "start": 358,
                "end": 364,
                "ctxt": 0
              }
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "Identifier",
                  "span": {
                    "start": 365,
                    "end": 374,
                    "ctxt": 0
                  },
                  "value": "undefined",
                  "optional": false
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 377,
        "end": 422,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 381,
            "end": 421,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 381,
              "end": 390,
              "ctxt": 0
            },
            "value": "myModule2",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 393,
              "end": 421,
              "ctxt": 0
            },
            "callee": {
              "type": "Import",
              "span": {
                "start": 393,
                "end": 399,
                "ctxt": 0
              }
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "ConditionalExpression",
                  "span": {
                    "start": 400,
                    "end": 420,
                    "ctxt": 0
                  },
                  "test": {
                    "type": "CallExpression",
                    "span": {
                      "start": 400,
                      "end": 405,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 400,
                        "end": 403,
                        "ctxt": 0
                      },
                      "value": "bar",
                      "optional": false
                    },
                    "arguments": [],
                    "typeArguments": null
                  },
                  "consequent": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 408,
                      "end": 413,
                      "ctxt": 0
                    },
                    "value": "./1",
                    "raw": "\"./1\""
                  },
                  "alternate": {
                    "type": "NullLiteral",
                    "span": {
                      "start": 416,
                      "end": 420,
                      "ctxt": 0
                    }
                  }
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 423,
        "end": 452,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 427,
            "end": 451,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 427,
              "end": 436,
              "ctxt": 0
            },
            "value": "myModule3",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 439,
              "end": 451,
              "ctxt": 0
            },
            "callee": {
              "type": "Import",
              "span": {
                "start": 439,
                "end": 445,
                "ctxt": 0
              }
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "NullLiteral",
                  "span": {
                    "start": 446,
                    "end": 450,
                    "ctxt": 0
                  }
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
