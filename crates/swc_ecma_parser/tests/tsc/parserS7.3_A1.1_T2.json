{
  "type": "Script",
  "span": {
    "start": 309,
    "end": 397,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 309,
        "end": 319,
        "ctxt": 0
      },
      "kind": "var",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 313,
            "end": 318,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 313,
              "end": 314,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "NumericLiteral",
            "span": {
              "start": 317,
              "end": 318,
              "ctxt": 0
            },
            "value": 1.0,
            "raw": "1"
          },
          "definite": false
        }
      ]
    },
    {
      "type": "IfStatement",
      "span": {
        "start": 320,
        "end": 397,
        "ctxt": 0
      },
      "test": {
        "type": "BinaryExpression",
        "span": {
          "start": 324,
          "end": 331,
          "ctxt": 0
        },
        "operator": "!==",
        "left": {
          "type": "Identifier",
          "span": {
            "start": 324,
            "end": 325,
            "ctxt": 0
          },
          "value": "x",
          "optional": false
        },
        "right": {
          "type": "NumericLiteral",
          "span": {
            "start": 330,
            "end": 331,
            "ctxt": 0
          },
          "value": 1.0,
          "raw": "1"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "span": {
          "start": 333,
          "end": 397,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 337,
              "end": 395,
              "ctxt": 0
            },
            "expression": {
              "type": "CallExpression",
              "span": {
                "start": 337,
                "end": 394,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 337,
                  "end": 343,
                  "ctxt": 0
                },
                "value": "$ERROR",
                "optional": false
              },
              "arguments": [
                {
                  "spread": null,
                  "expression": {
                    "type": "BinaryExpression",
                    "span": {
                      "start": 344,
                      "end": 393,
                      "ctxt": 0
                    },
                    "operator": "+",
                    "left": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 344,
                        "end": 387,
                        "ctxt": 0
                      },
                      "value": "#1: var\\nx\\n=\\n1\\n; x === 1. Actual: ",
                      "raw": "'#1: var\\\\nx\\\\n=\\\\n1\\\\n; x === 1. Actual: '"
                    },
                    "right": {
                      "type": "ParenthesisExpression",
                      "span": {
                        "start": 390,
                        "end": 393,
                        "ctxt": 0
                      },
                      "expression": {
                        "type": "Identifier",
                        "span": {
                          "start": 391,
                          "end": 392,
                          "ctxt": 0
                        },
                        "value": "x",
                        "optional": false
                      }
                    }
                  }
                }
              ],
              "typeArguments": null
            }
          }
        ]
      },
      "alternate": null
    }
  ],
  "interpreter": null
}
