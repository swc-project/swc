{
  "type": "Script",
  "span": {
    "start": 229,
    "end": 1125,
    "ctxt": 0
  },
  "body": [
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 229,
        "end": 291,
        "ctxt": 0
      },
      "kind": "const",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 235,
            "end": 291,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 235,
              "end": 241,
              "ctxt": 0
            },
            "value": "assert",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "span": {
              "start": 244,
              "end": 291,
              "ctxt": 0
            },
            "params": [
              {
                "type": "Identifier",
                "span": {
                  "start": 244,
                  "end": 249,
                  "ctxt": 0
                },
                "value": "check",
                "optional": false,
                "typeAnnotation": null
              }
            ],
            "body": {
              "type": "BlockStatement",
              "span": {
                "start": 253,
                "end": 291,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "IfStatement",
                  "span": {
                    "start": 259,
                    "end": 289,
                    "ctxt": 0
                  },
                  "test": {
                    "type": "UnaryExpression",
                    "span": {
                      "start": 263,
                      "end": 269,
                      "ctxt": 0
                    },
                    "operator": "!",
                    "argument": {
                      "type": "Identifier",
                      "span": {
                        "start": 264,
                        "end": 269,
                        "ctxt": 0
                      },
                      "value": "check",
                      "optional": false
                    }
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "span": {
                      "start": 271,
                      "end": 289,
                      "ctxt": 0
                    },
                    "argument": {
                      "type": "NewExpression",
                      "span": {
                        "start": 277,
                        "end": 288,
                        "ctxt": 0
                      },
                      "callee": {
                        "type": "Identifier",
                        "span": {
                          "start": 281,
                          "end": 286,
                          "ctxt": 0
                        },
                        "value": "Error",
                        "optional": false
                      },
                      "arguments": [],
                      "typeArguments": null
                    }
                  },
                  "alternate": null
                }
              ]
            },
            "async": false,
            "generator": false,
            "typeParameters": null,
            "returnType": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 354,
          "end": 368,
          "ctxt": 0
        },
        "value": "assertIsString",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 369,
            "end": 370,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 369,
              "end": 370,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": null
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 345,
        "end": 428,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 372,
          "end": 428,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "IfStatement",
            "span": {
              "start": 378,
              "end": 426,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 382,
                "end": 406,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "ParenthesisExpression",
                "span": {
                  "start": 383,
                  "end": 406,
                  "ctxt": 0
                },
                "expression": {
                  "type": "BinaryExpression",
                  "span": {
                    "start": 384,
                    "end": 405,
                    "ctxt": 0
                  },
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "span": {
                      "start": 384,
                      "end": 392,
                      "ctxt": 0
                    },
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "span": {
                        "start": 391,
                        "end": 392,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false
                    }
                  },
                  "right": {
                    "type": "StringLiteral",
                    "span": {
                      "start": 397,
                      "end": 405,
                      "ctxt": 0
                    },
                    "value": "string",
                    "raw": "\"string\""
                  }
                }
              }
            },
            "consequent": {
              "type": "ThrowStatement",
              "span": {
                "start": 408,
                "end": 426,
                "ctxt": 0
              },
              "argument": {
                "type": "NewExpression",
                "span": {
                  "start": 414,
                  "end": 425,
                  "ctxt": 0
                },
                "callee": {
                  "type": "Identifier",
                  "span": {
                    "start": 418,
                    "end": 423,
                    "ctxt": 0
                  },
                  "value": "Error",
                  "optional": false
                },
                "arguments": [],
                "typeArguments": null
              }
            },
            "alternate": null
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 500,
          "end": 507,
          "ctxt": 0
        },
        "value": "assert2",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 508,
            "end": 513,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 508,
              "end": 513,
              "ctxt": 0
            },
            "value": "check",
            "optional": false,
            "typeAnnotation": null
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 491,
        "end": 553,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 515,
          "end": 553,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "IfStatement",
            "span": {
              "start": 521,
              "end": 551,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 525,
                "end": 531,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "span": {
                  "start": 526,
                  "end": 531,
                  "ctxt": 0
                },
                "value": "check",
                "optional": false
              }
            },
            "consequent": {
              "type": "ThrowStatement",
              "span": {
                "start": 533,
                "end": 551,
                "ctxt": 0
              },
              "argument": {
                "type": "NewExpression",
                "span": {
                  "start": 539,
                  "end": 550,
                  "ctxt": 0
                },
                "callee": {
                  "type": "Identifier",
                  "span": {
                    "start": 543,
                    "end": 548,
                    "ctxt": 0
                  },
                  "value": "Error",
                  "optional": false
                },
                "arguments": [],
                "typeArguments": null
              }
            },
            "alternate": null
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 592,
          "end": 596,
          "ctxt": 0
        },
        "value": "fail",
        "optional": false
      },
      "declare": false,
      "params": [],
      "decorators": [],
      "span": {
        "start": 583,
        "end": 625,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 599,
          "end": 625,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ThrowStatement",
            "span": {
              "start": 605,
              "end": 623,
              "ctxt": 0
            },
            "argument": {
              "type": "NewExpression",
              "span": {
                "start": 611,
                "end": 622,
                "ctxt": 0
              },
              "callee": {
                "type": "Identifier",
                "span": {
                  "start": 615,
                  "end": 620,
                  "ctxt": 0
                },
                "value": "Error",
                "optional": false
              },
              "arguments": [],
              "typeArguments": null
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 661,
          "end": 663,
          "ctxt": 0
        },
        "value": "f1",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 664,
            "end": 665,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 664,
              "end": 665,
              "ctxt": 0
            },
            "value": "x",
            "optional": false,
            "typeAnnotation": null
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 652,
        "end": 969,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 667,
          "end": 969,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "IfStatement",
            "span": {
              "start": 673,
              "end": 749,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 677,
                "end": 683,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "UnaryExpression",
                "span": {
                  "start": 678,
                  "end": 683,
                  "ctxt": 0
                },
                "operator": "!",
                "argument": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 679,
                    "end": 683,
                    "ctxt": 0
                  },
                  "value": true
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "span": {
                "start": 685,
                "end": 749,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 695,
                    "end": 725,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "CallExpression",
                    "span": {
                      "start": 695,
                      "end": 724,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 695,
                        "end": 701,
                        "ctxt": 0
                      },
                      "value": "assert",
                      "optional": false
                    },
                    "arguments": [
                      {
                        "spread": null,
                        "expression": {
                          "type": "BinaryExpression",
                          "span": {
                            "start": 702,
                            "end": 723,
                            "ctxt": 0
                          },
                          "operator": "===",
                          "left": {
                            "type": "UnaryExpression",
                            "span": {
                              "start": 702,
                              "end": 710,
                              "ctxt": 0
                            },
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "span": {
                                "start": 709,
                                "end": 710,
                                "ctxt": 0
                              },
                              "value": "x",
                              "optional": false
                            }
                          },
                          "right": {
                            "type": "StringLiteral",
                            "span": {
                              "start": 715,
                              "end": 723,
                              "ctxt": 0
                            },
                            "value": "string",
                            "raw": "\"string\""
                          }
                        }
                      }
                    ],
                    "typeArguments": null
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 734,
                    "end": 743,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "MemberExpression",
                    "span": {
                      "start": 734,
                      "end": 742,
                      "ctxt": 0
                    },
                    "object": {
                      "type": "Identifier",
                      "span": {
                        "start": 734,
                        "end": 735,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "span": {
                        "start": 736,
                        "end": 742,
                        "ctxt": 0
                      },
                      "value": "length",
                      "optional": false
                    }
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "span": {
              "start": 754,
              "end": 831,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 758,
                "end": 764,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "UnaryExpression",
                "span": {
                  "start": 759,
                  "end": 764,
                  "ctxt": 0
                },
                "operator": "!",
                "argument": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 760,
                    "end": 764,
                    "ctxt": 0
                  },
                  "value": true
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "span": {
                "start": 766,
                "end": 831,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 776,
                    "end": 807,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "CallExpression",
                    "span": {
                      "start": 776,
                      "end": 806,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 776,
                        "end": 783,
                        "ctxt": 0
                      },
                      "value": "assert2",
                      "optional": false
                    },
                    "arguments": [
                      {
                        "spread": null,
                        "expression": {
                          "type": "BinaryExpression",
                          "span": {
                            "start": 784,
                            "end": 805,
                            "ctxt": 0
                          },
                          "operator": "===",
                          "left": {
                            "type": "UnaryExpression",
                            "span": {
                              "start": 784,
                              "end": 792,
                              "ctxt": 0
                            },
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "span": {
                                "start": 791,
                                "end": 792,
                                "ctxt": 0
                              },
                              "value": "x",
                              "optional": false
                            }
                          },
                          "right": {
                            "type": "StringLiteral",
                            "span": {
                              "start": 797,
                              "end": 805,
                              "ctxt": 0
                            },
                            "value": "string",
                            "raw": "\"string\""
                          }
                        }
                      }
                    ],
                    "typeArguments": null
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 816,
                    "end": 825,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "MemberExpression",
                    "span": {
                      "start": 816,
                      "end": 824,
                      "ctxt": 0
                    },
                    "object": {
                      "type": "Identifier",
                      "span": {
                        "start": 816,
                        "end": 817,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "span": {
                        "start": 818,
                        "end": 824,
                        "ctxt": 0
                      },
                      "value": "length",
                      "optional": false
                    }
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "span": {
              "start": 836,
              "end": 900,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 840,
                "end": 846,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "UnaryExpression",
                "span": {
                  "start": 841,
                  "end": 846,
                  "ctxt": 0
                },
                "operator": "!",
                "argument": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 842,
                    "end": 846,
                    "ctxt": 0
                  },
                  "value": true
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "span": {
                "start": 848,
                "end": 900,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 858,
                    "end": 876,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "CallExpression",
                    "span": {
                      "start": 858,
                      "end": 875,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 858,
                        "end": 872,
                        "ctxt": 0
                      },
                      "value": "assertIsString",
                      "optional": false
                    },
                    "arguments": [
                      {
                        "spread": null,
                        "expression": {
                          "type": "Identifier",
                          "span": {
                            "start": 873,
                            "end": 874,
                            "ctxt": 0
                          },
                          "value": "x",
                          "optional": false
                        }
                      }
                    ],
                    "typeArguments": null
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 885,
                    "end": 894,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "MemberExpression",
                    "span": {
                      "start": 885,
                      "end": 893,
                      "ctxt": 0
                    },
                    "object": {
                      "type": "Identifier",
                      "span": {
                        "start": 885,
                        "end": 886,
                        "ctxt": 0
                      },
                      "value": "x",
                      "optional": false
                    },
                    "property": {
                      "type": "Identifier",
                      "span": {
                        "start": 887,
                        "end": 893,
                        "ctxt": 0
                      },
                      "value": "length",
                      "optional": false
                    }
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "span": {
              "start": 905,
              "end": 967,
              "ctxt": 0
            },
            "test": {
              "type": "UnaryExpression",
              "span": {
                "start": 909,
                "end": 915,
                "ctxt": 0
              },
              "operator": "!",
              "argument": {
                "type": "UnaryExpression",
                "span": {
                  "start": 910,
                  "end": 915,
                  "ctxt": 0
                },
                "operator": "!",
                "argument": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 911,
                    "end": 915,
                    "ctxt": 0
                  },
                  "value": true
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "span": {
                "start": 917,
                "end": 967,
                "ctxt": 0
              },
              "stmts": [
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 927,
                    "end": 934,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "CallExpression",
                    "span": {
                      "start": 927,
                      "end": 933,
                      "ctxt": 0
                    },
                    "callee": {
                      "type": "Identifier",
                      "span": {
                        "start": 927,
                        "end": 931,
                        "ctxt": 0
                      },
                      "value": "fail",
                      "optional": false
                    },
                    "arguments": [],
                    "typeArguments": null
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "span": {
                    "start": 943,
                    "end": 945,
                    "ctxt": 0
                  },
                  "expression": {
                    "type": "Identifier",
                    "span": {
                      "start": 943,
                      "end": 944,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    },
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 1011,
          "end": 1013,
          "ctxt": 0
        },
        "value": "f2",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 1014,
            "end": 1015,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 1014,
              "end": 1015,
              "ctxt": 0
            },
            "value": "b",
            "optional": false,
            "typeAnnotation": null
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 1002,
        "end": 1125,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 1017,
          "end": 1125,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "SwitchStatement",
            "span": {
              "start": 1023,
              "end": 1100,
              "ctxt": 0
            },
            "discriminant": {
              "type": "Identifier",
              "span": {
                "start": 1031,
                "end": 1032,
                "ctxt": 0
              },
              "value": "b",
              "optional": false
            },
            "cases": [
              {
                "type": "SwitchCase",
                "span": {
                  "start": 1044,
                  "end": 1064,
                  "ctxt": 0
                },
                "test": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 1049,
                    "end": 1053,
                    "ctxt": 0
                  },
                  "value": true
                },
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "span": {
                      "start": 1055,
                      "end": 1064,
                      "ctxt": 0
                    },
                    "argument": {
                      "type": "NumericLiteral",
                      "span": {
                        "start": 1062,
                        "end": 1063,
                        "ctxt": 0
                      },
                      "value": 1.0,
                      "raw": "1"
                    }
                  }
                ]
              },
              {
                "type": "SwitchCase",
                "span": {
                  "start": 1073,
                  "end": 1094,
                  "ctxt": 0
                },
                "test": {
                  "type": "BooleanLiteral",
                  "span": {
                    "start": 1078,
                    "end": 1083,
                    "ctxt": 0
                  },
                  "value": false
                },
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "span": {
                      "start": 1085,
                      "end": 1094,
                      "ctxt": 0
                    },
                    "argument": {
                      "type": "NumericLiteral",
                      "span": {
                        "start": 1092,
                        "end": 1093,
                        "ctxt": 0
                      },
                      "value": 0.0,
                      "raw": "0"
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "ExpressionStatement",
            "span": {
              "start": 1105,
              "end": 1107,
              "ctxt": 0
            },
            "expression": {
              "type": "Identifier",
              "span": {
                "start": 1105,
                "end": 1106,
                "ctxt": 0
              },
              "value": "b",
              "optional": false
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": null,
      "returnType": null
    }
  ],
  "interpreter": null
}
