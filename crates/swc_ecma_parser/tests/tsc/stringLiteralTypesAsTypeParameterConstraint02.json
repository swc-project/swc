{
  "type": "Script",
  "span": {
    "start": 24,
    "end": 172,
    "ctxt": 0
  },
  "body": [
    {
      "type": "FunctionDeclaration",
      "identifier": {
        "type": "Identifier",
        "span": {
          "start": 33,
          "end": 36,
          "ctxt": 0
        },
        "value": "foo",
        "optional": false
      },
      "declare": false,
      "params": [
        {
          "type": "Parameter",
          "span": {
            "start": 54,
            "end": 68,
            "ctxt": 0
          },
          "decorators": [],
          "pat": {
            "type": "Identifier",
            "span": {
              "start": 54,
              "end": 68,
              "ctxt": 0
            },
            "value": "f",
            "optional": false,
            "typeAnnotation": {
              "type": "TsTypeAnnotation",
              "span": {
                "start": 55,
                "end": 68,
                "ctxt": 0
              },
              "typeAnnotation": {
                "type": "TsFunctionType",
                "span": {
                  "start": 57,
                  "end": 68,
                  "ctxt": 0
                },
                "params": [
                  {
                    "type": "Identifier",
                    "span": {
                      "start": 58,
                      "end": 62,
                      "ctxt": 0
                    },
                    "value": "x",
                    "optional": false,
                    "typeAnnotation": {
                      "type": "TsTypeAnnotation",
                      "span": {
                        "start": 59,
                        "end": 62,
                        "ctxt": 0
                      },
                      "typeAnnotation": {
                        "type": "TsTypeReference",
                        "span": {
                          "start": 61,
                          "end": 62,
                          "ctxt": 0
                        },
                        "typeName": {
                          "type": "Identifier",
                          "span": {
                            "start": 61,
                            "end": 62,
                            "ctxt": 0
                          },
                          "value": "T",
                          "optional": false
                        },
                        "typeParams": null
                      }
                    }
                  }
                ],
                "typeParams": null,
                "typeAnnotation": {
                  "type": "TsTypeAnnotation",
                  "span": {
                    "start": 64,
                    "end": 68,
                    "ctxt": 0
                  },
                  "typeAnnotation": {
                    "type": "TsTypeReference",
                    "span": {
                      "start": 67,
                      "end": 68,
                      "ctxt": 0
                    },
                    "typeName": {
                      "type": "Identifier",
                      "span": {
                        "start": 67,
                        "end": 68,
                        "ctxt": 0
                      },
                      "value": "T",
                      "optional": false
                    },
                    "typeParams": null
                  }
                }
              }
            }
          }
        }
      ],
      "decorators": [],
      "span": {
        "start": 24,
        "end": 87,
        "ctxt": 0
      },
      "body": {
        "type": "BlockStatement",
        "span": {
          "start": 70,
          "end": 87,
          "ctxt": 0
        },
        "stmts": [
          {
            "type": "ReturnStatement",
            "span": {
              "start": 76,
              "end": 85,
              "ctxt": 0
            },
            "argument": {
              "type": "Identifier",
              "span": {
                "start": 83,
                "end": 84,
                "ctxt": 0
              },
              "value": "f",
              "optional": false
            }
          }
        ]
      },
      "generator": false,
      "async": false,
      "typeParameters": {
        "type": "TsTypeParameterDeclaration",
        "span": {
          "start": 36,
          "end": 53,
          "ctxt": 0
        },
        "parameters": [
          {
            "type": "TsTypeParameter",
            "span": {
              "start": 37,
              "end": 52,
              "ctxt": 0
            },
            "name": {
              "type": "Identifier",
              "span": {
                "start": 37,
                "end": 38,
                "ctxt": 0
              },
              "value": "T",
              "optional": false
            },
            "in": false,
            "out": false,
            "constraint": {
              "type": "TsLiteralType",
              "span": {
                "start": 47,
                "end": 52,
                "ctxt": 0
              },
              "literal": {
                "type": "StringLiteral",
                "span": {
                  "start": 47,
                  "end": 52,
                  "ctxt": 0
                },
                "value": "foo",
                "raw": "\"foo\""
              }
            },
            "default": null
          }
        ]
      },
      "returnType": null
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 89,
        "end": 148,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 93,
            "end": 147,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 93,
              "end": 94,
              "ctxt": 0
            },
            "value": "f",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 97,
              "end": 147,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 97,
                "end": 100,
                "ctxt": 0
              },
              "value": "foo",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "ArrowFunctionExpression",
                  "span": {
                    "start": 101,
                    "end": 146,
                    "ctxt": 0
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "span": {
                        "start": 102,
                        "end": 118,
                        "ctxt": 0
                      },
                      "value": "y",
                      "optional": false,
                      "typeAnnotation": {
                        "type": "TsTypeAnnotation",
                        "span": {
                          "start": 103,
                          "end": 118,
                          "ctxt": 0
                        },
                        "typeAnnotation": {
                          "type": "TsUnionType",
                          "span": {
                            "start": 105,
                            "end": 118,
                            "ctxt": 0
                          },
                          "types": [
                            {
                              "type": "TsLiteralType",
                              "span": {
                                "start": 105,
                                "end": 110,
                                "ctxt": 0
                              },
                              "literal": {
                                "type": "StringLiteral",
                                "span": {
                                  "start": 105,
                                  "end": 110,
                                  "ctxt": 0
                                },
                                "value": "foo",
                                "raw": "\"foo\""
                              }
                            },
                            {
                              "type": "TsLiteralType",
                              "span": {
                                "start": 113,
                                "end": 118,
                                "ctxt": 0
                              },
                              "literal": {
                                "type": "StringLiteral",
                                "span": {
                                  "start": 113,
                                  "end": 118,
                                  "ctxt": 0
                                },
                                "value": "bar",
                                "raw": "\"bar\""
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "body": {
                    "type": "ConditionalExpression",
                    "span": {
                      "start": 123,
                      "end": 146,
                      "ctxt": 0
                    },
                    "test": {
                      "type": "BinaryExpression",
                      "span": {
                        "start": 123,
                        "end": 134,
                        "ctxt": 0
                      },
                      "operator": "===",
                      "left": {
                        "type": "Identifier",
                        "span": {
                          "start": 123,
                          "end": 124,
                          "ctxt": 0
                        },
                        "value": "y",
                        "optional": false
                      },
                      "right": {
                        "type": "StringLiteral",
                        "span": {
                          "start": 129,
                          "end": 134,
                          "ctxt": 0
                        },
                        "value": "foo",
                        "raw": "\"foo\""
                      }
                    },
                    "consequent": {
                      "type": "Identifier",
                      "span": {
                        "start": 137,
                        "end": 138,
                        "ctxt": 0
                      },
                      "value": "y",
                      "optional": false
                    },
                    "alternate": {
                      "type": "StringLiteral",
                      "span": {
                        "start": 141,
                        "end": 146,
                        "ctxt": 0
                      },
                      "value": "foo",
                      "raw": "\"foo\""
                    }
                  },
                  "async": false,
                  "generator": false,
                  "typeParameters": null,
                  "returnType": null
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "span": {
        "start": 149,
        "end": 172,
        "ctxt": 0
      },
      "kind": "let",
      "declare": false,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "span": {
            "start": 153,
            "end": 171,
            "ctxt": 0
          },
          "id": {
            "type": "Identifier",
            "span": {
              "start": 153,
              "end": 160,
              "ctxt": 0
            },
            "value": "fResult",
            "optional": false,
            "typeAnnotation": null
          },
          "init": {
            "type": "CallExpression",
            "span": {
              "start": 163,
              "end": 171,
              "ctxt": 0
            },
            "callee": {
              "type": "Identifier",
              "span": {
                "start": 163,
                "end": 164,
                "ctxt": 0
              },
              "value": "f",
              "optional": false
            },
            "arguments": [
              {
                "spread": null,
                "expression": {
                  "type": "StringLiteral",
                  "span": {
                    "start": 165,
                    "end": 170,
                    "ctxt": 0
                  },
                  "value": "foo",
                  "raw": "\"foo\""
                }
              }
            ],
            "typeArguments": null
          },
          "definite": false
        }
      ]
    }
  ],
  "interpreter": null
}
