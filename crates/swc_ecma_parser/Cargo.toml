[package]
authors       = ["강동윤 <kdy1997.dev@gmail.com>"]
description   = "Feature-complete es2019 parser."
documentation = "https://rustdoc.swc.rs/swc_ecma_parser/"
edition       = "2021"
include       = ["Cargo.toml", "src/**/*.rs", "examples/**/*.rs"]
license       = "Apache-2.0"
name          = "swc_ecma_parser"
repository    = "https://github.com/swc-project/swc.git"
version       = "0.146.9"

  [package.metadata.docs.rs]
  all-features = true
  rustdoc-args = ["--cfg", "docsrs"]

[lib]
bench = false

[features]
# Used for debugging
debug         = ["tracing-spans"]
default       = ["typescript", "stacker"]
tracing-spans = []
typescript    = []
verify        = ["swc_ecma_visit"]

[dependencies]
either      = { workspace = true }
num-bigint  = { workspace = true }
num-traits  = { workspace = true }
serde       = { workspace = true, features = ["derive"] }
smallvec    = { workspace = true }
smartstring = { workspace = true }
tracing     = { workspace = true }
typed-arena = { workspace = true }

new_debug_unreachable = { workspace = true }
phf                   = { workspace = true, features = ["macros"] }
swc_atoms             = { version = "0.6.5", path = "../swc_atoms" }
swc_common            = { version = "0.34.0", path = "../swc_common" }
swc_ecma_ast          = { version = "0.115.0", path = "../swc_ecma_ast" }
swc_ecma_visit        = { version = "0.101.0", path = "../swc_ecma_visit", optional = true }

[target.'cfg(not(any(target_arch = "wasm32", target_arch = "arm")))'.dependencies]
stacker = { version = "0.1.15", optional = true }

[dev-dependencies]
criterion         = { workspace = true }
pretty_assertions = { workspace = true }
serde_json        = { workspace = true }
walkdir           = { workspace = true }

swc_ecma_ast = { version = "0.115.0", path = "../swc_ecma_ast", features = [
  "serde-impl",
] }
swc_ecma_visit = { version = "0.101.0", path = "../swc_ecma_visit" }
swc_malloc = { version = "0.5.10", path = "../swc_malloc" }
testing = { version = "0.36.0", path = "../testing" }

[[example]]
name = "lexer"

[[example]]
name = "typescript"

[[bench]]
harness = false
name    = "compare"

[[bench]]
harness = false
name    = "lexer"

[[bench]]
harness = false
name    = "parser"
