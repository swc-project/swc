.selector:not(*:root) {}
@media screen and (min-width: 0\0) {}
.selector:not(*:root) {}
@supports (-webkit-appearance: none) {}
.selector {
  (;property: value;);}
.selector {
  [;property: value;];}
@media \\0 screen {}
@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
  .selector {}
}
body:empty .selector {}
body:last-child .selector, 
x:-moz-any-link {}
@media �all {}
body:last-child .selector, 
x:-moz-any-link, 
x:default {}
body:not(:-moz-handler-blocked) .selector {}
@media screen and (-moz-images-in-menus: 0) {}
@media screen and (min--moz-device-pixel-ratio: 0) {}
_::-moz-progress-bar, 
body:last-child .selector {}
@media all and (min--moz-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {}
@media all and (-moz-images-in-menus: 0) and (min-resolution: 0.001dpcm) {}
@media all and (min--moz-device-pixel-ratio: 0) {
  @media (min-width: 0px) {}
}
@media all and (-moz-images-in-menus: 0) {
  @media (min-width: 0px) {}
}
@supports (-moz-appearance: meterbar) {}
_::-moz-range-track, 
body:last-child .selector {}
@supports (-moz-appearance: meterbar) and (display: flex) {}
@supports (-moz-appearance: meterbar) and (cursor: zoom-in) {}
@supports (-moz-appearance: meterbar) and (background-attachment: local) {}
@supports (-moz-appearance: meterbar) and (image-orientation: 90deg) {}
@supports (-moz-appearance: meterbar) and (all: initial) {}
@supports (-moz-appearance: meterbar) and (list-style-type: japanese-formal) {}
@media all and (min--moz-device-pixel-ratio: 0) and (min-resolution: 30dpcm) {}
@supports (-moz-appearance: meterbar) and (background-blend-mode: difference, normal) {}
_:-moz-tree-row(hover), 
.selector {}
_::selection, 
.selector:not([attr*=""]) {}
@supports (-webkit-appearance: none) {}
* html .selector {}
.unused-class.selector {}
html > body .selector {}
*:first-child + html .selector {}
.selector, 
x:-ie7 {}
* + html .selector {}
body *.selector {}
.selector\  {}
html > body .selector {}
head ~ body .selector {}
_::selection, 
.selector:not([attr*=""]) {}
:root .selector {}
body:last-child .selector {}
body:nth-of-type(1) .selector {}
body:first-of-type .selector {}
.selector:not([attr*=""]) {}
.selector {
  _property: value;
}
.selector {
  -property: value;
}
.selector {
  property: value\9 ;
}
.selector {
  property: value\9 ;
}
.selector {
  !property: value;color: red;
}
.selector {
  $property: value;color: red;
}
.selector {
  &property: value;color: red;
}
.selector {
  *property: value;color: red;
}
.selector {
  )property: value;color: red;
}
.selector {
  =property: value;color: red;
}
.selector {
  %property: value;color: red;
}
.selector {
  +property: value;color: red;
}
.selector {
  color: red;
  @property: value;
}
.selector {
  ,property: value;color: red;
}
.selector {
  .property: value;color: red;
}
.selector {
  /property: value;color: red;
}
.selector {
  `property: value;color: red;
}
.selector {
  ]property: value;color: red;
}
.selector {
  #property: value;color: red;
}
.selector {
  ~property: value;color: red;
}
.selector {
  ?property: value;color: red;
}
.selector {
  :property: value;color: red;
}
.selector {
  |property: value;color: red;
}
.selector {
  property: value !ie;
}
@media screen\9  {}
@media �screen\,screen\9  {}
@media �screen {}
@media screen and (min-width: 0\0) {}
_:-ms-input-placeholder, 
:root .selector {}
_:-ms-fullscreen, 
:root .selector {}
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {}
@media screen {
  @media (min-width: 0px) {}
}
.selector:not(*:root) {}
@supports (-webkit-appearance: none) {}
.selector {
  (;property: value;);}
.selector {
  [;property: value;];}
html:first-child .selector {}
_:-o-prefocus, 
body:last-child .selector {}
@media all and (-webkit-min-device-pixel-ratio: 10000), not all and (-webkit-min-device-pixel-ratio: 0) {}
@media (min-resolution: 0.001dpcm) {
  _:-o-prefocus, 
  .selector {}
}
*|html[xmlns*=""] .selector {}
@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
  .selector {}
}
.selector:not(*:root) {}
@supports (-webkit-appearance: none) {}
.selector {
  (;property: value;);}
.selector {
  [;property: value;];}
@media screen and (min-width: 0\0) {}
@media screen {
  @media (min-width: 0px) {}
}
html:first-child .selector {}
html[xmlns*=""] body:last-child .selector {}
html[xmlns*=""]:root .selector {}
*|html[xmlns*=""] .selector {}
_::-moz-svg-foreign-content, 
:root .selector {}
@media \\0 screen {}
a {
  *color : black;_background: white;
  font-size: big;
  $(var)-size: 100%;}
a {
  *b:c}
div {
  color: red;
}
selector {
  property: value;
  property: normal-value;
}
div {
  color: red;
}
