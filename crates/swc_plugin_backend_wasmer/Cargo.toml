[package]
name = "swc_plugin_backend_wasmer"
version = "0.1.0"
edition.workspace = true
license.workspace = true
repository.workspace = true

[features]
default = ["plugin_transform_host_native"]
plugin_transform_host_js = [
  "wasmer/js-default",
  "wasmer-wasix/js-default",
  "wasmer-compiler-cranelift/wasm",
]
plugin_transform_host_native = [
  "wasmer/cranelift",
  "wasmer/sys",
  "wasmer-wasix/sys-minimal",
  "wasmer-wasix/host-fs",
  "wasmer-compiler-cranelift/default",
]

[dependencies]
anyhow       = { workspace = true }
enumset      = { workspace = true }
parking_lot  = { workspace = true }
wasmer       = { workspace = true }
wasmer-wasix = { workspace = true }

swc_common = { version = "14.0.2", path = "../swc_common", features = [
  "concurrent",
] }
swc_plugin_runner = { version = "17.0.0", path = "../swc_plugin_runner" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
wasmer-compiler-cranelift = { version = "6.1.0-rc.2", default-features = false }

[dev-dependencies]
codspeed-criterion-compat = { workspace = true }
rustc-hash                = { workspace = true }
serde                     = { workspace = true, features = ["derive"] }
serde_json                = { workspace = true }
tokio                     = { workspace = true, features = ["rt"] }
tracing                   = { workspace = true }

swc_plugin_runner = { version = "17.0.0", path = "../swc_plugin_runner", features = ["rkyv-impl", "plugin_transform_schema_v1"] }
swc_css_ast = { version = "14.0.0", path = "../swc_css_ast", features = [
  "rkyv-impl",
] }
swc_css_parser = { version = "14.0.0", path = "../swc_css_parser" }
swc_ecma_ast = { version = "14.0.0", path = "../swc_ecma_ast", features = [
  "rkyv-impl",
] }
swc_ecma_parser = { version = "22.0.3", path = "../swc_ecma_parser" }
swc_ecma_visit = { version = "14.0.0", path = "../swc_ecma_visit" }
swc_transform_common = { version = "8.0.0", path = "../swc_transform_common" }
swc_malloc = { version = "1.2.3", path = "../swc_malloc" }
testing = { version = "15.0.0", path = "../testing" }

[[bench]]
harness = false
name    = "ecma_invoke"
