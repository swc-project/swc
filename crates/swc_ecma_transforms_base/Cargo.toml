[package]
authors       = ["강동윤 <kdy1997.dev@gmail.com>"]
description   = "rust port of babel and closure compiler."
documentation = "https://rustdoc.swc.rs/swc_ecma_transforms_base/"
edition       = { workspace = true }
include       = ["Cargo.toml", "src/**/*.rs", "src/**/*.js"]
license       = { workspace = true }
name          = "swc_ecma_transforms_base"
repository    = { workspace = true }
version       = "27.0.0"

[lib]
bench = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(swc_ast_unknown)'] }

[features]
concurrent         = ["concurrent-renamer", "par-iter", "swc_ecma_utils/concurrent"]
concurrent-renamer = ["par-iter"]
# Allow helpers to be inlined. If this feature is disabled, the helpers will always be imported.
inline-helpers = []

[dependencies]
better_scoped_tls = { version = "1.0.1", path = "../better_scoped_tls" }
indexmap          = { workspace = true }
once_cell         = { workspace = true }
par-core          = { workspace = true }
par-iter          = { workspace = true, optional = true }
phf               = { workspace = true, features = ["macros"] }
rustc-hash        = { workspace = true }
serde             = { workspace = true, features = ["derive"] }
tracing           = { workspace = true }

swc_atoms       = { version = "7.0.0", path = "../swc_atoms" }
swc_common      = { version = "14.0.4", path = "../swc_common" }
swc_ecma_ast    = { version = "15.0.0", path = "../swc_ecma_ast" }
swc_ecma_parser = { version = "24.0.3", path = "../swc_ecma_parser", default-features = false, features = ["typescript"] }
swc_ecma_utils  = { version = "21.0.0", path = "../swc_ecma_utils" }
swc_ecma_visit  = { version = "15.0.0", path = "../swc_ecma_visit" }

[dev-dependencies]
codspeed-criterion-compat = { workspace = true }
par-core                  = { workspace = true, features = ["chili"] }

swc_ecma_codegen           = { version = "17.0.2", path = "../swc_ecma_codegen" }
swc_ecma_transforms_macros = { version = "1.0.1", path = "../swc_ecma_transforms_macros" }
swc_malloc                 = { version = "1.2.3", path = "../swc_malloc" }
testing                    = { version = "15.0.0", path = "../testing" }

[[bench]]
harness = false
name    = "base"
[[bench]]
harness = false
name    = "parallel"
