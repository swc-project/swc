[
    JsDoc {
        span: Span {
            lo: BytePos(
                1,
            ),
            hi: BytePos(
                1,
            ),
            ctxt: #0,
        },
        description: Text {
            span: Span {
                lo: BytePos(
                    1,
                ),
                hi: BytePos(
                    133,
                ),
                ctxt: #0,
            },
            value: Atom('This provides methods used for event handling. It's not meant to
             * be used directly, except as a provider of related methods.
             *
             *' type=dynamic),
        },
        tags: [
            TagItem {
                span: Span {
                    lo: BytePos(
                        1,
                    ),
                    hi: BytePos(
                        6,
                    ),
                    ctxt: #0,
                },
                tag_name: Text {
                    span: Span {
                        lo: BytePos(
                            1,
                        ),
                        hi: BytePos(
                            6,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('mixin' type=inline),
                },
                tag: Mixin(
                    MixinTag {
                        span: Span {
                            lo: BytePos(
                                1,
                            ),
                            hi: BytePos(
                                6,
                            ),
                            ctxt: #0,
                        },
                        name: Text {
                            span: Span {
                                lo: BytePos(
                                    0,
                                ),
                                hi: BytePos(
                                    0,
                                ),
                                ctxt: #0,
                            },
                            value: Atom('' type=static),
                        },
                    },
                ),
            },
        ],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                173,
            ),
            hi: BytePos(
                173,
            ),
            ctxt: #0,
        },
        description: Text {
            span: Span {
                lo: BytePos(
                    173,
                ),
                hi: BytePos(
                    189,
                ),
                ctxt: #0,
            },
            value: Atom('fires something.' type=dynamic),
        },
        tags: [],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                228,
            ),
            hi: BytePos(
                228,
            ),
            ctxt: #0,
        },
        description: Text {
            span: Span {
                lo: BytePos(
                    228,
                ),
                hi: BytePos(
                    245,
                ),
                ctxt: #0,
            },
            value: Atom('handles a signal.' type=dynamic),
        },
        tags: [],
    },
    JsDoc {
        span: Span {
            lo: BytePos(
                280,
            ),
            hi: BytePos(
                280,
            ),
            ctxt: #0,
        },
        description: Text {
            span: Span {
                lo: BytePos(
                    280,
                ),
                hi: BytePos(
                    280,
                ),
                ctxt: #0,
            },
            value: Atom('' type=static),
        },
        tags: [
            TagItem {
                span: Span {
                    lo: BytePos(
                        280,
                    ),
                    hi: BytePos(
                        291,
                    ),
                    ctxt: #0,
                },
                tag_name: Text {
                    span: Span {
                        lo: BytePos(
                            280,
                        ),
                        hi: BytePos(
                            291,
                        ),
                        ctxt: #0,
                    },
                    value: Atom('constructor' type=static),
                },
                tag: Class(
                    ClassTag {
                        span: Span {
                            lo: BytePos(
                                280,
                            ),
                            hi: BytePos(
                                291,
                            ),
                            ctxt: #0,
                        },
                        ty: Some(
                            Text {
                                span: Span {
                                    lo: BytePos(
                                        280,
                                    ),
                                    hi: BytePos(
                                        297,
                                    ),
                                    ctxt: #0,
                                },
                                value: Atom('* @mixes Eventful' type=dynamic),
                            },
                        ),
                        name: None,
                    },
                ),
            },
        ],
    },
]
