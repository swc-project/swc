{
  "mappings": ";;;AAAA,SACIA,UAAU,EACVC,IAAI,EACJC,SAAS,EACTC,IAAI,EACJC,GAAG,EACHC,KAAK,EACLC,kBAAkB,EAClBC,eAAe,QACZ,iBAAiB;AAExB,SACIC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,QACjB,gCAAgC;AACvC,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASA,QAAQC,QAAQ,QAAQ,kCAAkC;AACnE,SAASC,kCAAkC,QAAQ,0DAA0D;AAC7G,SAASC,WAAW,QAAQ,2BAA2B;AAIvD,OAAO,MAAMC;IACTC,YAAY,AAAQC,WAAwB,CAAE;aAA1BA,cAAAA;IAA4B;IAEhD,MACMC,OAAO,AAAQC,aAA4B,EAAE;QAC/C,OAAO,IAAI,CAACF,WAAW,CAACG,MAAM,CAACD;IACnC;IAEA,MAEME,OACF,AAAaC,MAAc,EAC3B,AAAQC,aAA4B,EACpC,AAAQC,IAAc,EACxB;QACE,IAAIA,KAAKC,EAAE,KAAKH,QAAQ;YACpB,MAAM,IAAInB;QACd;QAEA,OAAO,IAAI,CAACc,WAAW,CAACI,MAAM,CAACC,QAAQC;IAC3C;AACJ;;IAlBKzB,KAAKQ;IACQN,aAAAA;;;eAAsB,yCAAA;;;GAJ3Be;;IAQRhB,UAAUW;IACVT,IAAIM;IAEAL,aAAAA,MAAM;IACNF,aAAAA;IACAW,aAAAA;;;;eADsB,yCAAA;eACT,oCAAA;;;GAbTI;AAAAA;IAFZlB,WAAWQ;IACXD,gBAAgBS,mCAAmCD;;;eAEf,uCAAA;;GADxBG",
  "names": [
    "Controller",
    "Post",
    "UseGuards",
    "Body",
    "Put",
    "Param",
    "ForbiddenException",
    "UseInterceptors",
    "USER_CONTROLLER_ROUTE",
    "USER_CREATE_ENDPOINT",
    "USER_UPDATE_ENDPOINT",
    "CreateUserDto",
    "UpdateUserDto",
    "JwtAuthGuard",
    "User",
    "UserType",
    "MongooseClassSerializerInterceptor",
    "UserService",
    "UserController",
    "constructor",
    "userService",
    "signup",
    "createUserDto",
    "create",
    "update",
    "userId",
    "updateUserDto",
    "user",
    "id"
  ],
  "rangeMappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sources": [
    "../../input/UserController.ts"
  ],
  "sourcesContent": [
    "import {\n    Controller,\n    Post,\n    UseGuards,\n    Body,\n    Put,\n    Param,\n    ForbiddenException,\n    UseInterceptors,\n} from '@nestjs/common';\n\nimport {\n    USER_CONTROLLER_ROUTE,\n    USER_CREATE_ENDPOINT,\n    USER_UPDATE_ENDPOINT,\n} from '@server/constants/controllers';\nimport { CreateUserDto } from '@server/user/dto/CreateUserDto';\nimport { UpdateUserDto } from '@server/user/dto/UpdateUserDto';\nimport { JwtAuthGuard } from '@server/auth/guards/JwtAuthGuard';\nimport { User } from '@server/decorators/UserDecorator';\nimport { User as UserType } from '@server/user/schemas/UserSchema';\nimport { MongooseClassSerializerInterceptor } from '@server/interceptors/MongooseClassSerializerInterceptor';\nimport { UserService } from '@server/user/UserService';\n\n@Controller(USER_CONTROLLER_ROUTE)\n@UseInterceptors(MongooseClassSerializerInterceptor(UserType))\nexport class UserController {\n    constructor(private userService: UserService) { }\n\n    @Post(USER_CREATE_ENDPOINT)\n    async signup(@Body() createUserDto: CreateUserDto) {\n        return this.userService.create(createUserDto);\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Put(USER_UPDATE_ENDPOINT)\n    async update(\n        @Param('id') userId: string,\n        @Body() updateUserDto: UpdateUserDto,\n        @User() user: UserType,\n    ) {\n        if (user.id !== userId) {\n            throw new ForbiddenException();\n        }\n\n        return this.userService.update(userId, updateUserDto);\n    }\n}\n"
  ],
  "version": 3
}
