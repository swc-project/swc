{
  "mappings": "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",
  "names": [
    "node",
    "create",
    "BodyBuilder",
    "trustBox",
    "TrustBoxBuilder",
    "opener",
    "OpenerBuilder",
    "stage",
    "BodyStageBuilder",
    "header",
    "BodyHeaderBuilder",
    "source",
    "nodes",
    "ArticleSourceBuilder",
    "sources",
    "ArticleSourcesBuilder",
    "seq",
    "BodyStageSeqBuilder",
    "ArticleSourceSeqBuilder",
    "AbstractBuilder",
    "stages",
    "map",
    "mapBuildArg",
    "disclaimer",
    "articleSources",
    "build",
    "undefined",
    "hidden",
    "element",
    "image",
    "AbstractSeqBuilder",
    "mapBuildArgs",
    "companions",
    "commercialsEndOfStage",
    "buildListItem",
    "seqNextElement",
    "id",
    "hash",
    "array",
    "maybe",
    "seqBuilder",
    "variant",
    "constructor"
  ],
  "sources": [
    "../../input/index.ts"
  ],
  "sourcesContent": [
    "import { AbstractBuilder, AbstractSeqBuilder } from \"./AbstractBuilders\";\nimport { hash, mapBuildArg, mapBuildArgs } from \"./Builder.utils\";\nimport { image } from \"./ElementBuilder\";\n\nimport type {\n    Body,\n    BodyStage,\n    TrustBox,\n    RichText,\n    Opener,\n    BodyHeader,\n    Stage,\n    ArticleSource,\n    ArticleSources,\n} from \"@paper/models\";\nimport type {\n    BuildArg,\n    BuildArgs,\n    CreateBuilder,\n    SeqElement,\n    SeqNextElementConverter,\n} from \"./types\";\n\n/**\n * @deprecated use {Builder.body.node.img()}\n */\nexport * from \"./BodyNodesBuilder\";\nexport * as node from \"./BodyNodesBuilder\";\n\nexport const create: CreateBuilder<BodyBuilder> = () => new BodyBuilder();\nexport const trustBox: CreateBuilder<TrustBoxBuilder> = () =>\n    new TrustBoxBuilder();\nexport const opener: CreateBuilder<OpenerBuilder> = () => new OpenerBuilder();\nexport const stage: CreateBuilder<BodyStageBuilder> = () =>\n    new BodyStageBuilder();\nexport const header: CreateBuilder<BodyHeaderBuilder> = () =>\n    new BodyHeaderBuilder();\nexport const source: CreateBuilder<\n    ArticleSourceBuilder,\n    BuildArgs<RichText.Node>\n> = (nodes: BuildArgs<RichText.Node> = []) =>\n    new ArticleSourceBuilder(...nodes);\nexport const sources: CreateBuilder<ArticleSourcesBuilder> = () =>\n    new ArticleSourcesBuilder();\n\nexport const seq = {\n    stage: (() =>\n        new BodyStageSeqBuilder()) as CreateBuilder<BodyStageSeqBuilder>,\n    source: (() =>\n        new ArticleSourceSeqBuilder()) as CreateBuilder<ArticleSourceSeqBuilder>,\n} as const;\n\nclass BodyBuilder extends AbstractBuilder<Body> {\n    #stages: BodyStage[] = [];\n    #trustBox?: TrustBox = undefined;\n    #disclaimer?: RichText.Node[] = undefined;\n    #articleSources?: ArticleSources = undefined;\n\n    stages(...stages: BuildArgs<BodyStage>): this {\n        this.#stages = stages.map(mapBuildArg);\n        return this;\n    }\n\n    trustBox(trustBox?: BuildArg<TrustBox>): this {\n        this.#trustBox = mapBuildArg(trustBox);\n        return this;\n    }\n\n    disclaimer(disclaimer?: BuildArgs<RichText.Node>): this {\n        this.#disclaimer = disclaimer?.map(mapBuildArg);\n        return this;\n    }\n\n    articleSources(articleSources?: BuildArg<ArticleSources>): this {\n        this.#articleSources = mapBuildArg(articleSources);\n        return this;\n    }\n\n    build(): Body {\n        return {\n            stages: this.#stages,\n            trustBox: this.#trustBox,\n            disclaimer: this.#disclaimer,\n            articleSources: this.#articleSources,\n        };\n    }\n}\n\nclass TrustBoxBuilder extends AbstractBuilder<TrustBox> {\n    #nodes: RichText.Node[] = [];\n    #hidden: RichText.Node[] = [];\n\n    nodes(nodes: BuildArgs<RichText.Node>): this {\n        this.#nodes = nodes.map(mapBuildArg);\n        return this;\n    }\n\n    hidden(hidden: BuildArgs<RichText.Node>): this {\n        this.#hidden = hidden.map(mapBuildArg);\n        return this;\n    }\n\n    build(): TrustBox {\n        return {\n            nodes: this.#nodes,\n            hidden: this.#hidden,\n        };\n    }\n}\n\nclass OpenerBuilder extends AbstractBuilder<Opener> {\n    #element: Opener[\"element\"] = image().build();\n\n    element(element: BuildArg<Opener[\"element\"]>): this {\n        this.#element = mapBuildArg(element);\n        return this;\n    }\n\n    build(): Opener {\n        return {\n            element: this.#element,\n        };\n    }\n}\n\nclass BodyStageSeqBuilder extends AbstractSeqBuilder<BodyStage> {\n    #nodes: SeqElement<RichText.Node[]> = [];\n    #header?: SeqElement<BodyHeader> = undefined;\n    #companions: SeqElement<Stage.CompanionItem[]> = [];\n    #commercialsEndOfStage: SeqElement<RichText.Node[]> = [];\n\n    nodes(nodes: SeqElement<BuildArgs<RichText.Node>>): this {\n        this.#nodes = nodes.map(mapBuildArgs);\n        return this;\n    }\n\n    header(header?: SeqElement<BuildArg<BodyHeader>>): this {\n        this.#header = mapBuildArgs(header ?? []);\n        return this;\n    }\n\n    companions(companions: SeqElement<BuildArgs<Stage.CompanionItem>>): this {\n        this.#companions = companions.map(mapBuildArgs);\n        return this;\n    }\n\n    commercialsEndOfStage(\n        commercialsEndOfStage: SeqElement<BuildArgs<RichText.Node>>\n    ): this {\n        this.#commercialsEndOfStage = commercialsEndOfStage.map(mapBuildArgs);\n        return this;\n    }\n\n    buildListItem(seqNextElement: SeqNextElementConverter): BodyStage {\n        return {\n            id: hash(\n                \"bodyStage\",\n                this.#nodes,\n                this.#companions,\n                this.#commercialsEndOfStage,\n                this.#header\n            ),\n            nodes: seqNextElement.array(this.#nodes),\n            header: seqNextElement.maybe(this.#header),\n            companions: seqNextElement.array(this.#companions),\n            commercialsEndOfStage: seqNextElement.array(\n                this.#commercialsEndOfStage\n            ),\n        };\n    }\n}\n\nclass BodyStageBuilder extends AbstractBuilder<BodyStage> {\n    #seqBuilder: BodyStageSeqBuilder = new BodyStageSeqBuilder();\n\n    nodes(nodes: BuildArgs<RichText.Node>): this {\n        this.#seqBuilder.nodes([nodes]);\n        return this;\n    }\n\n    header(header?: BuildArg<BodyHeader>): this {\n        if (header) {\n            this.#seqBuilder.header([header]);\n        }\n        return this;\n    }\n\n    companions(companions: BuildArgs<Stage.CompanionItem>): this {\n        this.#seqBuilder.companions([companions]);\n        return this;\n    }\n\n    commercialsEndOfStage(\n        commercialsEndOfStage: BuildArgs<RichText.Node>\n    ): this {\n        this.#seqBuilder.commercialsEndOfStage([commercialsEndOfStage]);\n        return this;\n    }\n\n    build(): BodyStage {\n        return this.#seqBuilder.build();\n    }\n}\n\nclass BodyHeaderBuilder extends AbstractBuilder<BodyHeader> {\n    #variant: BodyHeader[\"variant\"] = \"full\";\n    #opener?: Opener = undefined;\n\n    variant(variant: BodyHeader[\"variant\"]): this {\n        this.#variant = variant;\n        return this;\n    }\n\n    opener(opener: BuildArg<Opener>): this {\n        this.#opener = mapBuildArg(opener);\n        return this;\n    }\n\n    build(): BodyHeader {\n        return {\n            variant: this.#variant,\n            opener: this.#opener,\n        };\n    }\n}\n\nclass ArticleSourceSeqBuilder extends AbstractSeqBuilder<ArticleSource> {\n    #nodes: SeqElement<RichText.Node[]> = [];\n\n    nodes(nodes: SeqElement<BuildArgs<RichText.Node>>): this {\n        this.#nodes = nodes.map(mapBuildArgs);\n        return this;\n    }\n\n    buildListItem(seqNextElement: SeqNextElementConverter): ArticleSource {\n        const id = hash(\"article-source\", this.#nodes);\n        return {\n            id,\n            nodes: seqNextElement.array(this.#nodes),\n        };\n    }\n}\n\nclass ArticleSourceBuilder extends AbstractBuilder<ArticleSource> {\n    #seqBuilder: ArticleSourceSeqBuilder = new ArticleSourceSeqBuilder();\n\n    constructor(...nodes: BuildArgs<RichText.Node>) {\n        super();\n        this.nodes(...nodes);\n    }\n\n    nodes(...nodes: BuildArgs<RichText.Node>): this {\n        this.#seqBuilder.nodes([nodes]);\n        return this;\n    }\n\n    build(): ArticleSource {\n        return this.#seqBuilder.build();\n    }\n}\n\nclass ArticleSourcesBuilder extends AbstractBuilder<ArticleSources> {\n    #nodes: ArticleSource[] = [];\n    #hidden: ArticleSource[] = [];\n\n    nodes(...nodes: BuildArgs<ArticleSource>): this {\n        this.#nodes = nodes.map(mapBuildArg);\n        return this;\n    }\n\n    hidden(...hidden: BuildArgs<ArticleSource>): this {\n        this.#hidden = hidden.map(mapBuildArg);\n        return this;\n    }\n\n    build(): ArticleSources {\n        return {\n            nodes: this.#nodes,\n            hidden: this.#hidden,\n        };\n    }\n}\n"
  ],
  "version": 3
}
