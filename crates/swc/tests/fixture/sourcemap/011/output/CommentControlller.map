{
  "mappings": ";;;AAAA,SAASA,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEC,eAAe,QAAQ,iBAAiB;AAElG,SACIC,wBAAwB,EACxBC,uBAAuB,EACvBC,uBAAuB,QACpB,gCAAgC;AACvC,SAASC,kCAAkC,QAAQ,0DAA0D;AAC7G,SAASC,OAAO,QAAQ,wCAAwC;AAChE,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASA,QAAQC,QAAQ,QAAQ,kCAAkC;AACnE,SAASC,gBAAgB,QAAQ,uCAAuC;AAIxE,OAAO,MAAMC;IACTC,YAAY,AAAQC,cAA8B,CAAE;aAAhCA,iBAAAA;IAAkC;IAI/CC,cACH,AAAaC,EAAU,EACvB,AAAQC,gBAAkC,EAC1C,AAAQC,IAAc,EACxB;QACE,OAAO,IAAI,CAACJ,cAAc,CAACK,MAAM,CAACH,IAAIC,kBAAkBC,KAAKF,EAAE;IACnE;IAIOI,cAAc,AAAaJ,EAAU,EAAE,AAAQE,IAAc,EAAE;QAClE,OAAO,IAAI,CAACJ,cAAc,CAACO,MAAM,CAACL,IAAIE,KAAKF,EAAE;IACjD;AACJ;;IAfKhB,UAAUQ;IACVT,IAAIK;IAEAN,aAAAA,MAAM;IACNH,aAAAA;IACAc,aAAAA;;;;eADyB,4CAAA;eACZ,oCAAA;;;GARTG;;IAaRZ,UAAUQ;IACVX,OAAOM;IACcL,aAAAA,MAAM;IAAmBW,aAAAA;;;;eAAa,oCAAA;;;GAfnDG;AAAAA;IAFZhB,WAAWM;IACXD,gBAAgBI,mCAAmCC;;;eAEZ,0CAAA;;GAD3BM",
  "names": [
    "Body",
    "Controller",
    "Delete",
    "Param",
    "Put",
    "UseGuards",
    "UseInterceptors",
    "COMMENT_CONTROLLER_ROUTE",
    "COMMENT_DELETE_ENDPOINT",
    "COMMENT_UPDATE_ENDPOINT",
    "MongooseClassSerializerInterceptor",
    "Comment",
    "CommentService",
    "JwtAuthGuard",
    "User",
    "UserType",
    "UpdateCommentDto",
    "CommentController",
    "constructor",
    "commentService",
    "updateComment",
    "id",
    "updateCommentDto",
    "user",
    "update",
    "deleteComment",
    "delete"
  ],
  "rangeMappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sources": [
    "../../input/CommentControlller.ts"
  ],
  "sourcesContent": [
    "import { Body, Controller, Delete, Param, Put, UseGuards, UseInterceptors } from '@nestjs/common';\n\nimport {\n    COMMENT_CONTROLLER_ROUTE,\n    COMMENT_DELETE_ENDPOINT,\n    COMMENT_UPDATE_ENDPOINT,\n} from '@server/constants/controllers';\nimport { MongooseClassSerializerInterceptor } from '@server/interceptors/MongooseClassSerializerInterceptor';\nimport { Comment } from '@server/comment/schemas/CommentSchema';\nimport { CommentService } from '@server/comment/CommentService';\nimport { JwtAuthGuard } from '@server/auth/guards/JwtAuthGuard';\nimport { User } from '@server/decorators/UserDecorator';\nimport { User as UserType } from '@server/user/schemas/UserSchema';\nimport { UpdateCommentDto } from '@server/comment/dto/UpdateCommentDto';\n\n@Controller(COMMENT_CONTROLLER_ROUTE)\n@UseInterceptors(MongooseClassSerializerInterceptor(Comment))\nexport class CommentController {\n    constructor(private commentService: CommentService) { }\n\n    @UseGuards(JwtAuthGuard)\n    @Put(COMMENT_UPDATE_ENDPOINT)\n    public updateComment(\n        @Param('id') id: string,\n        @Body() updateCommentDto: UpdateCommentDto,\n        @User() user: UserType,\n    ) {\n        return this.commentService.update(id, updateCommentDto, user.id);\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Delete(COMMENT_DELETE_ENDPOINT)\n    public deleteComment(@Param('id') id: string, @User() user: UserType) {\n        return this.commentService.delete(id, user.id);\n    }\n}\n"
  ],
  "version": 3
}
