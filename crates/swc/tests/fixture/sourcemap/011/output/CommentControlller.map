{
  "mappings": "AAAA;;;AAAA,SAASA,IAAI,AAAD,EAAGC,UAAU,AAAD,EAAGC,MAAM,AAAD,EAAGC,KAAK,AAAD,EAAGC,GAAG,AAAD,EAAGC,SAAS,AAAD,EAAGC,eAAe,AAAD,QAAS,gBAAe,CAAC;AAEjG,SACIC,wBAAwB,AAAD,EACvBC,uBAAuB,AAAD,EACtBC,uBAAuB,AAAD,QACnB,+BAA8B,CAAC;AACtC,SAASC,kCAAkC,AAAD,QAAS,yDAAwD,CAAC;AAC5G,SAASC,OAAO,AAAD,QAAS,uCAAsC,CAAC;AAC/D,SAASC,cAAc,AAAD,QAAS,gCAA+B,CAAC;AAC/D,SAASC,YAAY,AAAD,QAAS,kCAAiC,CAAC;AAC/D,SAASC,IAAI,AAAD,QAAS,kCAAiC,CAAC;AACvD,SAASA,IAAI,IAAIC,QAAQ,AAAD,QAAS,iCAAgC,CAAC;AAClE,SAASC,gBAAgB,AAAD,QAAS,sCAAqC,CAAC;AAIvE,WAAaC,iBAAiB,GAAvB;IACHC,YAAoBC,cAA8B,CAAE;QAAhCA,sBAAAA,cAA8B,AAAD,CAAC;KAAI;IAI/CC,aAAa,CAChB,AAAaC,EAAU,AAAD,EACtB,AAAQC,gBAAkC,AAAD,EACzC,AAAQC,IAAc,AAAD,EACvB;QACE,OAAO,IAAI,CAACJ,cAAc,AAAD,CAAEK,MAAM,AAAD,CAAEH,EAAE,EAAEC,gBAAgB,EAAEC,IAAI,CAACF,EAAE,AAAD,CAAC,CAAC;KACpE;IAIOI,aAAa,CAAC,AAAaJ,EAAU,AAAD,EAAG,AAAQE,IAAc,AAAD,EAAG;QAClE,OAAO,IAAI,CAACJ,cAAc,AAAD,CAAEO,MAAM,AAAD,CAAEL,EAAE,EAAEE,IAAI,CAACF,EAAE,AAAD,CAAC,CAAC;KAClD;CACJ,CAAA;;IAfKhB,SAAS,CAACQ,YAAY,CAAA;IACtBT,GAAG,CAACK,uBAAuB,CAAA;IAEvBN,aAAAA,KAAK,CAAC,IAAG,CAAC,CAAA;IACVH,aAAAA,IAAI,EAAC,CAAA;IACLc,aAAAA,IAAI,EAAC,CAAA;;;;eADoB,gBAAgB,4BAAhB,gBAAgB;eAC5B,QAAQ,4BAAR,QAAQ;;GARjBG,iBAAiB;;IAazBZ,SAAS,CAACQ,YAAY,CAAA;IACtBX,MAAM,CAACM,uBAAuB,CAAA;IACTL,aAAAA,KAAK,CAAC,IAAG,CAAC,CAAA;IAAeW,aAAAA,IAAI,EAAC,CAAA;;;;eAAQ,QAAQ,4BAAR,QAAQ;;GAf3DG,iBAAiB;AAAjBA,iBAAiB;IAF7BhB,UAAU,CAACM,wBAAwB,CAAA;IACnCD,eAAe,CAACI,kCAAkC,CAACC,OAAO,CAAA,CAAC;;;eAEpB,cAAc,4BAAd,cAAc;;GADzCM,iBAAiB",
  "names": [
    "Body",
    "Controller",
    "Delete",
    "Param",
    "Put",
    "UseGuards",
    "UseInterceptors",
    "COMMENT_CONTROLLER_ROUTE",
    "COMMENT_DELETE_ENDPOINT",
    "COMMENT_UPDATE_ENDPOINT",
    "MongooseClassSerializerInterceptor",
    "Comment",
    "CommentService",
    "JwtAuthGuard",
    "User",
    "UserType",
    "UpdateCommentDto",
    "CommentController",
    "constructor",
    "commentService",
    "updateComment",
    "id",
    "updateCommentDto",
    "user",
    "update",
    "deleteComment",
    "delete"
  ],
  "sources": [
    "../../input/CommentControlller.ts"
  ],
  "sourcesContent": [
    "import { Body, Controller, Delete, Param, Put, UseGuards, UseInterceptors } from '@nestjs/common';\n\nimport {\n    COMMENT_CONTROLLER_ROUTE,\n    COMMENT_DELETE_ENDPOINT,\n    COMMENT_UPDATE_ENDPOINT,\n} from '@server/constants/controllers';\nimport { MongooseClassSerializerInterceptor } from '@server/interceptors/MongooseClassSerializerInterceptor';\nimport { Comment } from '@server/comment/schemas/CommentSchema';\nimport { CommentService } from '@server/comment/CommentService';\nimport { JwtAuthGuard } from '@server/auth/guards/JwtAuthGuard';\nimport { User } from '@server/decorators/UserDecorator';\nimport { User as UserType } from '@server/user/schemas/UserSchema';\nimport { UpdateCommentDto } from '@server/comment/dto/UpdateCommentDto';\n\n@Controller(COMMENT_CONTROLLER_ROUTE)\n@UseInterceptors(MongooseClassSerializerInterceptor(Comment))\nexport class CommentController {\n    constructor(private commentService: CommentService) { }\n\n    @UseGuards(JwtAuthGuard)\n    @Put(COMMENT_UPDATE_ENDPOINT)\n    public updateComment(\n        @Param('id') id: string,\n        @Body() updateCommentDto: UpdateCommentDto,\n        @User() user: UserType,\n    ) {\n        return this.commentService.update(id, updateCommentDto, user.id);\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Delete(COMMENT_DELETE_ENDPOINT)\n    public deleteComment(@Param('id') id: string, @User() user: UserType) {\n        return this.commentService.delete(id, user.id);\n    }\n}\n"
  ],
  "version": 3
}
