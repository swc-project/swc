  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[1:1]
 1 | new RegExp("abc");
   : ^^^^^^^^^^^^^^^^^
 2 | new RegExp("abc", "u");
 3 | RegExp("abc");
 4 | RegExp("abc", "u");
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[2:1]
 1 | new RegExp("abc");
 2 | new RegExp("abc", "u");
   : ^^^^^^^^^^^^^^^^^^^^^^
 3 | RegExp("abc");
 4 | RegExp("abc", "u");
 5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[3:1]
 1 | new RegExp("abc");
 2 | new RegExp("abc", "u");
 3 | RegExp("abc");
   : ^^^^^^^^^^^^^
 4 | RegExp("abc", "u");
 5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
 6 | RegExp(`^\\d\\.$`);
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[4:1]
 1 | new RegExp("abc");
 2 | new RegExp("abc", "u");
 3 | RegExp("abc");
 4 | RegExp("abc", "u");
   : ^^^^^^^^^^^^^^^^^^
 5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
 6 | RegExp(`^\\d\\.$`);
 7 | new RegExp(String.raw`^\d\.$`);
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[5:1]
 2 | new RegExp("abc", "u");
 3 | RegExp("abc");
 4 | RegExp("abc", "u");
 5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 6 | RegExp(`^\\d\\.$`);
 7 | new RegExp(String.raw`^\d\.$`);
 8 | /abc/;
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
   ,-[6:1]
 3 | RegExp("abc");
 4 | RegExp("abc", "u");
 5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
 6 | RegExp(`^\\d\\.$`);
   : ^^^^^^^^^^^^^^^^^^
 7 | new RegExp(String.raw`^\d\.$`);
 8 | /abc/;
 9 | /abc/u;
   `----
  x Use a regular expression literal instead of the 'RegExp' constructor
    ,-[7:1]
  4 | RegExp("abc", "u");
  5 | new RegExp("\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d");
  6 | RegExp(`^\\d\\.$`);
  7 | new RegExp(String.raw`^\d\.$`);
    : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  8 | /abc/;
  9 | /abc/u;
 10 | /\d\d\.\d\d\.\d\d\d\d/;
    `----
  x Use a regular expression literal instead of the 'RegExp' constructor
    ,-[38:1]
 35 | })("a", "b");
 36 | 
 37 | foo(() => {
 38 |     new RegExp("a");
    :     ^^^^^^^^^^^^^^^
 39 | })("a", "b");
 40 | 
 41 | new RegExp("a", "b", "c");
    `----
