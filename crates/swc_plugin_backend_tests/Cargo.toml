[package]
name          = "swc_plugin_backend_tests"
version       = "0.0.0"
edition       = { workspace = true }
license       = { workspace = true }
repository    = { workspace = true }
authors       = ["강동윤 <kdy1997.dev@gmail.com>"]
description   = "swc plugin backend tests and benchmarks"
publish       = false

[lib]
bench   = false
doctest = false

[features]
# for ast_node macro
default = ["encoding-impl"]
__rkyv = []
rkyv-impl = []
serde-impl = []
encoding-impl = []

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(swc_ast_unknown)'] }

[dev-dependencies]
anyhow                    = { workspace = true }
codspeed-criterion-compat = { workspace = true }
rustc-hash                = { workspace = true }
serde                     = { workspace = true, features = ["derive"] }
serde_json                = { workspace = true }
tokio                     = { workspace = true, features = ["rt"] }
tracing                   = { workspace = true }
cbor4ii                   = { workspace = true, features = [ "use_std" ] }

swc_common = { version = "16.0.0", path = "../swc_common", features = [
  "concurrent",
] }
swc_plugin_runner = { version = "21.0.0", path = "../swc_plugin_runner", features = ["encoding-impl", "plugin_transform_schema_v1"] }
swc_ecma_ast = { version = "17.0.0", path = "../swc_ecma_ast", features = [
  "encoding-impl",
] }
swc_ecma_parser = { version = "26.0.1", path = "../swc_ecma_parser" }
swc_ecma_visit = { version = "17.0.0", path = "../swc_ecma_visit" }
swc_transform_common = { version = "10.0.0", path = "../swc_transform_common" }
swc_malloc = { version = "1.2.4", path = "../swc_malloc" }
testing = { version = "17.0.0", path = "../testing" }

swc_plugin_backend_wasmer = { version = "4.0", path = "../swc_plugin_backend_wasmer" }
swc_plugin_backend_wasmtime = { version = "3.0", path = "../swc_plugin_backend_wasmtime" }

[[bench]]
harness = false
name    = "ecma_invoke"

[package.metadata.cargo-shear]
ignored = [
  # false positive, use by ast_node macro
  "cbor4ii",
]
