[package]
authors     = ["강동윤 <kdy1997.dev@gmail.com>"]
description = "Linter for the swc project"
edition     = { workspace = true }
include     = ["Cargo.toml", "src/**/*.rs"]
license     = { workspace = true }
name        = "swc_ecma_lints"
repository  = { workspace = true }
version     = "10.0.0"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
bench = false

[dependencies]
auto_impl   = { workspace = true }
dashmap     = { workspace = true }
parking_lot = { workspace = true }
regex       = { workspace = true }
rustc-hash  = { workspace = true }
serde       = { workspace = true, features = ["derive"] }

swc_atoms = { version = "4.0.0", path = "../swc_atoms" }
swc_common = { version = "7.0.0", path = "../swc_common", features = [
  "concurrent",
] }
swc_config = { version = "2.0.0", path = "../swc_config" }
swc_ecma_ast = { version = "7.0.0", path = "../swc_ecma_ast", features = [
  "serde",
] }
swc_ecma_utils = { version = "10.0.0", path = "../swc_ecma_utils" }
swc_ecma_visit = { version = "7.0.0", path = "../swc_ecma_visit" }
swc_parallel = { version = "1.2.0", path = "../swc_parallel", default-features = false }

[dev-dependencies]
anyhow                    = { workspace = true }
codspeed-criterion-compat = { workspace = true }
criterion                 = { workspace = true }
pretty_assertions         = { workspace = true }
swc_ecma_codegen          = { version = "7.0.0", path = "../swc_ecma_codegen" }
swc_ecma_parser           = { version = "9.0.0", path = "../swc_ecma_parser" }
swc_ecma_testing          = { version = "7.0.0", path = "../swc_ecma_testing" }
swc_ecma_transforms_base  = { version = "10.0.0", path = "../swc_ecma_transforms_base" }
swc_malloc                = { version = "1.0.0", path = "../swc_malloc" }
testing                   = { version = "7.0.0", path = "../testing" }
walkdir                   = { workspace = true }

[features]
non_critical_lints = []


[[bench]]
harness = false
name    = "all"
