[package]
authors = ["강동윤 <kdy1997.dev@gmail.com>"]
description = "preset-env for the swc"
documentation = "https://rustdoc.swc.rs/swc_ecma_preset_env/"
edition = { workspace = true }
include = [
  "Cargo.toml",
  "build.rs",
  "src/**/*.rs",
  "src/**/*.json",
  "data/**/*.json",
]
license = { workspace = true }
name = "swc_ecma_preset_env"
repository = { workspace = true }
version = "38.0.0"

[lib]
bench = false

[features]
default    = ["serde-impl"]
serde-impl = ["serde"]

[dependencies]
indexmap   = { workspace = true }
once_cell  = { workspace = true }
serde      = { workspace = true, features = ["derive"], optional = true }
serde_json = { workspace = true }

preset_env_base = { version = "5.0.0", path = "../preset_env_base" }

foldhash        = { workspace = true }
precomputed-map = { workspace = true }

rustc-hash = { workspace = true }
string_enum = { version = "1.0.2", path = "../string_enum" }
swc_atoms = { version = "8.0.2", path = "../swc_atoms" }
swc_common = { version = "16.0.0", path = "../swc_common" }
swc_ecma_ast = { version = "17.0.0", path = "../swc_ecma_ast" }
swc_ecma_compiler = { version = "7.0.0", path = "../swc_ecma_compiler" }
swc_ecma_transforms = { version = "37.0.0", path = "../swc_ecma_transforms", features = [
  "compat",
  "proposal",
] }
swc_ecma_utils = { version = "23.0.0", path = "../swc_ecma_utils" }
swc_ecma_visit = { version = "17.0.0", path = "../swc_ecma_visit" }

[build-dependencies]
anyhow          = { workspace = true }
foldhash        = { workspace = true }
precomputed-map = { workspace = true, features = ["builder"] }
rustc-hash      = { workspace = true }
serde           = { workspace = true, features = ["derive"] }
serde_json      = { workspace = true }

[dev-dependencies]
codspeed-criterion-compat = { workspace = true }
pretty_assertions         = { workspace = true }

swc_ecma_codegen = { version = "19.0.0", path = "../swc_ecma_codegen" }
swc_ecma_parser  = { version = "26.0.1", path = "../swc_ecma_parser" }
testing          = { version = "17.0.0", path = "../testing" }

[[bench]]
harness = false
name    = "polyfills"
