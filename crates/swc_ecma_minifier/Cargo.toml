[package]
authors       = ["강동윤 <kdy1997.dev@gmail.com>"]
description   = "EcmaScript code minifier."
documentation = "https://rustdoc.swc.rs/swc_ecma_minifier/"
edition       = "2021"
include       = ["Cargo.toml", "src/**/*.rs", "src/lists/*.json"]
license       = "Apache-2.0"
name          = "swc_ecma_minifier"
repository    = "https://github.com/swc-project/swc.git"
version       = "0.181.3"

  [package.metadata.docs.rs]
  all-features = true
  rustdoc-args = ["--cfg", "docsrs"]

[lib]
bench = false

[features]
# This enables global concurrent mode
concurrent = [
  "swc_common/concurrent",
  "swc_ecma_transforms_base/concurrent-renamer",
  "swc_ecma_transforms_optimization/concurrent",
  "rayon",
  "indexmap/rayon",
]
debug = ["backtrace", "swc_ecma_transforms_optimization/debug"]
default = ["serde-impl"]
# Implement serialize/deserialize for more types
extra-serde = ["swc_ecma_ast/serde-impl", "serde-impl"]
serde-impl  = []
trace-ast   = []

[dependencies]
ahash             = "0.7.6"
arrayvec          = "0.7.2"
backtrace         = { version = "0.3.61", optional = true }
indexmap          = "1.6.1"
num-bigint        = "0.4.3"
num_cpus          = "1.13.1"
once_cell         = "1.10.0"
parking_lot       = "0.12.0"
pretty_assertions = { version = "1.1", optional = true }
radix_fmt         = "=1.0.0"
rayon             = { version = "1.5.1", optional = true }
regex             = "1.5.3"
rustc-hash        = "1.1.0"
ryu-js            = "0.2.2"
serde             = { version = "1.0.118", features = ["derive"] }
serde_json        = "1.0.61"
tracing           = "0.1.32"

swc_atoms = { version = "0.5.5", path = "../swc_atoms" }
swc_cached = { version = "0.3.15", path = "../swc_cached" }
swc_common = { version = "0.31.8", path = "../swc_common" }
swc_config = { version = "0.1.5", path = "../swc_config" }
swc_ecma_ast = { version = "0.104.1", path = "../swc_ecma_ast", features = [
  "serde",
] }
swc_ecma_codegen = { version = "0.139.3", path = "../swc_ecma_codegen" }
swc_ecma_parser = { version = "0.134.2", path = "../swc_ecma_parser" }
swc_ecma_transforms_base = { version = "0.127.3", path = "../swc_ecma_transforms_base" }
swc_ecma_transforms_optimization = { version = "0.187.3", path = "../swc_ecma_transforms_optimization" }
swc_ecma_usage_analyzer = { version = "0.13.2", path = "../swc_ecma_usage_analyzer" }
swc_ecma_utils = { version = "0.117.2", path = "../swc_ecma_utils" }
swc_ecma_visit = { version = "0.90.1", path = "../swc_ecma_visit" }
swc_timer = { version = "0.19.9", path = "../swc_timer" }

[dev-dependencies]
ansi_term         = "0.12.1"
anyhow            = "1"
criterion         = "0.3.5"
pretty_assertions = "1.1"
walkdir           = "2"

swc_ecma_testing = { version = "0.20.7", path = "../swc_ecma_testing" }
swc_node_base    = { version = "0.5.8", path = "../swc_node_base" }
testing          = { version = "0.33.9", path = "../testing" }

[[bench]]
harness = false
name    = "full"
