[package]
authors       = ["강동윤 <kdy1997.dev@gmail.com>"]
description   = "EcmaScript code minifier."
documentation = "https://rustdoc.swc.rs/swc_ecma_minifier/"
edition       = { workspace = true }
include       = ["Cargo.toml", "src/**/*.rs", "src/lists/*.json"]
license       = { workspace = true }
name          = "swc_ecma_minifier"
repository    = { workspace = true }
version       = "35.0.0"

  [package.metadata.docs.rs]
  all-features = true
  rustdoc-args = ["--cfg", "docsrs"]

[lib]
bench = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(swc_ast_unknown)'] }

[features]
# This enables global concurrent mode
concurrent = [
  "swc_common/concurrent",
  "swc_ecma_transforms_base/concurrent-renamer",
  "swc_ecma_transforms_optimization/concurrent",
]
debug = ["swc_ecma_transforms_optimization/debug"]
default = ["serde-impl"]
# Implement serialize/deserialize for more types
extra-serde = ["swc_ecma_ast/serde-impl", "serde-impl"]
serde-impl  = []
trace-ast   = []

[dependencies]
arrayvec = { workspace = true, default-features = false }
bitflags = { workspace = true, default-features = false }
indexmap = { workspace = true, default-features = false }
num-bigint = { workspace = true, default-features = false }
num_cpus = { workspace = true, default-features = false }
once_cell = { workspace = true, default-features = false }
par-core = { workspace = true, default-features = false }
par-iter = { workspace = true, default-features = false }
parking_lot = { workspace = true, default-features = false }
phf = { workspace = true, default-features = false }
pretty_assertions = { workspace = true, optional = true, default-features = false }
radix_fmt = { workspace = true, default-features = false }
rustc-hash = { workspace = true, default-features = false }
ryu-js = { workspace = true, default-features = false }
serde = { workspace = true, features = ["derive"], default-features = false }
serde_json = { workspace = true, default-features = false }
swc_atoms = { version = "8.0.2", path = "../swc_atoms", default-features = false }
swc_common = { version = "16.0.0", path = "../swc_common", default-features = false }
swc_config = { version = "3.1.2", path = "../swc_config", features = [
  "sourcemap",
  "file_pattern",
  "regex_js",
] }
swc_ecma_ast = { version = "17.0.0", path = "../swc_ecma_ast", features = [
  "serde",
] }
swc_ecma_codegen = { version = "19.0.0", path = "../swc_ecma_codegen", default-features = false }
swc_ecma_parser = { version = "26.0.1", path = "../swc_ecma_parser", default-features = false, features = [
  "typescript",
] }
swc_ecma_transforms_base = { version = "29.0.0", path = "../swc_ecma_transforms_base", default-features = false }
swc_ecma_transforms_optimization = { version = "31.0.0", path = "../swc_ecma_transforms_optimization", default-features = false }
swc_ecma_usage_analyzer = { version = "24.0.0", path = "../swc_ecma_usage_analyzer", default-features = false }
swc_ecma_utils = { version = "23.0.0", path = "../swc_ecma_utils", default-features = false }
swc_ecma_visit = { version = "17.0.0", path = "../swc_ecma_visit", default-features = false }
swc_timer = { version = "1.0.0", path = "../swc_timer", default-features = false }
tracing = { workspace = true, default-features = false }

[dev-dependencies]
ansi_term                 = { workspace = true, default-features = false }
anyhow                    = { workspace = true, default-features = false }
codspeed-criterion-compat = { workspace = true, default-features = true }
flate2                    = { workspace = true, default-features = false, features = ["zlib"] }
humansize                 = { workspace = true, default-features = false }
par-core                  = { workspace = true, features = ["chili"], default-features = false }
pretty_assertions         = { workspace = true, default-features = false }
swc_ecma_testing          = { version = "17.0.0", path = "../swc_ecma_testing", default-features = false }
swc_malloc                = { version = "1.2.4", path = "../swc_malloc", default-features = false }
testing                   = { version = "17.0.0", path = "../testing", default-features = false }
walkdir                   = { workspace = true, default-features = false }

[[bench]]
harness = false
name    = "full"
