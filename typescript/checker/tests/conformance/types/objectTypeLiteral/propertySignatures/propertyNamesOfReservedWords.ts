class C {
    abstract;
    as;
    boolean;
    break;
    byte;
    case;
    catch;
    char;
    class;
    continue;
    const;
    debugger;
    default;
    delete;
    do;
    double;
    else;
    enum;
    export;
    extends;
    false;
    final;
    finally;
    float;
    for;
    function;
    goto;
    if;
    implements;
    import;
    in;
    instanceof;
    int;
    interface;
    is;
    long;
    namespace;
    native;
    new;
    null;
    package;
    private;
    protected;
    public;
    return;
    short;
    static;
    super;
    switch;
    synchronized;
    this;
    throw;
    throws;
    transient;
    true;
    try;
    typeof;
    use;
    var;
    void;
    volatile;
    while;
    with;
}
var c: C;
var r1 = c.abstract;
var r2 = c.as;

interface I {
    abstract;
    as;
    boolean;
    break;
    byte;
    case;
    catch;
    char;
    class;
    continue;
    const;
    debugger;
    default;
    delete;
    do;
    double;
    else;
    enum;
    export;
    extends;
    false;
    final;
    finally;
    float;
    for;
    function;
    goto;
    if;
    implements;
    import;
    in;
    instanceof;
    int;
    interface;
    is;
    long;
    namespace;
    native;
    new;
    null;
    package;
    private;
    protected;
    public;
    return;
    short;
    static;
    super;
    switch;
    synchronized;
    this;
    throw;
    throws;
    transient;
    true;
    try;
    typeof;
    use;
    var;
    void;
    volatile;
    while;
    with;
}

var i: I;
var r3 = i.abstract;
var r4 = i.as;

var a: {
    abstract;
    as;
    boolean;
    break;
    byte;
    case;
    catch;
    char;
    class;
    continue;
    const;
    debugger;
    default;
    delete;
    do;
    double;
    else;
    enum;
    export;
    extends;
    false;
    final;
    finally;
    float;
    for;
    function;
    goto;
    if;
    implements;
    import;
    in;
    instanceof;
    int;
    interface;
    is;
    long;
    namespace;
    native;
    new;
    null;
    package;
    private;
    protected;
    public;
    return;
    short;
    static;
    super;
    switch;
    synchronized;
    this;
    throw;
    throws;
    transient;
    true;
    try;
    typeof;
    use;
    var;
    void;
    volatile;
    while;
    with;
}

var r5 = a.abstract;
var r6 = a.as;

enum E {
    abstract,
    as,
    boolean,
    break,
    byte,
    case,
    catch,
    char,
    class,
    continue,
    const,
    debugger,
    default,
    delete,
    do,
    double,
    else,
    enum,
    export,
    extends,
    false,
    final,
    finally,
    float,
    for,
    function,
    goto,
    if,
    implements,
    import,
    in,
    instanceof,
    int,
    interface,
    is,
    long,
    namespace,
    native,
    new,
    null,
    package,
    private,
    protected,
    public,
    return,
    short,
    static,
    super,
    switch,
    synchronized,
    this,
    throw,
    throws,
    transient,
    true,
    try,
    typeof,
    use,
    var,
    void,
    volatile,
    while,
    with,
}

var r7 = E.abstract;
var r8 = E.as;